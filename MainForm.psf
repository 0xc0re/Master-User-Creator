<File version="3.1">
  <FileID>c95ae3e0-a538-420a-aeb6-92411ccf751a</FileID>
  <Preview>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</Preview>
  <Form>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</Form>
  <Code><![CDATA[#region Control Helper Functions
function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[switch]$Append
	)
	
	if (-not $Append)
	{
		$listBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection])
	{
		$listBox.Items.AddRange($Items)
	}
	elseif ($Items -is [Array])
	{
		$listBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$listBox.Items.Add($obj)
		}
		$listBox.EndUpdate()
	}
	else
	{
		$listBox.Items.Add($Items)
	}
	
	$listBox.DisplayMember = $DisplayMember
}

function Update-ComboBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ComboBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ComboBox control.
	
	.PARAMETER ComboBox
		The ComboBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ComboBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
	
	.PARAMETER Append
		Adds the item(s) to the ComboBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red" -Append
		Update-ComboBox $combobox1 "White" -Append
		Update-ComboBox $combobox1 "Blue" -Append
	
	.EXAMPLE
		Update-ComboBox $combobox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ComboBox]$ComboBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[switch]$Append
	)
	
	if (-not $Append)
	{
		$ComboBox.Items.Clear()
	}
	
	if ($Items -is [Object[]])
	{
		$ComboBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ComboBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ComboBox.Items.Add($obj)
		}
		$ComboBox.EndUpdate()
	}
	else
	{
		$ComboBox.Items.Add($Items)
	}
	
	$ComboBox.DisplayMember = $DisplayMember
}
#endregion
$MainForm_Load={
	$maskedtextboxpassword.UseSystemPasswordChar = $true
	$textboxConfirmPassword.UseSystemPasswordChar = $true
	$textboxo365confirmpassword.UseSystemPasswordChar = $true
	$maskedtextboxo365password.UseSystemPasswordChar = $true
	
	$comboboxhidefromGAL.SelectedIndex = 1
	$comboboxO365HidefromGAL.SelectedIndex = 1
	
	$Groups = Get-ADGroup -Filter * | Where-Object {($_.Name -ne "Domain Users") -and ($_.Name -ne "Domain Computers")} | Select-Object -ExpandProperty Name | Sort-Object
	Update-ListBox -ListBox $checkedlistboxGroups -Items $Groups
	
	$groupboxNoAdSync.Enabled = $false
	$groupboxADSync.Enabled = $False

	$Netbiosname = (Get-ADDomain).NetBIOSName
	$textboxUPNDomain.Text = $Netbiosname + "\"
	
	#Disable the Office 365 license drop down until we connect to MSOnline
	$comboboxO365Licenses.Enabled = $False
	
	$Forest = Get-ADForest
	$UPNs = @()
	$extraUPNS = ($Forest | Select-Object UPNSuffixes -ExpandProperty UPNSuffixes)
	If ($extraUPNs -ne $Null)
	{
		foreach ($extraUPN in $extraUPNs)
		{
			$UPNs += "@" + $extraUPN
		}
	}
	$UPNs += "@" +  ($Forest | Select-Object -ExpandProperty Name)
	Update-ComboBox -ComboBox $comboboxDomains -Items $UPNs
	$comboboxDomains.SelectedIndex = 0
	
	$groupboxNoAdSync.Enabled = $false
	$tabcontrolUserProperties.Enabled = $false
	
	$radiobuttonDisableMFA.Checked = $true
	
	$buttonCreateUser.Enabled = $false
	
	$radiobuttonLocalPath.Checked = $true
	$comboboxDriveLetter.Enabled = $false
	
}

$buttonCreateUser_Click = {
	#If only an AD User is being made
	add-logs -text 'LOG: Checking to see what is being created'
	If (($checkboxCreateActiveDirector.Checked -eq $True) -and ($checkboxconfigo365user.Checked -eq $false))
	{
		add-logs -text 'LOG: Only an Active Directory user is being created'
		add-logs -text 'LOG: Checking all required parameters for data...'
		If (($checkboxUserCannotChangePass.Checked -eq $true) -and ($checkboxUserMustChangePasswo.Checked -eq $true))
		{
			add-logs -text 'WARN: You cannot check both User Must Change Password at Next Logon and User Cannot Change Password for the same user.'
			$InfoMessage = "You cannot check both User Must Change Password at Next Logon and User Cannot Change Password for the same user."
			$InfoTitle = "Warning"
			Show-MessageBox_psf
		}
		ElseIf (($checkboxPasswordNeverExpires.Checked -eq $true) -and ($checkboxUserMustChangePasswo.Checked -eq $true))
		{
			add-logs -text 'WARN: You have selected "Password never Expires". and "User must change password at next logon". They will be unable to change their password'
			$InfoMessage = 'You have selected "Password never Expires". and "User must change password at next logon". They will be unable to change their password'
			$InfoTitle = "Warning"
			Show-MessageBox_psf
		}
		Else
		{
			add-logs -text 'LOG: All required parameters are valid'
			Try
			{
				add-logs -text 'LOG: Converting password to SecureString'
				add-logs -text 'CMD: ConvertTo-SecureString -String $textboxConfirmPassword.Text'
				$PasswordSecureString = $textboxConfirmPassword.Text | ConvertTo-SecureString -AsPlainText -Force
				#Get disable account boolean
				add-logs -text 'LOG: Checking if account is disabled or enabled'
				$disabledaccount = ($checkboxAccountIsDisabled.checked)
				#If account should be disabled
				If ($disabledaccount -eq $true)
				{
					add-logs -text 'LOG: Account is disabled'
					add-logs -text 'LOG: Creating user'
					New-ADUser -Name ($textboxDisplayName.Text) -GivenName ($textboxFirstName.Text) -Surname ($textboxLastName.Text) -Initials ($textboxInitials.Text) -DisplayName ($textboxDisplayName.Text) -SamAccountName ($textboxSamAccount.text) -UserPrincipalName (($textboxUserLogonName.Text) + ($comboboxDomains.SelectedItem)) -EmailAddress ($textboxEmail.Text) -Description ($textboxDescription.Text) -Office ($textboxoffice.text) -OfficePhone ($textboxTelephone.text) -HomePage ($textboxWebPage.text) -StreetAddress ($textboxStreet.text) -State ($textboxstate.text) -PostalCode ($textboxzipcode.Text) -City ($textboxcity.text) -Title ($textboxjobtitle.text) -Department ($textboxDepartment.text) -Company ($textboxCompany.text) -POBox ($textboxPOBox.text) -ProfilePath ($textboxprofilepath.text) -ScriptPath ($textboxlogonscript.text) -PasswordNeverExpires ($checkboxPasswordNeverExpires.Checked) -Enabled $false -CannotChangePassword ($checkboxUserCannotChangePass.checked) -ChangePasswordAtLogon ($checkboxUserMustChangePasswo.Checked) -AccountPassword $PasswordSecureString
					$User = Get-ADUser -Filter * | Where-Object { ($_.Name -eq $textboxDisplayName.text) -and ($_.UserPrincipalName -eq (($textboxUserLogonName.Text) + ($comboboxDomains.SelectedItem))) }
					add-logs -text "LOG: User has been created"
					
					#Find if user should be added to any groups
					add-logs -text 'LOG: Getting checked groups'
					$groups = $checkedlistboxGroups.CheckedItems
					If ($groups -ne $null)
					{
						add-logs -text 'LOG: Groups found'
						foreach ($group in $groups)
						{
							add-logs -text "Adding $User to $Group"
							Add-ADGroupMember -Identity $Group -Members $User
						}
					}
					Else
					{
						add-logs -text 'LOG: No Groups checked'
					}
				}
				Else
				{
					add-logs -text 'LOG: Account is enabled'
					add-logs -text 'LOG: Creating user'
					New-ADUser -Name ($textboxDisplayName.Text) -GivenName ($textboxFirstName.Text) -Surname ($textboxLastName.Text) -Initials ($textboxInitials.Text) -DisplayName ($textboxDisplayName.Text) -SamAccountName ($textboxSamAccount.text) -UserPrincipalName (($textboxUserLogonName.Text) + ($comboboxDomains.SelectedItem)) -EmailAddress ($textboxEmail.Text) -Description ($textboxDescription.Text) -Office ($textboxoffice.text) -OfficePhone ($textboxTelephone.text) -HomePage ($textboxWebPage.text) -StreetAddress ($textboxStreet.text) -State ($textboxstate.text) -PostalCode ($textboxzipcode.Text) -City ($textboxcity.text) -Title ($textboxjobtitle.text) -Department ($textboxDepartment.text) -Company ($textboxCompany.text) -POBox ($textboxPOBox.text) -ProfilePath ($textboxprofilepath.text) -ScriptPath ($textboxlogonscript.text) -PasswordNeverExpires ($checkboxPasswordNeverExpires.Checked) -Enabled $true -CannotChangePassword ($checkboxUserCannotChangePass.checked) -ChangePasswordAtLogon ($checkboxUserMustChangePasswo.Checked) -AccountPassword $PasswordSecureString
					$User = Get-ADUser -Filter * | Where-Object { ($_.Name -eq $textboxDisplayName.text) -and ($_.UserPrincipalName -eq (($textboxUserLogonName.Text) + ($comboboxDomains.SelectedItem))) }
					add-logs -text "LOG: User has been created"
					
					#Find if user should be added to any groups
					add-logs -text 'LOG: Getting checked groups'
					$groups = $checkedlistboxGroups.CheckedItems
					If ($groups -ne $null)
					{
						add-logs -text 'LOG: Groups found'
						foreach ($group in $groups)
						{
							add-logs -text "Adding $User to $Group"
							Add-ADGroupMember -Identity $Group -Members $User
						}
					}
					Else
					{
						add-logs -text 'LOG: No Groups checked'
					}
				}
				
				
			}
			Catch
			{
				add-logs -text "WARN: $_"
				Add-Type -AssemblyName System.Windows.Forms
				[System.Windows.Forms.MessageBox]::Show($_, 'Warning', 'OK', 'Warning')
			}
		}
	}
	#If only Office 365 user is being created 
	ElseIf (($checkboxCreateActiveDirector.Checked -eq $false) -and ($checkboxconfigo365user.Checked -eq $true))
	{
		add-logs -text 'LOG: Only an Office 365 User is being created'
		#If user UPN is not entered display a error message
		If ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -lt 1)
		{
			
			$InfoMessage = "Please enter a UserPrincipalName as it's required"
			$InfoTitle = "Warning"
			Show-MessageBox_psf
		}
	}
	ElseIf (($checkboxCreateActiveDirector.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $true))
	{
		#If user logon name is not entered display a error message
		If (((($textboxSamAccount.Text | Measure-Object -Character).Characters) -lt 1) -or ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -lt 1))
		{
			$InfoMessage = "An Active Directory logon name (pre-windows 2000) and Office 365 UserPrincipalName are required"
			$InfoTitle = "Warning"
			Show-MessageBox_psf
		}
		add-logs -text 'LOG: Both an Office 365 User and Active Director User is being created'
	}
	Else
	{
		add-logs -text 'WARN: Nothing is being created!'
	}
	
	
	
}




$labelFirstName_Click={
	
}



$textboxDisplayName_TextChanged = {
	If ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0)
	{
		$labelDisplayName.Text = "Display Name:"
		$labelDisplayName.ForeColor = 'Black'
	}
	ElseIf ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -lt 1)
	{
		$labelDisplayName.Text = "*Display Name:"
		$labelDisplayName.ForeColor = 'Firebrick'
	}
	If (((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0)   )
	{
		$buttonCreateUser.Enabled = $true
	}
	Else
	{
		$buttonCreateUser.Enabled = $false
	}
	
}

$textboxLastName_TextChanged = {
	If ((($textboxInitials.text | Measure-Object -Character).Characters) -lt 1)
	{
		$textboxDisplayName.Text = $textboxFirstName.Text + " " + $textboxLastName.Text
	}
	Else
	{
		$textboxDisplayName.Text = $textboxFirstName.Text + " " + $textboxInitials.Text + "." + " " + $textboxLastName.Text
	}
}

$textboxFirstName_TextChanged = {
	If ((($textboxInitials.text | Measure-Object -Character).Characters) -lt 1)
	{
		$textboxDisplayName.Text = $textboxFirstName.text + " " + $textboxLastName.Text
	}
	Else
	{
		$textboxDisplayName.Text = $textboxFirstName.text + " " + $textboxInitials.Text + "." + " " + $textboxLastName.Text
	}
	
}

$textboxInitials_TextChanged = {
	If ((($textboxInitials.text | Measure-Object -Character).Characters) -lt 1)
	{
		$textboxDisplayName.Text = $textboxFirstName.text + " " + $textboxLastName.Text
	}
	Else
	{
		$textboxDisplayName.Text = $textboxFirstName.text + " " + $textboxInitials.text + "." + $textboxLastName.Text
	}
	
}

$button1_Click={
	Write-Host (($textboxInitials.text | Measure-Object -Character).Characters)
	
}

$buttonGeneratePassword_Click = {
	add-logs -text 'LOG: Generating random password'
	add-logs -text 'CMD: $textboxPasswordGen.Text = ([char[]]([char]33 .. [char]95) + ([char[]]([char]97 .. [char]126)) + 0 .. 9 | Sort-Object { Get-Random })[0 .. 10] -join '''
	$textboxPasswordGen.Text = ([char[]]([char]33 .. [char]95) + ([char[]]([char]97 .. [char]126)) + 0 .. 9 | Sort-Object { Get-Random })[0 .. 10] -join ''
	$maskedtextboxpassword.Text = $textboxPasswordGen.Text
	$textboxConfirmPassword.text = $textboxPasswordGen.Text
	
}

$textboxConfirmPassword_TextChanged = {
	If ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0)
	{
		$labelConfirmPassword.Text = "Confirm Password:"
		$labelConfirmPassword.ForeColor = 'Black'
	}
	ElseIf ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -lt 1)
	{
		$labelConfirmPassword.Text = "*Confirm Password:"
		$labelConfirmPassword.ForeColor = 'Firebrick'
	}
	
	If (((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -lt 1) -and ((($maskedtextboxpassword.Text | Measure-Object -Character).Characters) -lt 1))
	{
		$labelpasswordconfirmmessage.Text = ""
	}
	Else
	{
		If (($textboxConfirmPassword.Text) -ne ($maskedtextboxpassword.Text))
		{
			$labelpasswordconfirmmessage.ForeColor = 'Red'
			$labelpasswordconfirmmessage.Text = "Passwords do not match!"
			$buttonCreateUser.Enabled = $false
		}
		Else
		{
			
			
			$labelpasswordconfirmmessage.ForeColor = 'Green'
			$labelpasswordconfirmmessage.Text = "Passwords match!"
			If (((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
			{
				$buttonCreateUser.Enabled = $true
			}
			Else
			{
				$buttonCreateUser.Enabled = $false
			}
		}
	}
}

$buttonCopyOnPremUser_Click = {
	add-logs -text "LOG: Copying AD User attributes to Office 365 user"
	$textboxO365DisplayName.Text = $textboxDisplayName.Text
	$textboxO365Initials.Text = $textboxInitials.Text
	$textboxO365LastName.Text = $textboxLastName.Text
	$textboxO365FirstName.Text = $textboxFirstName.text
	#$buttonO365Genpassword.Enabled = $false
	$maskedtextboxo365password.Text = $maskedtextboxpassword.Text
	$textboxo365confirmpassword.Text = $textboxConfirmPassword.text
	$textboxo365passwordgen.Text = $textboxPasswordGen.text
	
	$textboxO365UPN.Text = ($textboxUserLogonName.text) + ($comboboxDomains.Text)
	
	$textboxo365city.Text = $textboxcity.Text
	$textboxO365street.Text = $textboxStreet.Text
	$textboxo365pobox.Text = $textboxPOBox.text
	$textboxo365zip.Text = $textboxzipcode.Text
	$textboxo365state.Text = $textboxstate.text
	
	$textboxo365proxyaddresses.Text = $textboxproxyaddress.Text
	$comboboxO365HidefromGAL.SelectedItem = $comboboxhidefromGAL.SelectedItem
	
	$checkboxo365usermustchangepassword.Checked = $checkboxUserMustChangePasswo.Checked
	add-logs -text "LOG: Copy Finished!"
	
}

$textboxo365confirmpassword_TextChanged={
	If (($textboxo365confirmpassword.Text) -ne ($maskedtextboxo365password.Text))
	{
		$labelo365password.ForeColor = 'Red'
		$labelo365password.Text = "Passwords do not match!"
	}
	Else
	{
		$labelo365password.ForeColor = 'Green'
		$labelo365password.Text = "Passwords match!"
	}
	
}

$buttonConnectToOffice365_Click = {
	If ($radiobuttonDisableMFA.Checked -eq $True)
	{
		$credential = Get-Credential -Message "Please enter your Office 365 credentials"
		If ($credential -eq $Null)
		{
			$InfoMessage = "No credentials were entered. Please enter valid Office 365 credentials"
			$InfoTitle = "Warning"
			Show-MessageBox_psf
		}
		Else
		{
			Import-Module MSOnline
			Connect-MsolService -Credential $credential
			$exchangeSession = New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri "https://outlook.office365.com/powershell-liveid/" -Authentication "Basic" -AllowRedirection -Credential $credential
			Import-PSSession $exchangeSession -AllowClobber
		}
	}
	Else
	{
		$Modules = Get-ChildItem $Env:LOCALAPPDATA\Apps\2.0\*\CreateExoPSSession.ps1 -Recurse | Select-Object -ExpandProperty Target -First 1
		foreach ($Module in $Modules)
		{
			Import-Module "$Module"
		}
		add-logs -text 'LOG: Connecting to MSOnline'
		#Connect to MSOnline w/2FA
		Connect-MsolService
		#Connect to Exchange Online w/ 2FA
		add-logs -text 'LOG: Connecting to Exchange Online'
		Connect-EXOPSSession
	}
	add-logs -text 'LOG: Checking to see if we are connected to Office 365'
	add-logs -text 'CMD: (Get-MsolDomain -ErrorAction SilentlyContinue) -ne $null'
	if ((Get-MsolDomain -ErrorAction SilentlyContinue) -ne $null)
	{
		
		add-logs -text 'LOG: Connected to Office 365!'
		add-logs -text 'LOG: Disabling connect to Office 365 button!'
		add-logs -text 'CMD: $buttonConnectToOffice365.Enabled = $False'
		$buttonConnectToOffice365.Enabled = $False
		
		#We only want licenses that have at least one to assign to a user
		add-logs -text 'LOG: Getting available licenses'
		add-logs -text 'CMD: Get-MsolAccountSku | Where-Object { $_.ActiveUnits -ne $_.ConsumedUnits }'
		$Avaialble = Get-MsolAccountSku | Where-Object { $_.ActiveUnits -ne $_.ConsumedUnits }
		
		
		add-logs -text 'LOG: Enabling Licenses combobox'
		add-logs -text 'CMD: $comboboxO365Licenses.Enabled = $True'
		$comboboxO365Licenses.Enabled = $True
		
		
		add-logs -text 'LOG: Loading license combobox with available licenses'
		add-logs -text 'CMD: Update-ComboBox -ComboBox $comboboxO365Licenses ($Avaialble).AccountSkuId'
		Update-ComboBox -ComboBox $comboboxO365Licenses ($Avaialble).AccountSkuId
		
		
		add-logs -text 'LOG: Loading Office 365 Groups ListBox'
		add-logs -text 'CMD: Update-ListBox -ListBox $checkedlistboxo365groups -Items (Get-MsolGroup | Select-Object -ExpandProperty DisplayName | Sort-Object)'
		Update-ListBox -ListBox $checkedlistboxo365groups -Items (Get-MsolGroup | Select-Object -ExpandProperty DisplayName | Sort-Object)
		
		
		$labelO365Groups.Text = "Please check all groups you want your user to be a member of. 
This feature is not available for AD-Synced environments"
		
		$labelsharedmailboxes.text = "Please check all Shared Mailboxes you want your user to have Full Access on.
		This feature is not available for AD-Synced environments"
		
		add-logs -text 'LOG: Getting all Shared Mailboxes'
		$Shared = Get-Mailbox | Where-Object { $_.RecipientTypeDetails -eq "SharedMailbox" } | Select-Object -ExpandProperty DisplayName | Sort-Object
		Update-ListBox -ListBox $checkedlistboxsharedmailboxes -Items $Shared
		
	}
	Else
	{
		add-logs -text 'WARN: Not connected to Office 365!'
	}
	
	
	
}



$buttonO365Genpassword_Click = {
	$textboxo365passwordgen.Text = ([char[]]([char]33 .. [char]95) + ([char[]]([char]97 .. [char]126)) + 0 .. 9 | Sort-Object { Get-Random })[0 .. 10] -join ''
	$maskedtextboxo365password.Text = $textboxo365passwordgen.Text
	$textboxo365confirmpassword.Text = $textboxo365passwordgen.Text

	
}

$tooltip1_Popup=[System.Windows.Forms.PopupEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.PopupEventArgs]
	#TODO: Place custom script here
	
}

$checkboxRunDirSyncAfterUserC_CheckedChanged={
	If ($checkboxRunDirSyncAfterUserC.Checked -eq $True)
	{
		$textboxO365FirstName.Enabled = $false
		$textboxO365DisplayName.Enabled = $false
		$textboxO365Initials.Enabled = $false
		$textboxO365LastName.Enabled = $false
		$buttonCopyOnPremUser.Enabled = $false
		$buttonO365Genpassword.Enabled = $false
		$textboxConfirmPassword.Enabled = $false
		$maskedtextboxo365password.Enabled = $false
		$textboxO365UPN.Enabled = $false
		$textboxo365state.Enabled = $false
		$textboxo365city.Enabled = $false
		$textboxo365zip.Enabled = $false
		$textboxo365pobox.Enabled = $false
		
		$labelO365Groups.Text = "This feature is not available for AD-Synced enviornments."
	}
	elseif ($checkboxRunDirSyncAfterUserC.Checked -eq $false)
	{
		$textboxO365FirstName.Enabled = $true
		$textboxO365DisplayName.Enabled = $true
		$textboxO365Initials.Enabled = $true
		$textboxO365LastName.Enabled = $true
		$buttonCopyOnPremUser.Enabled = $true
		$buttonO365Genpassword.Enabled = $true
		$textboxConfirmPassword.Enabled = $true
		$maskedtextboxo365password.Enabled = $true
		$textboxO365UPN.Enabled = $true
		$textboxo365state.Enabled = $true
		$textboxo365city.Enabled = $true
		$textboxo365zip.Enabled = $true
		$textboxo365pobox.Enabled = $true
		
		$labelO365Groups.Text = "Please check all groups you want your user to be a member of."
	}
}

$buttonExit_Click={

	$MainForm.close()
}

$textboxO365LastName_TextChanged={
	If ((($textboxO365Initials.text | Measure-Object -Character).Characters) -lt 1)
	{
		$textboxO365DisplayName.Text = $textboxO365FirstName.Text + " " + $textboxO365LastName.Text
	}
	Else
	{
		$textboxO365DisplayName.Text = $textboxO365FirstName.Text + " " + $textboxO365Initials.Text + "." + " " + $textboxO365LastName.Text
		
	}
}

$textboxO365FirstName_TextChanged={
	If ((($textboxO365Initials.text | Measure-Object -Character).Characters) -lt 1)
	{
		$textboxO365DisplayName.Text = $textboxO365FirstName.text + " " + $textboxO365LastName.Text
	}
	Else
	{
		$textboxO365DisplayName.Text = $textboxO365FirstName.text + " " + $textboxO365Initials.Text + "." + " " + $textboxO365LastName.Text
	}
	
}

$textboxO365Initials_TextChanged={
	If ((($textboxO365Initials.text | Measure-Object -Character).Characters) -lt 1)
	{
		$textboxO365DisplayName.Text = $textboxO365FirstName.text + " " + $textboxO365LastName.Text
	}
	Else
	{
		$textboxO365DisplayName.Text = $textboxO365FirstName.text + " " + $textboxO365Initials.text + "." + $textboxO365LastName.Text
	}
	
}



$console_TextChanged={
	$console.SelectionStart = $console.TextLength;
	$console.ScrollToCaret()
	$console.Focus()
	
}

$buttonO365Clear_Click = {
	add-logs -text 'LOG: Clearing randomly generated password'
	add-logs -text 'CMD: $textboxo365passwordgen.text = ""'
	$textboxo365passwordgen.text = ""
	
}

$buttonClear_Click={
	add-logs -text 'LOG: Clearing randomly generated password'
	add-logs -text 'CMD: $textboxPasswordGen.Text = "" '
	$textboxPasswordGen.Text = ""
	
}

$checkboxConfigureOffice365Us_CheckedChanged = {
	If ($checkboxCreateActiveDirector.Checked -eq $true)
	{
		$groupboxNoAdSync.Enabled = $true
		If (!($ADSyncModule))
		{
			
			$groupboxADSync.Enabled = $False
			
		}
		Else
		{
			$groupboxADSync.Enabled = $True
		}
	}
	Else
	{
		$groupboxNoAdSync.Enabled = $false
		$groupboxADSync.Enabled = $False


	}
	
	
	
}



$checkboxconfigo365user_CheckedChanged={
	If (($checkboxCreateActiveDirector.Checked -eq $true) -or ($checkboxconfigo365user.Checked -eq $true))
	{
		$buttonCreateUser.Enabled = $true
		$groupboxNoAdSync.Enabled = $true
		If (!($ADSyncModule))
		{
			
			$groupboxADSync.Enabled = $False
			
		}
		Else
		{
			$groupboxADSync.Enabled = $True
		}
	}
	Else
	{
		$buttonCreateUser.Enabled = $false
		$groupboxNoAdSync.Enabled = $false
		$groupboxADSync.Enabled = $False
		
		
	}
	
}

$checkboxCreateActiveDirector_CheckedChanged={
	If (($checkboxCreateActiveDirector.Checked -eq $true) -or ($checkboxconfigo365user.Checked -eq $true))
	{
		$tabcontrolUserProperties.Enabled = $true
	}
	Else
	{
		$tabcontrolUserProperties.Enabled = $false	
	}
	
}

$copyAllLogToClipboardToolStripMenuItem_Click={
	$console.Text | clip
	
}

$clearLogToolStripMenuItem_Click={
	$console.Text = ""
	
}

$exitToolStripMenuItem_Click={
	$MainForm.close()
	
}



$textboxUserLogonName_TextChanged = {
	If ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0)
	{
		$labelUserLogonNameUPN.Text = "User logon name: (UPN)"
		$labelUserLogonNameUPN.ForeColor = 'Black'
	}
	ElseIf ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -lt 1)
	{
		$labelUserLogonNameUPN.Text = "*User logon name: (UPN)"
		$labelUserLogonNameUPN.ForeColor = 'Firebrick'
	}
	
	If (((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
	{
		$buttonCreateUser.Enabled = $true
	}
	Else
	{
		$buttonCreateUser.Enabled = $false
	}
}




$maskedtextboxpassword_TextChanged = {
	If ((($maskedtextboxpassword.Text | Measure-Object -Character).Characters) -gt 0)
	{
		$labelPassword.Text = "Password:"
		$labelPassword.ForeColor = 'Black'
	}
	ElseIf ((($maskedtextboxpassword.Text | Measure-Object -Character).Characters) -lt 1)
	{
		$labelPassword.Text = "*Password:"
		$labelPassword.ForeColor = 'Firebrick'
	}
	
	If (((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -lt 1) -and ((($maskedtextboxpassword.Text | Measure-Object -Character).Characters) -lt 1))
	{
		$labelpasswordconfirmmessage.Text = ""
	}
	Else
	{
		If (($textboxConfirmPassword.Text) -ne ($maskedtextboxpassword.Text))
		{
			$labelpasswordconfirmmessage.ForeColor = 'Red'
			$labelpasswordconfirmmessage.Text = "Passwords do not match!"
			$buttonCreateUser.Enabled = $false
		}
		Else
		{
			
			
			$labelpasswordconfirmmessage.ForeColor = 'Green'
			$labelpasswordconfirmmessage.Text = "Passwords match!"
			If (((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
			{
				$buttonCreateUser.Enabled = $true
			}
			Else
			{
				$buttonCreateUser.Enabled = $false
			}
		}
	}
}

$radiobuttonConnect_CheckedChanged={
	$comboboxDriveLetter.Enabled = $true
	
}

$radiobuttonLocalPath_CheckedChanged={
	$comboboxDriveLetter.Enabled = $false
	
}


]]></Code>
  <Mode>1</Mode>
  <Assemblies />
</File>