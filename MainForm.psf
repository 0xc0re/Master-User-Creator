<File version="3.1">
  <FileID>c95ae3e0-a538-420a-aeb6-92411ccf751a</FileID>
  <Preview>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
rkJggg==</Preview>
  <Form>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</Form>
  <Code><![CDATA[#region Control Helper Functions
function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[switch]$Append
	)
	
	if (-not $Append)
	{
		$listBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection])
	{
		$listBox.Items.AddRange($Items)
	}
	elseif ($Items -is [Array])
	{
		$listBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$listBox.Items.Add($obj)
		}
		$listBox.EndUpdate()
	}
	else
	{
		$listBox.Items.Add($Items)
	}
	
	$listBox.DisplayMember = $DisplayMember
}

function Update-ComboBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ComboBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ComboBox control.
	
	.PARAMETER ComboBox
		The ComboBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ComboBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
	
	.PARAMETER Append
		Adds the item(s) to the ComboBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red" -Append
		Update-ComboBox $combobox1 "White" -Append
		Update-ComboBox $combobox1 "Blue" -Append
	
	.EXAMPLE
		Update-ComboBox $combobox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ComboBox]$ComboBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[switch]$Append
	)
	
	if (-not $Append)
	{
		$ComboBox.Items.Clear()
	}
	
	if ($Items -is [Object[]])
	{
		$ComboBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ComboBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ComboBox.Items.Add($obj)
		}
		$ComboBox.EndUpdate()
	}
	else
	{
		$ComboBox.Items.Add($Items)
	}
	
	$ComboBox.DisplayMember = $DisplayMember
}
#endregion
$MainForm_Load={
	$maskedtextboxpassword.UseSystemPasswordChar = $true
	$textboxConfirmPassword.UseSystemPasswordChar = $true
	$textboxo365confirmpassword.UseSystemPasswordChar = $true
	$maskedtextboxo365password.UseSystemPasswordChar = $true
	
	$comboboxhidefromGAL.SelectedIndex = 1
	$comboboxO365HidefromGAL.SelectedIndex = 1
	
	$Groups = Get-ADGroup -Filter * | Where-Object {($_.Name -ne "Domain Users") -and ($_.Name -ne "Domain Computers")} | Select-Object -ExpandProperty Name | Sort-Object
	Update-ListBox -ListBox $checkedlistboxGroups -Items $Groups
	
	$groupboxNoAdSync.Enabled = $false
	$groupboxADSync.Enabled = $False

	$Netbiosname = (Get-ADDomain).NetBIOSName
	$textboxUPNDomain.Text = $Netbiosname + "\"
	
	#Disable the Office 365 license drop down until we connect to MSOnline
	$comboboxO365Licenses.Enabled = $False
	
	$Forest = Get-ADForest
	$UPNs = @()
	$extraUPNS = ($Forest | Select-Object UPNSuffixes -ExpandProperty UPNSuffixes)
	If ($extraUPNs -ne $Null)
	{
		foreach ($extraUPN in $extraUPNs)
		{
			$UPNs += "@" + $extraUPN
		}
	}
	$UPNs += "@" +  ($Forest | Select-Object -ExpandProperty Name)
	Update-ComboBox -ComboBox $comboboxDomains -Items $UPNs
	$comboboxDomains.SelectedIndex = 0
	
	$groupboxNoAdSync.Enabled = $false
	$tabcontrolUserProperties.Enabled = $false
	
	$radiobuttonDisableMFA.Checked = $true
	
	$buttonCreateUser.Enabled = $false
	
}

$buttonCreateUser_Click = {
	#If only an AD User is being made
	add-logs -text 'LOG: Checking to see what is being created'
	If (($checkboxCreateActiveDirector.Checked -eq $True) -and ($checkboxconfigo365user.Checked -eq $false))
	{
		add-logs -text 'LOG: Only an Active Directory user is being created'
		add-logs -text 'LOG: Checking all required parameters for data...'
		If (($checkboxUserCannotChangePass.Checked -eq $true) -and ($checkboxUserMustChangePasswo.Checked -eq $true))
		{
			add-logs -text 'WARN: You cannot check both User Must Change Password at Next Logon and User Cannot Change Password for the same user.'
			$InfoMessage = "You cannot check both User Must Change Password at Next Logon and User Cannot Change Password for the same user."
			$InfoTitle = "Warning"
			Show-MessageBox_psf
		}
		ElseIf (($checkboxPasswordNeverExpires.Checked -eq $true) -and ($checkboxUserMustChangePasswo.Checked -eq $true))
		{
			add-logs -text 'WARN: You have selected "Password never Expires". and "User must change password at next logon". They will be unable to change their password'
			$InfoMessage = 'You have selected "Password never Expires". and "User must change password at next logon". They will be unable to change their password'
			$InfoTitle = "Warning"
			Show-MessageBox_psf
		}
		Else
		{
			add-logs -text 'LOG: All required parameters are valid'
			Try
			{
				add-logs -text 'LOG: Converting password to SecureString'
				add-logs -text 'CMD: ConvertTo-SecureString -String $textboxConfirmPassword.Text'
				$PasswordSecureString = $textboxConfirmPassword.Text | ConvertTo-SecureString -AsPlainText -Force
				#Get disable account boolean
				add-logs -text 'LOG: Checking if account is disabled or enabled'
				$disabledaccount = ($checkboxAccountIsDisabled.checked)
				#If account should be disabled
				If ($disabledaccount -eq $true)
				{
					add-logs -text 'LOG: Account is disabled'
					add-logs -text 'LOG: Creating user'
					New-ADUser -Name ($textboxDisplayName.Text) -GivenName ($textboxFirstName.Text) -Surname ($textboxLastName.Text) -Initials ($textboxInitials.Text) -DisplayName ($textboxDisplayName.Text) -SamAccountName ($textboxSamAccount.text) -UserPrincipalName (($textboxUserLogonName.Text) + ($comboboxDomains.SelectedItem)) -EmailAddress ($textboxEmail.Text) -Description ($textboxDescription.Text) -Office ($textboxoffice.text) -OfficePhone ($textboxTelephone.text) -HomePage ($textboxWebPage.text) -StreetAddress ($textboxStreet.text) -State ($textboxstate.text) -PostalCode ($textboxzipcode.Text) -City ($textboxcity.text) -Title ($textboxjobtitle.text) -Department ($textboxDepartment.text) -Company ($textboxCompany.text) -POBox ($textboxPOBox.text) -ProfilePath ($textboxprofilepath.text) -ScriptPath ($textboxlogonscript.text) -PasswordNeverExpires ($checkboxPasswordNeverExpires.Checked) -Enabled $false -CannotChangePassword ($checkboxUserCannotChangePass.checked) -ChangePasswordAtLogon ($checkboxUserMustChangePasswo.Checked) -AccountPassword $PasswordSecureString -HomeDrive $comboboxDriveLetter.SelectedItem -HomeDirectory $textboxhomedirectory.Text
					$User = Get-ADUser -Filter * | Where-Object { ($_.Name -eq $textboxDisplayName.text) -and ($_.UserPrincipalName -eq (($textboxUserLogonName.Text) + ($comboboxDomains.SelectedItem))) }
					add-logs -text "LOG: User has been created"
					
					$Proxys = @()
					add-logs -text "LOG: Getting user proxy addresses to set"
					$Proxys += $textboxproxyaddress.Lines
					If ($Proxys -ne $Null)
					{
						foreach ($Proxy in $Proxys)
						{
							add-logs -text "LOG: Adding proxy addresses"
							add-logs -text "LOG: Getting user proxy addresses to set"
							add-logs -text "CMD: Set-ADUser $User -Add @{ proxyAddresses = $Proxy }"
							Set-ADUser $User -Add @{ proxyAddresses = $Proxy }
						}
					}
					Else
					{
						add-logs -text "LOG: No proxys were found to add"
					}
					add-logs -text "LOG: Done with Proxys"
					
					#Find if user should be added to any groups
					add-logs -text 'LOG: Getting checked groups'
					$groups = $checkedlistboxGroups.CheckedItems
					If ($groups -ne $null)
					{
						add-logs -text 'LOG: Groups found'
						foreach ($group in $groups)
						{
							add-logs -text "LOG: Adding $User to $Group"
							add-logs -text "CMD: Add-ADGroupMember -Identity $Group -Members $User"
							Add-ADGroupMember -Identity $Group -Members $User
						}
					}
					Else
					{
						add-logs -text 'LOG: No Groups checked'
					}
				}
				Else
				{
					add-logs -text 'LOG: Account is enabled'
					add-logs -text 'LOG: Creating user'
					New-ADUser -Name ($textboxDisplayName.Text) -GivenName ($textboxFirstName.Text) -Surname ($textboxLastName.Text) -Initials ($textboxInitials.Text) -DisplayName ($textboxDisplayName.Text) -SamAccountName ($textboxSamAccount.text) -UserPrincipalName (($textboxUserLogonName.Text) + ($comboboxDomains.SelectedItem)) -EmailAddress ($textboxEmail.Text) -Description ($textboxDescription.Text) -Office ($textboxoffice.text) -OfficePhone ($textboxTelephone.text) -HomePage ($textboxWebPage.text) -StreetAddress ($textboxStreet.text) -State ($textboxstate.text) -PostalCode ($textboxzipcode.Text) -City ($textboxcity.text) -Title ($textboxjobtitle.text) -Department ($textboxDepartment.text) -Company ($textboxCompany.text) -POBox ($textboxPOBox.text) -ProfilePath ($textboxprofilepath.text) -ScriptPath ($textboxlogonscript.text) -PasswordNeverExpires ($checkboxPasswordNeverExpires.Checked) -Enabled $true -CannotChangePassword ($checkboxUserCannotChangePass.checked) -ChangePasswordAtLogon ($checkboxUserMustChangePasswo.Checked) -AccountPassword $PasswordSecureString -HomeDrive $comboboxDriveLetter.SelectedItem -HomeDirectory $textboxhomedirectory.Text
					$User = Get-ADUser -Filter * | Where-Object { ($_.Name -eq $textboxDisplayName.text) -and ($_.UserPrincipalName -eq (($textboxUserLogonName.Text) + ($comboboxDomains.SelectedItem))) }
					add-logs -text "LOG: User has been created"
					
					$Proxys = @()
					add-logs -text "LOG: Getting user proxy addresses to set"
					$Proxys += $textboxproxyaddress.Lines
					If ($Proxys -ne $Null)
					{
						foreach ($Proxy in $Proxys)
						{
							add-logs -text "LOG: Adding proxy addresses"
							add-logs -text "LOG: Getting user proxy addresses to set"
							add-logs -text "CMD: Set-ADUser $User -Add @{ proxyAddresses = $Proxy }"
							Set-ADUser $User -Add @{ proxyAddresses = $Proxy }
						}
					}
					Else
					{
						add-logs -text "LOG: No proxys were found to add"
					}
					add-logs -text "LOG: Done with Proxys"
					
					#Find if user should be added to any groups
					add-logs -text 'LOG: Getting checked groups'
					$groups = $checkedlistboxGroups.CheckedItems
					If ($groups -ne $null)
					{
						add-logs -text 'LOG: Groups found'
						foreach ($group in $groups)
						{
							add-logs -text "LOG: Adding $User to $Group"
							add-logs -text "CMD: Add-ADGroupMember -Identity $Group -Members $User"
							Add-ADGroupMember -Identity $Group -Members $User
						}
					}
					Else
					{
						add-logs -text 'LOG: No Groups checked'
					}
					Add-Logs -text 'LOG: Done with Grous'
				}
			}
			Catch
			{
				add-logs -text "WARN: $_"
				Add-Type -AssemblyName System.Windows.Forms
				[System.Windows.Forms.MessageBox]::Show($_, 'Warning', 'OK', 'Warning')
			}
		}
	}
	#If only Office 365 user is being created 
	ElseIf (($checkboxCreateActiveDirector.Checked -eq $false) -and ($checkboxconfigo365user.Checked -eq $true))
	{
		add-logs -text 'LOG: Only an Office 365 User is being created'
		New-MsolUser -FirstName $textboxO365FirstName.Text -LastName $textboxO365LastName.Text -DisplayName $textboxO365DisplayName.Text -LicenseAssignment $comboboxO365Licenses.SelectedItem -Password $textboxo365confirmpassword.text -UserPrincipalName $textboxO365UPN.Text 

	}
	ElseIf (($checkboxCreateActiveDirector.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $true))
	{
		add-logs -text 'LOG: Both an Office 365 User and Active Director User is being created'
	}
	Else
	{
		add-logs -text 'WARN: Nothing is being created!'
	}
}




$labelFirstName_Click={
	
}



$textboxDisplayName_TextChanged = {
	If ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0)
	{
		$labelDisplayName.Text = "Display Name:"
		$labelDisplayName.ForeColor = 'Black'
	}
	ElseIf ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -lt 1)
	{
		$labelDisplayName.Text = "*Display Name:"
		$labelDisplayName.ForeColor = 'Firebrick'
	}
	If (((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0)   )
	{
		$buttonCreateUser.Enabled = $true
	}
	Else
	{
		$buttonCreateUser.Enabled = $false
	}
	
}

$textboxLastName_TextChanged = {
	If ((($textboxInitials.text | Measure-Object -Character).Characters) -lt 1)
	{
		$textboxDisplayName.Text = $textboxFirstName.Text + " " + $textboxLastName.Text
	}
	Else
	{
		$textboxDisplayName.Text = $textboxFirstName.Text + " " + $textboxInitials.Text + "." + " " + $textboxLastName.Text
	}
}

$textboxFirstName_TextChanged = {
	If ((($textboxInitials.text | Measure-Object -Character).Characters) -lt 1)
	{
		$textboxDisplayName.Text = $textboxFirstName.text + " " + $textboxLastName.Text
	}
	Else
	{
		$textboxDisplayName.Text = $textboxFirstName.text + " " + $textboxInitials.Text + "." + " " + $textboxLastName.Text
	}
	
}

$textboxInitials_TextChanged = {
	If ((($textboxInitials.text | Measure-Object -Character).Characters) -lt 1)
	{
		$textboxDisplayName.Text = $textboxFirstName.text + " " + $textboxLastName.Text
	}
	Else
	{
		$textboxDisplayName.Text = $textboxFirstName.text + " " + $textboxInitials.text + "." + $textboxLastName.Text
	}
	
}

$button1_Click={
	Write-Host (($textboxInitials.text | Measure-Object -Character).Characters)
	
}

$buttonGeneratePassword_Click = {
	add-logs -text 'LOG: Generating random password'
	add-logs -text 'CMD: $textboxPasswordGen.Text = ([char[]]([char]33 .. [char]95) + ([char[]]([char]97 .. [char]126)) + 0 .. 9 | Sort-Object { Get-Random })[0 .. 10] -join '''
	$textboxPasswordGen.Text = ([char[]]([char]33 .. [char]95) + ([char[]]([char]97 .. [char]126)) + 0 .. 9 | Sort-Object { Get-Random })[0 .. 10] -join ''
	$maskedtextboxpassword.Text = $textboxPasswordGen.Text
	$textboxConfirmPassword.text = $textboxPasswordGen.Text
	
}

$textboxConfirmPassword_TextChanged = {
	If ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0)
	{
		$labelConfirmPassword.Text = "Confirm Password:"
		$labelConfirmPassword.ForeColor = 'Black'
	}
	ElseIf ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -lt 1)
	{
		$labelConfirmPassword.Text = "*Confirm Password:"
		$labelConfirmPassword.ForeColor = 'Firebrick'
	}
	
	If (((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -lt 1) -and ((($maskedtextboxpassword.Text | Measure-Object -Character).Characters) -lt 1))
	{
		$labelpasswordconfirmmessage.Text = ""
	}
	Else
	{
		If (($textboxConfirmPassword.Text) -ne ($maskedtextboxpassword.Text))
		{
			$labelpasswordconfirmmessage.ForeColor = 'Red'
			$labelpasswordconfirmmessage.Text = "Passwords do not match!"
			$buttonCreateUser.Enabled = $false
		}
		Else
		{
			
			
			$labelpasswordconfirmmessage.ForeColor = 'Green'
			$labelpasswordconfirmmessage.Text = "Passwords match!"
			If (((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
			{
				$buttonCreateUser.Enabled = $true
			}
			Else
			{
				$buttonCreateUser.Enabled = $false
			}
		}
	}
}

$buttonCopyOnPremUser_Click = {
	add-logs -text "LOG: Copying AD User attributes to Office 365 user"
	$textboxO365DisplayName.Text = $textboxDisplayName.Text
	$textboxO365LastName.Text = $textboxLastName.Text
	$textboxO365FirstName.Text = $textboxFirstName.text
	#$buttonO365Genpassword.Enabled = $false
	$maskedtextboxo365password.Text = $maskedtextboxpassword.Text
	$textboxo365confirmpassword.Text = $textboxConfirmPassword.text
	$textboxo365passwordgen.Text = $textboxPasswordGen.text
	
	$textboxO365UPN.Text = ($textboxUserLogonName.text) + ($comboboxDomains.Text)
	
	$textboxo365city.Text = $textboxcity.Text
	$textboxO365street.Text = $textboxStreet.Text
	$textboxo365pobox.Text = $textboxPOBox.text
	$textboxo365zip.Text = $textboxzipcode.Text
	$textboxo365state.Text = $textboxstate.text
	
	$textboxo365proxyaddresses.Text = $textboxproxyaddress.Text
	$comboboxO365HidefromGAL.SelectedItem = $comboboxhidefromGAL.SelectedItem
	
	$checkboxo365usermustchangepassword.Checked = $checkboxUserMustChangePasswo.Checked
	add-logs -text "LOG: Copy Finished!"
	
}

$textboxo365confirmpassword_TextChanged={
	If ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0)
	{
		$labelO365userconfirmpassword.Text = "Confirm Password:"
		$labelO365userconfirmpassword.ForeColor = 'Black'
		If (((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0) -and ((($maskedtextboxo365password.Text | Measure-Object -Character).Characters) -gt 0) -and ($buttonConnectToOffice365.Enabled -eq $false))
		{
			$buttonCreateUser.Enabled = $true
		}
		Else
		{
			$buttonCreateUser.Enabled = $false
		}
	}
	ElseIf ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -lt 1)
	{
		$labelO365userconfirmpassword.Text = "*Confirm Password:"
		$labelO365userconfirmpassword.ForeColor = 'Firebrick'
	}
	
	If (((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -lt 1) -and ((($maskedtextboxo365password.Text | Measure-Object -Character).Characters) -lt 1))
	{
		$labelo365password.Text = ""
	}
	Else
	{
		If (($textboxo365confirmpassword.Text) -ne ($maskedtextboxo365password.Text))
		{
			$labelo365password.ForeColor = 'Red'
			$labelo365password.Text = "Passwords do not match!"
			$buttonCreateUser.Enabled = $false
		}
		Else
		{
			$labelo365password.ForeColor = 'Green'
			$labelo365password.Text = "Passwords match!"
			If (((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0) -and ((($maskedtextboxo365password.Text | Measure-Object -Character).Characters) -gt 0) -and ($buttonConnectToOffice365.Enabled -eq $false))
			{
				$buttonCreateUser.Enabled = $true
			}
			Else
			{
				$buttonCreateUser.Enabled = $false
			}
		}
	}
	
}

$buttonConnectToOffice365_Click = {
	add-logs -text 'LOG: Checking MFA Status'
	If ($radiobuttonDisableMFA.Checked -eq $True)
	{
		add-logs -text 'LOG: Gathering credentials to connect to Office 365'
		add-logs -text 'CMD: Get-Credential -Message "Please enter your Office 365 credentials"'
		$credential = Get-Credential -Message "Please enter your Office 365 credentials"
		If ($credential -eq $Null)
		{
			$InfoMessage = "No credentials were entered. Please enter valid Office 365 credentials"
			$InfoTitle = "Warning"
			Show-MessageBox_psf
		}
		Else
		{
			add-logs -text 'LOG: Connecting to Office 365'
			add-logs -text 'CMD: Connect-MsolService -Credential $credential'
			Import-Module MSOnline
			Connect-MsolService -Credential $credential
			$exchangeSession = New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri "https://outlook.office365.com/powershell-liveid/" -Authentication "Basic" -AllowRedirection -Credential $credential
			add-logs -text 'LOG: Connecting to Exchange Online'
			add-logs -text 'CMD: Import-PSSession $exchangeSession -AllowClobber'
			Import-PSSession $exchangeSession -AllowClobber
		}
	}
	Else
	{
		add-logs -text 'LOG: Finding MFA Exchange Online Module'
		add-logs -text 'CMD: Get-ChildItem $Env:LOCALAPPDATA\Apps\2.0\*\CreateExoPSSession.ps1 -Recurse | Select-Object -ExpandProperty Target -First 1'
		$Modules = Get-ChildItem $Env:LOCALAPPDATA\Apps\2.0\*\CreateExoPSSession.ps1 -Recurse | Select-Object -ExpandProperty Target -First 1
		foreach ($Module in $Modules)
		{
			Import-Module "$Module"
		}
		add-logs -text 'LOG: Connecting to MSOnline'
		#Connect to MSOnline w/2FA
		Connect-MsolService
		#Connect to Exchange Online w/ 2FA
		add-logs -text 'LOG: Connecting to Exchange Online'
		Connect-EXOPSSession
	}
	add-logs -text 'LOG: Checking to see if we are connected to Office 365'
	add-logs -text 'CMD: (Get-MsolDomain -ErrorAction SilentlyContinue) -ne $null'
	if ((Get-MsolDomain -ErrorAction SilentlyContinue) -ne $null)
	{
		add-logs -text 'LOG: Connected to Office 365!'
		add-logs -text 'LOG: Disabling connect to Office 365 button!'
		add-logs -text 'CMD: $buttonConnectToOffice365.Enabled = $False'
		$buttonConnectToOffice365.Enabled = $False
		$buttonConnectToOffice365.Text = "Connected to Office 365"
		$buttonConnectToOffice365.ForeColor = 'Black'
		
		If (((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0) -and ((($maskedtextboxo365password.Text | Measure-Object -Character).Characters) -gt 0) -and ($buttonConnectToOffice365.Enabled -eq $false))
		{
			$buttonCreateUser.Enabled = $true
		}
		Else
		{
			$buttonCreateUser.Enabled = $false
		}
		
		
		#We only want licenses that have at least one to assign to a user
		add-logs -text 'LOG: Getting available licenses'
		add-logs -text 'CMD: Get-MsolAccountSku | Where-Object { $_.ActiveUnits -ne $_.ConsumedUnits }'
		$Avaialble = Get-MsolAccountSku | Where-Object { $_.ActiveUnits -ne $_.ConsumedUnits }
		
		
		add-logs -text 'LOG: Enabling Licenses combobox'
		add-logs -text 'CMD: $comboboxO365Licenses.Enabled = $True'
		$comboboxO365Licenses.Enabled = $True
		
		
		add-logs -text 'LOG: Loading license combobox with available licenses'
		add-logs -text 'CMD: Update-ComboBox -ComboBox $comboboxO365Licenses ($Avaialble).AccountSkuId'
		Update-ComboBox -ComboBox $comboboxO365Licenses ($Avaialble).AccountSkuId
		
		
		add-logs -text 'LOG: Loading Office 365 Groups ListBox'
		add-logs -text 'CMD: Update-ListBox -ListBox $checkedlistboxo365groups -Items (Get-MsolGroup | Select-Object -ExpandProperty DisplayName | Sort-Object)'
		Update-ListBox -ListBox $checkedlistboxo365groups -Items (Get-MsolGroup | Select-Object -ExpandProperty DisplayName | Sort-Object)
		
		
		$labelO365Groups.Text = "Please check all groups you want your user to be a member of. 
This feature is not available for AD-Synced environments"
		
		$labelsharedmailboxes.text = "Please check all Shared Mailboxes you want your user to have Full Access on.
		This feature is not available for AD-Synced environments"
		
		add-logs -text 'LOG: Getting all Shared Mailboxes'
		$Shared = Get-Mailbox | Where-Object { $_.RecipientTypeDetails -eq "SharedMailbox" } | Select-Object -ExpandProperty DisplayName | Sort-Object
		Update-ListBox -ListBox $checkedlistboxsharedmailboxes -Items $Shared
		
	}
	Else
	{
		add-logs -text 'WARN: Not connected to Office 365!'
	}
	
	
	
}



$buttonO365Genpassword_Click = {
	$textboxo365passwordgen.Text = ([char[]]([char]33 .. [char]95) + ([char[]]([char]97 .. [char]126)) + 0 .. 9 | Sort-Object { Get-Random })[0 .. 10] -join ''
	$maskedtextboxo365password.Text = $textboxo365passwordgen.Text
	$textboxo365confirmpassword.Text = $textboxo365passwordgen.Text

	
}

$tooltip1_Popup=[System.Windows.Forms.PopupEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.PopupEventArgs]
	#TODO: Place custom script here
	
}

$checkboxRunDirSyncAfterUserC_CheckedChanged={
	If ($checkboxRunDirSyncAfterUserC.Checked -eq $True)
	{
		$textboxO365FirstName.Enabled = $false
		$textboxO365DisplayName.Enabled = $false
		$textboxO365Initials.Enabled = $false
		$textboxO365LastName.Enabled = $false
		$buttonCopyOnPremUser.Enabled = $false
		$buttonO365Genpassword.Enabled = $false
		$textboxConfirmPassword.Enabled = $false
		$maskedtextboxo365password.Enabled = $false
		$textboxO365UPN.Enabled = $false
		$textboxo365state.Enabled = $false
		$textboxo365city.Enabled = $false
		$textboxo365zip.Enabled = $false
		$textboxo365pobox.Enabled = $false
		
		$labelO365Groups.Text = "This feature is not available for AD-Synced enviornments."
	}
	elseif ($checkboxRunDirSyncAfterUserC.Checked -eq $false)
	{
		$textboxO365FirstName.Enabled = $true
		$textboxO365DisplayName.Enabled = $true
		$textboxO365Initials.Enabled = $true
		$textboxO365LastName.Enabled = $true
		$buttonCopyOnPremUser.Enabled = $true
		$buttonO365Genpassword.Enabled = $true
		$textboxConfirmPassword.Enabled = $true
		$maskedtextboxo365password.Enabled = $true
		$textboxO365UPN.Enabled = $true
		$textboxo365state.Enabled = $true
		$textboxo365city.Enabled = $true
		$textboxo365zip.Enabled = $true
		$textboxo365pobox.Enabled = $true
		
		$labelO365Groups.Text = "Please check all groups you want your user to be a member of."
	}
}

$buttonExit_Click={
	Get-PSSession | Remove-PSSession
	$MainForm.close()
}

$textboxO365LastName_TextChanged={
	If ((($textboxO365Initials.text | Measure-Object -Character).Characters) -lt 1)
	{
		$textboxO365DisplayName.Text = $textboxO365FirstName.Text + " " + $textboxO365LastName.Text
	}
	Else
	{
		$textboxO365DisplayName.Text = $textboxO365FirstName.Text + " " + $textboxO365Initials.Text + "." + " " + $textboxO365LastName.Text
		
	}
}

$textboxO365FirstName_TextChanged={
	If ((($textboxO365Initials.text | Measure-Object -Character).Characters) -lt 1)
	{
		$textboxO365DisplayName.Text = $textboxO365FirstName.text + " " + $textboxO365LastName.Text
	}
	Else
	{
		$textboxO365DisplayName.Text = $textboxO365FirstName.text + " " + $textboxO365Initials.Text + "." + " " + $textboxO365LastName.Text
	}
	
}

$textboxO365Initials_TextChanged={
	If ((($textboxO365Initials.text | Measure-Object -Character).Characters) -lt 1)
	{
		$textboxO365DisplayName.Text = $textboxO365FirstName.text + " " + $textboxO365LastName.Text
	}
	Else
	{
		$textboxO365DisplayName.Text = $textboxO365FirstName.text + " " + $textboxO365Initials.text + "." + $textboxO365LastName.Text
	}
	
}



$console_TextChanged={
	$console.SelectionStart = $console.TextLength;
	$console.ScrollToCaret()
	$console.Focus()
	
}

$buttonO365Clear_Click = {
	add-logs -text 'LOG: Clearing randomly generated password'
	add-logs -text 'CMD: $textboxo365passwordgen.text = ""'
	$textboxo365passwordgen.text = ""
	
}

$buttonClear_Click={
	add-logs -text 'LOG: Clearing randomly generated password'
	add-logs -text 'CMD: $textboxPasswordGen.Text = "" '
	$textboxPasswordGen.Text = ""
}

$checkboxconfigo365user_CheckedChanged={
	If (($checkboxCreateActiveDirector.Checked -eq $true) -or ($checkboxconfigo365user.Checked -eq $true))
	{
		#$groupboxNoAdSync.Enabled = $true
		Import-Module ADSync
		$ADSyncModule = Get-Module | Where-Object { $_.Name -eq "ADSync" }
		If ($null -ne $ADSyncModule)
		{
			add-logs -text 'LOG: DirSync found, enabling DirSync option'
			$checkboxRunDirSyncAfterUserC.Enabled = $True
			$groupboxADSync.Enabled = $true
		}
		Else
		{
			add-logs -text 'LOG: No DirSync Found. Enabling user creation'
			$groupboxNoAdSync.Enabled = $true
		}
	}
	Else
	{
		$groupboxNoAdSync.Enabled = $false
	}
	
}

$checkboxCreateActiveDirector_CheckedChanged={
	If (($checkboxCreateActiveDirector.Checked -eq $true) -or ($checkboxconfigo365user.Checked -eq $true))
	{
		$tabcontrolUserProperties.Enabled = $true
	}
	Else
	{
		$tabcontrolUserProperties.Enabled = $false	
	}
	
}

$copyAllLogToClipboardToolStripMenuItem_Click={
	$console.Text | clip
	
}

$clearLogToolStripMenuItem_Click={
	$console.Text = ""
	
}

$exitToolStripMenuItem_Click={
	$MainForm.close()
	
}



$textboxUserLogonName_TextChanged = {
	If ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0)
	{
		$labelUserLogonNameUPN.Text = "User logon name: (UPN)"
		$labelUserLogonNameUPN.ForeColor = 'Black'
	}
	ElseIf ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -lt 1)
	{
		$labelUserLogonNameUPN.Text = "*User logon name: (UPN)"
		$labelUserLogonNameUPN.ForeColor = 'Firebrick'
	}
	
	If (((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
	{
		$buttonCreateUser.Enabled = $true
	}
	Else
	{
		$buttonCreateUser.Enabled = $false
	}
}




$maskedtextboxpassword_TextChanged = {
	If ((($maskedtextboxpassword.Text | Measure-Object -Character).Characters) -gt 0)
	{
		$labelPassword.Text = "Password:"
		$labelPassword.ForeColor = 'Black'
	}
	ElseIf ((($maskedtextboxpassword.Text | Measure-Object -Character).Characters) -lt 1)
	{
		$labelPassword.Text = "*Password:"
		$labelPassword.ForeColor = 'Firebrick'
	}
	
	If (((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -lt 1) -and ((($maskedtextboxpassword.Text | Measure-Object -Character).Characters) -lt 1))
	{
		$labelpasswordconfirmmessage.Text = ""
	}
	Else
	{
		If (($textboxConfirmPassword.Text) -ne ($maskedtextboxpassword.Text))
		{
			$labelpasswordconfirmmessage.ForeColor = 'Red'
			$labelpasswordconfirmmessage.Text = "Passwords do not match!"
			$buttonCreateUser.Enabled = $false
		}
		Else
		{
			$labelpasswordconfirmmessage.ForeColor = 'Green'
			$labelpasswordconfirmmessage.Text = "Passwords match!"
			If (((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
			{
				$buttonCreateUser.Enabled = $true
			}
			Else
			{
				$buttonCreateUser.Enabled = $false
			}
		}
	}
}





$resetFormToolStripMenuItem_Click = {
	
	###########################
	#                         #
	#  ACTIVE DIRECTORY USER  #
	#                         #
	###########################
	
	add-logs -text 'LOG: Resetting forms on General Page'
	#General page
	$textboxFirstName.Text = ""
	$textboxInitials.Text = ""
	$textboxLastName.Text = ""
	$textboxDisplayName.Text = ""
	$textboxDescription.Text = ""
	$textboxoffice.Text = ""
	$textboxPasswordGen.Text = ""
	$maskedtextboxpassword.Text = ""
	$textboxConfirmPassword.Text = ""
	$textboxTelephone.Text = ""
	$textboxEmail.Text = ""
	$textboxWebPage.Text = ""
	
	add-logs -text 'LOG: Resetting forms on Account Page'
	#Account page
	$textboxUserLogonName.Text = ""
	$textboxSamAccount.Text = ""
	$checkboxAccountIsDisabled.CheckState = 'Unchecked'
	$checkboxUserMustChangePasswo.CheckState = 'Unchecked'
	$checkboxUserCannotChangePass.CheckState = 'Unchecked'
	$checkboxPasswordNeverExpires.CheckState = 'Unchecked'
	
	add-logs -text 'LOG: Resetting forms on Address Page'
	#Address page
	$textboxStreet.Text = ""
	$textboxPOBox.Text = ""
	$textboxcity.Text = ""
	$textboxstate.Text = ""
	$textboxzipcode.Text = ""
	
	add-logs -text 'LOG: Resetting forms on Groups Page'
	#Groups page
	for ($i = 0; $i -lt $checkedlistboxGroups.Items.Count; $i++)
	{
		
		$checkedlistboxGroups.SetItemCheckState($i, 'Unchecked')
		
	}
	
	add-logs -text 'LOG: Resetting forms on Organization Page'
	#Organization page
	$textboxjobtitle.Text = ""
	$textboxDepartment.Text = ""
	$textboxCompany.Text = ""
	
	add-logs -text 'LOG: Resetting forms on Profile Page'
	#Profile page
	$textboxprofilepath.Text = ""
	$textboxlogonscript.Text = ""
	$comboboxDriveLetter.SelectedIndex = 0
	$textboxhomedirectory.Text = ""
	
	add-logs -text 'LOG: Resetting forms on Attributes Page'
	#Attributes page
	$textboxproxyaddress.Text = ""
	
	
	###########################
	#                         #
	#     OFFICE 365 USER     #
	#                         #
	###########################
	
	
}

$linklabelBradWyatt_LinkClicked=[System.Windows.Forms.LinkLabelLinkClickedEventHandler]{
	start-process -FilePath "https://www.linkedin.com/in/bradleywyatt/"
	
}

$linklabelGitHubProject_LinkClicked=[System.Windows.Forms.LinkLabelLinkClickedEventHandler]{
	Start-Process -FilePath "https://github.com/bwya77/AD-Master-User-Creator"
	
}

$textboxO365DisplayName_TextChanged= {
	If ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0)
	{
		$labelO365DisplayName.Text = "Display Name:"
		$labelO365DisplayName.ForeColor = 'Black'
	}
	ElseIf ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -lt 1)
	{
		$labelO365DisplayName.Text = "*Display Name:"
		$labelO365DisplayName.ForeColor = 'Firebrick'
	}
	If (((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0) -and ((($maskedtextboxo365password.Text | Measure-Object -Character).Characters) -gt 0) -and ($buttonConnectToOffice365.Enabled -eq $false))
	{
		$buttonCreateUser.Enabled = $true
	}
	Else
	{
		$buttonCreateUser.Enabled = $false
	}
	
}

$textboxO365UPN_TextChanged= {
	If ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0)
	{
		$labelO365UserPrincipalName.Text = "UserPrincipalName:"
		$labelO365UserPrincipalName.ForeColor = 'Black'
	}
	ElseIf ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -lt 1)
	{
		$labelO365UserPrincipalName.Text = "*UserPrincipalName:"
		$labelO365UserPrincipalName.ForeColor = 'Firebrick'
	}
	If (((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0) -and ((($maskedtextboxo365password.Text | Measure-Object -Character).Characters) -gt 0) -and ($buttonConnectToOffice365.Enabled -eq $false))
	{
		$buttonCreateUser.Enabled = $true
	}
	Else
	{
		$buttonCreateUser.Enabled = $false
	}
}


$maskedtextboxo365password_TextChanged={
	If ((($maskedtextboxo365password.Text | Measure-Object -Character).Characters) -gt 0)
	{
		$labelO365userpassword.Text = "Password:"
		$labelO365userpassword.ForeColor = 'Black'
	}
	ElseIf ((($maskedtextboxo365password.Text | Measure-Object -Character).Characters) -lt 1)
	{
		$labelO365userpassword.Text = "*Password:"
		$labelO365userpassword.ForeColor = 'Firebrick'
	}
	
	If (((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -lt 1) -and ((($maskedtextboxo365password.Text | Measure-Object -Character).Characters) -lt 1))
	{
		$labelo365password.Text = ""
	}
	Else
	{
		If (($textboxo365confirmpassword.Text) -ne ($maskedtextboxo365password.Text))
		{
			$labelo365password.ForeColor = 'Red'
			$labelo365password.Text = "Passwords do not match!"
			$buttonCreateUser.Enabled = $false
		}
		Else
		{
			$labelo365password.ForeColor = 'Green'
			$labelo365password.Text = "Passwords match!"
			
			If (((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0) -and ((($maskedtextboxo365password.Text | Measure-Object -Character).Characters) -gt 0) -and ($buttonConnectToOffice365.Enabled -eq $false))
			{
				$buttonCreateUser.Enabled = $true
			}
			Else
			{
				$buttonCreateUser.Enabled = $false
			}
		}
	}
	
	
	
}

]]></Code>
  <Mode>1</Mode>
  <Assemblies />
</File>