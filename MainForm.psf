<File version="3.1">
  <FileID>c95ae3e0-a538-420a-aeb6-92411ccf751a</FileID>
  <Preview>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
QmCC</Preview>
  <Form>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
p/br/wOhbgUUybcCAA==</Form>
  <Code><![CDATA[#region Control Helper Functions
function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[switch]$Append
	)
	
	if (-not $Append)
	{
		$listBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection])
	{
		$listBox.Items.AddRange($Items)
	}
	elseif ($Items -is [Array])
	{
		$listBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$listBox.Items.Add($obj)
		}
		$listBox.EndUpdate()
	}
	else
	{
		$listBox.Items.Add($Items)
	}
	
	$listBox.DisplayMember = $DisplayMember
}

function Update-ComboBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ComboBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ComboBox control.
	
	.PARAMETER ComboBox
		The ComboBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ComboBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
	
	.PARAMETER Append
		Adds the item(s) to the ComboBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red" -Append
		Update-ComboBox $combobox1 "White" -Append
		Update-ComboBox $combobox1 "Blue" -Append
	
	.EXAMPLE
		Update-ComboBox $combobox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ComboBox]$ComboBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[switch]$Append
	)
	
	if (-not $Append)
	{
		$ComboBox.Items.Clear()
	}
	
	if ($Items -is [Object[]])
	{
		$ComboBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ComboBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ComboBox.Items.Add($obj)
		}
		$ComboBox.EndUpdate()
	}
	else
	{
		$ComboBox.Items.Add($Items)
	}
	
	$ComboBox.DisplayMember = $DisplayMember
}
#endregion
$MainForm_Load={
	$maskedtextboxpassword.UseSystemPasswordChar = $true
	$textboxConfirmPassword.UseSystemPasswordChar = $true
	$textboxo365confirmpassword.UseSystemPasswordChar = $true
	$maskedtextboxo365password.UseSystemPasswordChar = $true
	
	$comboboxhidefromGAL.SelectedIndex = 1
	$comboboxO365HidefromGAL.SelectedIndex = 1
	
	$Groups = Get-ADGroup -Filter * | Where-Object {($_.Name -ne "Domain Users") -and ($_.Name -ne "Domain Computers")} | Select-Object -ExpandProperty Name | Sort-Object
	Update-ListBox -ListBox $checkedlistboxGroups -Items $Groups
	
	$groupboxNoAdSync.Enabled = $false
	$groupboxADSync.Enabled = $False

	$Netbiosname = (Get-ADDomain).NetBIOSName
	$textboxUPNDomain.Text = $Netbiosname + "\"
	
	#Disable the Office 365 license drop down until we connect to MSOnline
	$comboboxO365Licenses.Enabled = $False
	
	$Forest = Get-ADForest
	$UPNs = @()
	$extraUPNS = ($Forest | Select-Object UPNSuffixes -ExpandProperty UPNSuffixes)
	If ($extraUPNs -ne $Null)
	{
		foreach ($extraUPN in $extraUPNs)
		{
			$UPNs += "@" + $extraUPN
		}
	}
	$UPNs += "@" +  ($Forest | Select-Object -ExpandProperty Name)
	Update-ComboBox -ComboBox $comboboxDomains -Items $UPNs
	$comboboxDomains.SelectedIndex = 0
	
	$groupboxNoAdSync.Enabled = $false
	$tabcontrolUserProperties.Enabled = $false
	
	$radiobuttonDisableMFA.Checked = $true
	
	$buttonCreateUser.Enabled = $false
	
}

$buttonCreateUser_Click = {
	#If only an AD User is being made
	add-logs -text 'LOG: Checking to see what is being created'
	If (($checkboxCreateActiveDirector.Checked -eq $True) -and ($checkboxconfigo365user.Checked -eq $false))
	{
		add-logs -text 'LOG: Only an Active Directory user is being created'
		add-logs -text 'LOG: Checking all required parameters for data...'
		If (($checkboxUserCannotChangePass.Checked -eq $true) -and ($checkboxUserMustChangePasswo.Checked -eq $true))
		{
			add-logs -text 'WARN: You cannot check both User Must Change Password at Next Logon and User Cannot Change Password for the same user.'
			$InfoMessage = "You cannot check both User Must Change Password at Next Logon and User Cannot Change Password for the same user."
			$InfoTitle = "Warning"
			Show-MessageBox_psf
		}
		ElseIf (($checkboxPasswordNeverExpires.Checked -eq $true) -and ($checkboxUserMustChangePasswo.Checked -eq $true))
		{
			add-logs -text 'WARN: You have selected "Password never Expires". and "User must change password at next logon". They will be unable to change their password'
			$InfoMessage = 'You have selected "Password never Expires". and "User must change password at next logon". They will be unable to change their password'
			$InfoTitle = "Warning"
			Show-MessageBox_psf
		}
		Else
		{
			add-logs -text 'LOG: All required parameters are valid'
			Try
			{
				add-logs -text 'LOG: Converting password to SecureString'
				add-logs -text 'CMD: ConvertTo-SecureString -String $textboxConfirmPassword.Text'
				$PasswordSecureString = $textboxConfirmPassword.Text | ConvertTo-SecureString -AsPlainText -Force
				#Get disable account boolean
				add-logs -text 'LOG: Checking if account is disabled or enabled'
				$disabledaccount = ($checkboxAccountIsDisabled.checked)
				#If account should be disabled
				If ($disabledaccount -eq $true)
				{
					add-logs -text 'LOG: Account is disabled'
					add-logs -text 'LOG: Creating user'
					New-ADUser -Name ($textboxDisplayName.Text) -GivenName ($textboxFirstName.Text) -Surname ($textboxLastName.Text) -Initials ($textboxInitials.Text) -DisplayName ($textboxDisplayName.Text) -SamAccountName ($textboxSamAccount.text) -UserPrincipalName (($textboxUserLogonName.Text) + ($comboboxDomains.SelectedItem)) -EmailAddress ($textboxEmail.Text) -Description ($textboxDescription.Text) -Office ($textboxoffice.text) -OfficePhone ($textboxTelephone.text) -HomePage ($textboxWebPage.text) -StreetAddress ($textboxStreet.text) -State ($textboxstate.text) -PostalCode ($textboxzipcode.Text) -City ($textboxcity.text) -Title ($textboxjobtitle.text) -Department ($textboxDepartment.text) -Company ($textboxCompany.text) -POBox ($textboxPOBox.text) -ProfilePath ($textboxprofilepath.text) -ScriptPath ($textboxlogonscript.text) -PasswordNeverExpires ($checkboxPasswordNeverExpires.Checked) -Enabled $false -CannotChangePassword ($checkboxUserCannotChangePass.checked) -ChangePasswordAtLogon ($checkboxUserMustChangePasswo.Checked) -AccountPassword $PasswordSecureString -HomeDrive $comboboxDriveLetter.SelectedItem -HomeDirectory $textboxhomedirectory.Text
					$User = Get-ADUser -Filter * | Where-Object { ($_.Name -eq $textboxDisplayName.text) -and ($_.UserPrincipalName -eq (($textboxUserLogonName.Text) + ($comboboxDomains.SelectedItem))) }
					add-logs -text "LOG: User has been created"
					
					$Proxys = @()
					add-logs -text "LOG: Getting user proxy addresses to set"
					$Proxys += $textboxproxyaddress.Lines
					If ($Proxys -ne $Null)
					{
						foreach ($Proxy in $Proxys)
						{
							add-logs -text "LOG: Adding proxy addresses"
							add-logs -text "LOG: Getting user proxy addresses to set"
							add-logs -text "CMD: Set-ADUser $User -Add @{ proxyAddresses = $Proxy }"
							Set-ADUser $User -Add @{ proxyAddresses = $Proxy }
						}
					}
					Else
					{
						add-logs -text "LOG: No proxys were found to add"
					}
					add-logs -text "LOG: Done with Proxys"
					
					#Find if user should be added to any groups
					add-logs -text 'LOG: Getting checked groups'
					$groups = $checkedlistboxGroups.CheckedItems
					If ($groups -ne $null)
					{
						add-logs -text 'LOG: Groups found'
						foreach ($group in $groups)
						{
							add-logs -text "LOG: Adding $User to $Group"
							add-logs -text "CMD: Add-ADGroupMember -Identity $Group -Members $User"
							Add-ADGroupMember -Identity $Group -Members $User
						}
					}
					Else
					{
						add-logs -text 'LOG: No Groups checked'
					}
				}
				Else
				{
					add-logs -text 'LOG: Account is enabled'
					add-logs -text 'LOG: Creating user'
					New-ADUser -Name ($textboxDisplayName.Text) -GivenName ($textboxFirstName.Text) -Surname ($textboxLastName.Text) -Initials ($textboxInitials.Text) -DisplayName ($textboxDisplayName.Text) -SamAccountName ($textboxSamAccount.text) -UserPrincipalName (($textboxUserLogonName.Text) + ($comboboxDomains.SelectedItem)) -EmailAddress ($textboxEmail.Text) -Description ($textboxDescription.Text) -Office ($textboxoffice.text) -OfficePhone ($textboxTelephone.text) -HomePage ($textboxWebPage.text) -StreetAddress ($textboxStreet.text) -State ($textboxstate.text) -PostalCode ($textboxzipcode.Text) -City ($textboxcity.text) -Title ($textboxjobtitle.text) -Department ($textboxDepartment.text) -Company ($textboxCompany.text) -POBox ($textboxPOBox.text) -ProfilePath ($textboxprofilepath.text) -ScriptPath ($textboxlogonscript.text) -PasswordNeverExpires ($checkboxPasswordNeverExpires.Checked) -Enabled $true -CannotChangePassword ($checkboxUserCannotChangePass.checked) -ChangePasswordAtLogon ($checkboxUserMustChangePasswo.Checked) -AccountPassword $PasswordSecureString -HomeDrive $comboboxDriveLetter.SelectedItem -HomeDirectory $textboxhomedirectory.Text
					$User = Get-ADUser -Filter * | Where-Object { ($_.Name -eq $textboxDisplayName.text) -and ($_.UserPrincipalName -eq (($textboxUserLogonName.Text) + ($comboboxDomains.SelectedItem))) }
					add-logs -text "LOG: User has been created"
					
					$Proxys = @()
					add-logs -text "LOG: Getting user proxy addresses to set"
					$Proxys += $textboxproxyaddress.Lines
					If ($Proxys -ne $Null)
					{
						foreach ($Proxy in $Proxys)
						{
							add-logs -text "LOG: Adding proxy addresses"
							add-logs -text "LOG: Getting user proxy addresses to set"
							add-logs -text "CMD: Set-ADUser $User -Add @{ proxyAddresses = $Proxy }"
							Set-ADUser $User -Add @{ proxyAddresses = $Proxy }
						}
					}
					Else
					{
						add-logs -text "LOG: No proxys were found to add"
					}
					add-logs -text "LOG: Done with Proxys"
					
					#Find if user should be added to any groups
					add-logs -text 'LOG: Getting checked groups'
					$groups = $checkedlistboxGroups.CheckedItems
					If ($groups -ne $null)
					{
						add-logs -text 'LOG: Groups found'
						foreach ($group in $groups)
						{
							add-logs -text "LOG: Adding $User to $Group"
							add-logs -text "CMD: Add-ADGroupMember -Identity $Group -Members $User"
							Add-ADGroupMember -Identity $Group -Members $User
						}
					}
					Else
					{
						add-logs -text 'LOG: No Groups checked'
					}
					Add-Logs -text 'LOG: Done with Grous'
				}
			}
			Catch
			{
				add-logs -text "WARN: $_"
				Add-Type -AssemblyName System.Windows.Forms
				[System.Windows.Forms.MessageBox]::Show($_, 'Warning', 'OK', 'Warning')
			}
		}
	}
	#If only Office 365 user is being created 
	ElseIf (($checkboxCreateActiveDirector.Checked -eq $false) -and ($checkboxconfigo365user.Checked -eq $true))
	{
		add-logs -text 'LOG: Only an Office 365 User is being created'

	}
	ElseIf (($checkboxCreateActiveDirector.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $true))
	{
		add-logs -text 'LOG: Both an Office 365 User and Active Director User is being created'
	}
	Else
	{
		add-logs -text 'WARN: Nothing is being created!'
	}
}




$labelFirstName_Click={
	
}



$textboxDisplayName_TextChanged = {
	If ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0)
	{
		$labelDisplayName.Text = "Display Name:"
		$labelDisplayName.ForeColor = 'Black'
	}
	ElseIf ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -lt 1)
	{
		$labelDisplayName.Text = "*Display Name:"
		$labelDisplayName.ForeColor = 'Firebrick'
	}
	If (((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0)   )
	{
		$buttonCreateUser.Enabled = $true
	}
	Else
	{
		$buttonCreateUser.Enabled = $false
	}
	
}

$textboxLastName_TextChanged = {
	If ((($textboxInitials.text | Measure-Object -Character).Characters) -lt 1)
	{
		$textboxDisplayName.Text = $textboxFirstName.Text + " " + $textboxLastName.Text
	}
	Else
	{
		$textboxDisplayName.Text = $textboxFirstName.Text + " " + $textboxInitials.Text + "." + " " + $textboxLastName.Text
	}
}

$textboxFirstName_TextChanged = {
	If ((($textboxInitials.text | Measure-Object -Character).Characters) -lt 1)
	{
		$textboxDisplayName.Text = $textboxFirstName.text + " " + $textboxLastName.Text
	}
	Else
	{
		$textboxDisplayName.Text = $textboxFirstName.text + " " + $textboxInitials.Text + "." + " " + $textboxLastName.Text
	}
	
}

$textboxInitials_TextChanged = {
	If ((($textboxInitials.text | Measure-Object -Character).Characters) -lt 1)
	{
		$textboxDisplayName.Text = $textboxFirstName.text + " " + $textboxLastName.Text
	}
	Else
	{
		$textboxDisplayName.Text = $textboxFirstName.text + " " + $textboxInitials.text + "." + $textboxLastName.Text
	}
	
}

$button1_Click={
	Write-Host (($textboxInitials.text | Measure-Object -Character).Characters)
	
}

$buttonGeneratePassword_Click = {
	add-logs -text 'LOG: Generating random password'
	add-logs -text 'CMD: $textboxPasswordGen.Text = ([char[]]([char]33 .. [char]95) + ([char[]]([char]97 .. [char]126)) + 0 .. 9 | Sort-Object { Get-Random })[0 .. 10] -join '''
	$textboxPasswordGen.Text = ([char[]]([char]33 .. [char]95) + ([char[]]([char]97 .. [char]126)) + 0 .. 9 | Sort-Object { Get-Random })[0 .. 10] -join ''
	$maskedtextboxpassword.Text = $textboxPasswordGen.Text
	$textboxConfirmPassword.text = $textboxPasswordGen.Text
	
}

$textboxConfirmPassword_TextChanged = {
	If ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0)
	{
		$labelConfirmPassword.Text = "Confirm Password:"
		$labelConfirmPassword.ForeColor = 'Black'
	}
	ElseIf ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -lt 1)
	{
		$labelConfirmPassword.Text = "*Confirm Password:"
		$labelConfirmPassword.ForeColor = 'Firebrick'
	}
	
	If (((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -lt 1) -and ((($maskedtextboxpassword.Text | Measure-Object -Character).Characters) -lt 1))
	{
		$labelpasswordconfirmmessage.Text = ""
	}
	Else
	{
		If (($textboxConfirmPassword.Text) -ne ($maskedtextboxpassword.Text))
		{
			$labelpasswordconfirmmessage.ForeColor = 'Red'
			$labelpasswordconfirmmessage.Text = "Passwords do not match!"
			$buttonCreateUser.Enabled = $false
		}
		Else
		{
			
			
			$labelpasswordconfirmmessage.ForeColor = 'Green'
			$labelpasswordconfirmmessage.Text = "Passwords match!"
			If (((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
			{
				$buttonCreateUser.Enabled = $true
			}
			Else
			{
				$buttonCreateUser.Enabled = $false
			}
		}
	}
}

$buttonCopyOnPremUser_Click = {
	add-logs -text "LOG: Copying AD User attributes to Office 365 user"
	$textboxO365DisplayName.Text = $textboxDisplayName.Text
	$textboxO365Initials.Text = $textboxInitials.Text
	$textboxO365LastName.Text = $textboxLastName.Text
	$textboxO365FirstName.Text = $textboxFirstName.text
	#$buttonO365Genpassword.Enabled = $false
	$maskedtextboxo365password.Text = $maskedtextboxpassword.Text
	$textboxo365confirmpassword.Text = $textboxConfirmPassword.text
	$textboxo365passwordgen.Text = $textboxPasswordGen.text
	
	$textboxO365UPN.Text = ($textboxUserLogonName.text) + ($comboboxDomains.Text)
	
	$textboxo365city.Text = $textboxcity.Text
	$textboxO365street.Text = $textboxStreet.Text
	$textboxo365pobox.Text = $textboxPOBox.text
	$textboxo365zip.Text = $textboxzipcode.Text
	$textboxo365state.Text = $textboxstate.text
	
	$textboxo365proxyaddresses.Text = $textboxproxyaddress.Text
	$comboboxO365HidefromGAL.SelectedItem = $comboboxhidefromGAL.SelectedItem
	
	$checkboxo365usermustchangepassword.Checked = $checkboxUserMustChangePasswo.Checked
	add-logs -text "LOG: Copy Finished!"
	
}

$textboxo365confirmpassword_TextChanged={
	If ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0)
	{
		$labelO365userconfirmpassword.Text = "Confirm Password:"
		$labelO365userconfirmpassword.ForeColor = 'Black'
	}
	ElseIf ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -lt 1)
	{
		$labelO365userconfirmpassword.Text = "*Confirm Password:"
		$labelO365userconfirmpassword.ForeColor = 'Firebrick'
	}
	
	If (((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -lt 1) -and ((($maskedtextboxo365password.Text | Measure-Object -Character).Characters) -lt 1))
	{
		$labelo365password.Text = ""
	}
	Else
	{
		If (($textboxo365confirmpassword.Text) -ne ($maskedtextboxo365password.Text))
		{
			$labelo365password.ForeColor = 'Red'
			$labelo365password.Text = "Passwords do not match!"
			$buttonCreateUser.Enabled = $false
		}
		Else
		{
			$labelo365password.ForeColor = 'Green'
			$labelo365password.Text = "Passwords match!"
			If (((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0))
			{
				$buttonCreateUser.Enabled = $true
			}
			Else
			{
				$buttonCreateUser.Enabled = $false
			}
		}
	}
	
}

$buttonConnectToOffice365_Click = {
	If ($radiobuttonDisableMFA.Checked -eq $True)
	{
		$credential = Get-Credential -Message "Please enter your Office 365 credentials"
		If ($credential -eq $Null)
		{
			$InfoMessage = "No credentials were entered. Please enter valid Office 365 credentials"
			$InfoTitle = "Warning"
			Show-MessageBox_psf
		}
		Else
		{
			Import-Module MSOnline
			Connect-MsolService -Credential $credential
			$exchangeSession = New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri "https://outlook.office365.com/powershell-liveid/" -Authentication "Basic" -AllowRedirection -Credential $credential
			Import-PSSession $exchangeSession -AllowClobber
		}
	}
	Else
	{
		$Modules = Get-ChildItem $Env:LOCALAPPDATA\Apps\2.0\*\CreateExoPSSession.ps1 -Recurse | Select-Object -ExpandProperty Target -First 1
		foreach ($Module in $Modules)
		{
			Import-Module "$Module"
		}
		add-logs -text 'LOG: Connecting to MSOnline'
		#Connect to MSOnline w/2FA
		Connect-MsolService
		#Connect to Exchange Online w/ 2FA
		add-logs -text 'LOG: Connecting to Exchange Online'
		Connect-EXOPSSession
	}
	add-logs -text 'LOG: Checking to see if we are connected to Office 365'
	add-logs -text 'CMD: (Get-MsolDomain -ErrorAction SilentlyContinue) -ne $null'
	if ((Get-MsolDomain -ErrorAction SilentlyContinue) -ne $null)
	{
		
		add-logs -text 'LOG: Connected to Office 365!'
		add-logs -text 'LOG: Disabling connect to Office 365 button!'
		add-logs -text 'CMD: $buttonConnectToOffice365.Enabled = $False'
		$buttonConnectToOffice365.Enabled = $False
		
		#We only want licenses that have at least one to assign to a user
		add-logs -text 'LOG: Getting available licenses'
		add-logs -text 'CMD: Get-MsolAccountSku | Where-Object { $_.ActiveUnits -ne $_.ConsumedUnits }'
		$Avaialble = Get-MsolAccountSku | Where-Object { $_.ActiveUnits -ne $_.ConsumedUnits }
		
		
		add-logs -text 'LOG: Enabling Licenses combobox'
		add-logs -text 'CMD: $comboboxO365Licenses.Enabled = $True'
		$comboboxO365Licenses.Enabled = $True
		
		
		add-logs -text 'LOG: Loading license combobox with available licenses'
		add-logs -text 'CMD: Update-ComboBox -ComboBox $comboboxO365Licenses ($Avaialble).AccountSkuId'
		Update-ComboBox -ComboBox $comboboxO365Licenses ($Avaialble).AccountSkuId
		
		
		add-logs -text 'LOG: Loading Office 365 Groups ListBox'
		add-logs -text 'CMD: Update-ListBox -ListBox $checkedlistboxo365groups -Items (Get-MsolGroup | Select-Object -ExpandProperty DisplayName | Sort-Object)'
		Update-ListBox -ListBox $checkedlistboxo365groups -Items (Get-MsolGroup | Select-Object -ExpandProperty DisplayName | Sort-Object)
		
		
		$labelO365Groups.Text = "Please check all groups you want your user to be a member of. 
This feature is not available for AD-Synced environments"
		
		$labelsharedmailboxes.text = "Please check all Shared Mailboxes you want your user to have Full Access on.
		This feature is not available for AD-Synced environments"
		
		add-logs -text 'LOG: Getting all Shared Mailboxes'
		$Shared = Get-Mailbox | Where-Object { $_.RecipientTypeDetails -eq "SharedMailbox" } | Select-Object -ExpandProperty DisplayName | Sort-Object
		Update-ListBox -ListBox $checkedlistboxsharedmailboxes -Items $Shared
		
	}
	Else
	{
		add-logs -text 'WARN: Not connected to Office 365!'
	}
	
	
	
}



$buttonO365Genpassword_Click = {
	$textboxo365passwordgen.Text = ([char[]]([char]33 .. [char]95) + ([char[]]([char]97 .. [char]126)) + 0 .. 9 | Sort-Object { Get-Random })[0 .. 10] -join ''
	$maskedtextboxo365password.Text = $textboxo365passwordgen.Text
	$textboxo365confirmpassword.Text = $textboxo365passwordgen.Text

	
}

$tooltip1_Popup=[System.Windows.Forms.PopupEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.PopupEventArgs]
	#TODO: Place custom script here
	
}

$checkboxRunDirSyncAfterUserC_CheckedChanged={
	If ($checkboxRunDirSyncAfterUserC.Checked -eq $True)
	{
		$textboxO365FirstName.Enabled = $false
		$textboxO365DisplayName.Enabled = $false
		$textboxO365Initials.Enabled = $false
		$textboxO365LastName.Enabled = $false
		$buttonCopyOnPremUser.Enabled = $false
		$buttonO365Genpassword.Enabled = $false
		$textboxConfirmPassword.Enabled = $false
		$maskedtextboxo365password.Enabled = $false
		$textboxO365UPN.Enabled = $false
		$textboxo365state.Enabled = $false
		$textboxo365city.Enabled = $false
		$textboxo365zip.Enabled = $false
		$textboxo365pobox.Enabled = $false
		
		$labelO365Groups.Text = "This feature is not available for AD-Synced enviornments."
	}
	elseif ($checkboxRunDirSyncAfterUserC.Checked -eq $false)
	{
		$textboxO365FirstName.Enabled = $true
		$textboxO365DisplayName.Enabled = $true
		$textboxO365Initials.Enabled = $true
		$textboxO365LastName.Enabled = $true
		$buttonCopyOnPremUser.Enabled = $true
		$buttonO365Genpassword.Enabled = $true
		$textboxConfirmPassword.Enabled = $true
		$maskedtextboxo365password.Enabled = $true
		$textboxO365UPN.Enabled = $true
		$textboxo365state.Enabled = $true
		$textboxo365city.Enabled = $true
		$textboxo365zip.Enabled = $true
		$textboxo365pobox.Enabled = $true
		
		$labelO365Groups.Text = "Please check all groups you want your user to be a member of."
	}
}

$buttonExit_Click={

	$MainForm.close()
}

$textboxO365LastName_TextChanged={
	If ((($textboxO365Initials.text | Measure-Object -Character).Characters) -lt 1)
	{
		$textboxO365DisplayName.Text = $textboxO365FirstName.Text + " " + $textboxO365LastName.Text
	}
	Else
	{
		$textboxO365DisplayName.Text = $textboxO365FirstName.Text + " " + $textboxO365Initials.Text + "." + " " + $textboxO365LastName.Text
		
	}
}

$textboxO365FirstName_TextChanged={
	If ((($textboxO365Initials.text | Measure-Object -Character).Characters) -lt 1)
	{
		$textboxO365DisplayName.Text = $textboxO365FirstName.text + " " + $textboxO365LastName.Text
	}
	Else
	{
		$textboxO365DisplayName.Text = $textboxO365FirstName.text + " " + $textboxO365Initials.Text + "." + " " + $textboxO365LastName.Text
	}
	
}

$textboxO365Initials_TextChanged={
	If ((($textboxO365Initials.text | Measure-Object -Character).Characters) -lt 1)
	{
		$textboxO365DisplayName.Text = $textboxO365FirstName.text + " " + $textboxO365LastName.Text
	}
	Else
	{
		$textboxO365DisplayName.Text = $textboxO365FirstName.text + " " + $textboxO365Initials.text + "." + $textboxO365LastName.Text
	}
	
}



$console_TextChanged={
	$console.SelectionStart = $console.TextLength;
	$console.ScrollToCaret()
	$console.Focus()
	
}

$buttonO365Clear_Click = {
	add-logs -text 'LOG: Clearing randomly generated password'
	add-logs -text 'CMD: $textboxo365passwordgen.text = ""'
	$textboxo365passwordgen.text = ""
	
}

$buttonClear_Click={
	add-logs -text 'LOG: Clearing randomly generated password'
	add-logs -text 'CMD: $textboxPasswordGen.Text = "" '
	$textboxPasswordGen.Text = ""
}

$checkboxConfigureOffice365Us_CheckedChanged = {
	add-logs -text 'WHATS GOING ON HERE '
	#If ($checkboxCreateActiveDirector.Checked -eq $true)
	#{
	#	$groupboxNoAdSync.Enabled = $true
	#	If (!($ADSyncModule))
	#	{
	#		
	#		$groupboxADSync.Enabled = $False
	#		
	#	}
	#	Else
	#	{
	#		$groupboxADSync.Enabled = $True
	#	}
	#}
	#Else
	#{
	#	$groupboxNoAdSync.Enabled = $false
	#	$groupboxADSync.Enabled = $False
	#}
}



$checkboxconfigo365user_CheckedChanged={
	If (($checkboxCreateActiveDirector.Checked -eq $true) -or ($checkboxconfigo365user.Checked -eq $true))
	{
		#$groupboxNoAdSync.Enabled = $true
		Import-Module ADSync
		$ADSyncModule = Get-Module | Where-Object { $_.Name -eq "ADSync" }
		If ($null -ne $ADSyncModule)
		{
			add-logs -text 'LOG: DirSync found, enabling DirSync option'
			$checkboxRunDirSyncAfterUserC.Enabled = $True
			$groupboxADSync.Enabled = $true
		}
		Else
		{
			add-logs -text 'LOG: No DirSync Found. Enabling user creation'
			$groupboxNoAdSync.Enabled = $true
		}
	}
	Else
	{
		$groupboxNoAdSync.Enabled = $false
	}
	
}

$checkboxCreateActiveDirector_CheckedChanged={
	If (($checkboxCreateActiveDirector.Checked -eq $true) -or ($checkboxconfigo365user.Checked -eq $true))
	{
		$tabcontrolUserProperties.Enabled = $true
	}
	Else
	{
		$tabcontrolUserProperties.Enabled = $false	
	}
	
}

$copyAllLogToClipboardToolStripMenuItem_Click={
	$console.Text | clip
	
}

$clearLogToolStripMenuItem_Click={
	$console.Text = ""
	
}

$exitToolStripMenuItem_Click={
	$MainForm.close()
	
}



$textboxUserLogonName_TextChanged = {
	If ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0)
	{
		$labelUserLogonNameUPN.Text = "User logon name: (UPN)"
		$labelUserLogonNameUPN.ForeColor = 'Black'
	}
	ElseIf ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -lt 1)
	{
		$labelUserLogonNameUPN.Text = "*User logon name: (UPN)"
		$labelUserLogonNameUPN.ForeColor = 'Firebrick'
	}
	
	If (((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
	{
		$buttonCreateUser.Enabled = $true
	}
	Else
	{
		$buttonCreateUser.Enabled = $false
	}
}




$maskedtextboxpassword_TextChanged = {
	If ((($maskedtextboxpassword.Text | Measure-Object -Character).Characters) -gt 0)
	{
		$labelPassword.Text = "Password:"
		$labelPassword.ForeColor = 'Black'
	}
	ElseIf ((($maskedtextboxpassword.Text | Measure-Object -Character).Characters) -lt 1)
	{
		$labelPassword.Text = "*Password:"
		$labelPassword.ForeColor = 'Firebrick'
	}
	
	If (((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -lt 1) -and ((($maskedtextboxpassword.Text | Measure-Object -Character).Characters) -lt 1))
	{
		$labelpasswordconfirmmessage.Text = ""
	}
	Else
	{
		If (($textboxConfirmPassword.Text) -ne ($maskedtextboxpassword.Text))
		{
			$labelpasswordconfirmmessage.ForeColor = 'Red'
			$labelpasswordconfirmmessage.Text = "Passwords do not match!"
			$buttonCreateUser.Enabled = $false
		}
		Else
		{
			$labelpasswordconfirmmessage.ForeColor = 'Green'
			$labelpasswordconfirmmessage.Text = "Passwords match!"
			If (((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
			{
				$buttonCreateUser.Enabled = $true
			}
			Else
			{
				$buttonCreateUser.Enabled = $false
			}
		}
	}
}





$resetFormToolStripMenuItem_Click = {
	
	###########################
	#                         #
	#  ACTIVE DIRECTORY USER  #
	#                         #
	###########################
	
	add-logs -text 'LOG: Resetting forms on General Page'
	#General page
	$textboxFirstName.Text = ""
	$textboxInitials.Text = ""
	$textboxLastName.Text = ""
	$textboxDisplayName.Text = ""
	$textboxDescription.Text = ""
	$textboxoffice.Text = ""
	$textboxPasswordGen.Text = ""
	$maskedtextboxpassword.Text = ""
	$textboxConfirmPassword.Text = ""
	$textboxTelephone.Text = ""
	$textboxEmail.Text = ""
	$textboxWebPage.Text = ""
	
	add-logs -text 'LOG: Resetting forms on Account Page'
	#Account page
	$textboxUserLogonName.Text = ""
	$textboxSamAccount.Text = ""
	$checkboxAccountIsDisabled.CheckState = 'Unchecked'
	$checkboxUserMustChangePasswo.CheckState = 'Unchecked'
	$checkboxUserCannotChangePass.CheckState = 'Unchecked'
	$checkboxPasswordNeverExpires.CheckState = 'Unchecked'
	
	add-logs -text 'LOG: Resetting forms on Address Page'
	#Address page
	$textboxStreet.Text = ""
	$textboxPOBox.Text = ""
	$textboxcity.Text = ""
	$textboxstate.Text = ""
	$textboxzipcode.Text = ""
	
	add-logs -text 'LOG: Resetting forms on Groups Page'
	#Groups page
	for ($i = 0; $i -lt $checkedlistboxGroups.Items.Count; $i++)
	{
		
		$checkedlistboxGroups.SetItemCheckState($i, 'Unchecked')
		
	}
	
	add-logs -text 'LOG: Resetting forms on Organization Page'
	#Organization page
	$textboxjobtitle.Text = ""
	$textboxDepartment.Text = ""
	$textboxCompany.Text = ""
	
	add-logs -text 'LOG: Resetting forms on Profile Page'
	#Profile page
	$textboxprofilepath.Text = ""
	$textboxlogonscript.Text = ""
	$comboboxDriveLetter.SelectedIndex = 0
	$textboxhomedirectory.Text = ""
	
	add-logs -text 'LOG: Resetting forms on Attributes Page'
	#Attributes page
	$textboxproxyaddress.Text = ""
	
	
	###########################
	#                         #
	#     OFFICE 365 USER     #
	#                         #
	###########################
	
	
}

$linklabelBradWyatt_LinkClicked=[System.Windows.Forms.LinkLabelLinkClickedEventHandler]{
	start-process -FilePath "https://www.linkedin.com/in/bradleywyatt/"
	
}

$linklabelGitHubProject_LinkClicked=[System.Windows.Forms.LinkLabelLinkClickedEventHandler]{
	Start-Process -FilePath "https://github.com/bwya77/AD-Master-User-Creator"
	
}

$textboxO365DisplayName_TextChanged={
	If ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0)
	{
		$labelO365DisplayName.Text = "Display Name:"
		$labelO365DisplayName.ForeColor = 'Black'
	}
	ElseIf ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -lt 1)
	{
		$labelO365DisplayName.Text = "*Display Name:"
		$labelO365DisplayName.ForeColor = 'Firebrick'
	}
	If (((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0))
	{
		$buttonCreateUser.Enabled = $true
	}
	Else
	{
		$buttonCreateUser.Enabled = $false
	}
	
}

$textboxO365UPN_TextChanged={
	If ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0)
	{
		$labelO365UserPrincipalName.Text = "UserPrincipalName:"
		$labelO365UserPrincipalName.ForeColor = 'Black'
	}
	ElseIf ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -lt 1)
	{
		$labelO365UserPrincipalName.Text = "*UserPrincipalName:"
		$labelO365UserPrincipalName.ForeColor = 'Firebrick'
	}
	
	If (((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0))
	{
		$buttonCreateUser.Enabled = $true
	}
	Else
	{
		$buttonCreateUser.Enabled = $false
	}
	
}


$maskedtextboxo365password_TextChanged={
	If ((($maskedtextboxo365password.Text | Measure-Object -Character).Characters) -gt 0)
	{
		$labelO365userpassword.Text = "Password:"
		$labelO365userpassword.ForeColor = 'Black'
	}
	ElseIf ((($maskedtextboxo365password.Text | Measure-Object -Character).Characters) -lt 1)
	{
		$labelO365userpassword.Text = "*Password:"
		$labelO365userpassword.ForeColor = 'Firebrick'
	}
	
	If (((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -lt 1) -and ((($maskedtextboxo365password.Text | Measure-Object -Character).Characters) -lt 1))
	{
		$labelo365password.Text = ""
	}
	Else
	{
		If (($textboxo365confirmpassword.Text) -ne ($maskedtextboxo365password.Text))
		{
			$labelo365password.ForeColor = 'Red'
			$labelo365password.Text = "Passwords do not match!"
			$buttonCreateUser.Enabled = $false
		}
		Else
		{
			$labelo365password.ForeColor = 'Green'
			$labelo365password.Text = "Passwords match!"
			If (((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0))
			{
				$buttonCreateUser.Enabled = $true
			}
			Else
			{
				$buttonCreateUser.Enabled = $false
			}
		}
	}
	
}
]]></Code>
  <Mode>1</Mode>
  <Assemblies />
</File>