<File version="3.1">
  <FileID>c95ae3e0-a538-420a-aeb6-92411ccf751a</FileID>
  <Preview>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</Preview>
  <Form>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
7KPDn9qv/w9B6uSo87gCAA==</Form>
  <Code><![CDATA[#region Control Helper Functions
function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[switch]$Append
	)
	
	if (-not $Append)
	{
		$listBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection])
	{
		$listBox.Items.AddRange($Items)
	}
	elseif ($Items -is [Array])
	{
		$listBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$listBox.Items.Add($obj)
		}
		$listBox.EndUpdate()
	}
	else
	{
		$listBox.Items.Add($Items)
	}
	
	$listBox.DisplayMember = $DisplayMember
}

function Update-ComboBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ComboBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ComboBox control.
	
	.PARAMETER ComboBox
		The ComboBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ComboBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
	
	.PARAMETER Append
		Adds the item(s) to the ComboBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red" -Append
		Update-ComboBox $combobox1 "White" -Append
		Update-ComboBox $combobox1 "Blue" -Append
	
	.EXAMPLE
		Update-ComboBox $combobox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ComboBox]$ComboBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[switch]$Append
	)
	
	if (-not $Append)
	{
		$ComboBox.Items.Clear()
	}
	
	if ($Items -is [Object[]])
	{
		$ComboBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ComboBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ComboBox.Items.Add($obj)
		}
		$ComboBox.EndUpdate()
	}
	else
	{
		$ComboBox.Items.Add($Items)
	}
	
	$ComboBox.DisplayMember = $DisplayMember
}
#endregion
$MainForm_Load={
	$maskedtextboxpassword.UseSystemPasswordChar = $true
	$textboxConfirmPassword.UseSystemPasswordChar = $true
	$textboxo365confirmpassword.UseSystemPasswordChar = $true
	$maskedtextboxo365password.UseSystemPasswordChar = $true
	
	$comboboxhidefromGAL.SelectedIndex = 1
	$comboboxO365HidefromGAL.SelectedIndex = 1
	
	$Groups = Get-ADGroup -Filter * | Where-Object {($_.Name -ne "Domain Users") -and ($_.Name -ne "Domain Computers")} | Select-Object -ExpandProperty Name | Sort-Object
	Update-ListBox -ListBox $checkedlistboxGroups -Items $Groups
	
	$groupboxNoAdSync.Enabled = $false
	$groupboxADSync.Enabled = $False

	$Netbiosname = (Get-ADDomain).NetBIOSName
	$textboxUPNDomain.Text = $Netbiosname + "\"
	
	#Disable the Office 365 license drop down until we connect to MSOnline
	$comboboxO365Licenses.Enabled = $False
	
	$Forest = Get-ADForest
	$UPNs = @()
	$extraUPNS = ($Forest | Select-Object UPNSuffixes -ExpandProperty UPNSuffixes)
	If ($extraUPNs -ne $Null)
	{
		foreach ($extraUPN in $extraUPNs)
		{
			$UPNs += "@" + $extraUPN
		}
	}
	$UPNs += "@" +  ($Forest | Select-Object -ExpandProperty Name)
	Update-ComboBox -ComboBox $comboboxDomains -Items $UPNs
	$comboboxDomains.SelectedIndex = 0
	
	$groupboxNoAdSync.Enabled = $false
	$tabcontrolUserProperties.Enabled = $false
	
	$radiobuttonDisableMFA.Checked = $true
	
	$buttonCreateUser.Enabled = $false
	
}

$buttonCreateUser_Click = {
	#If only an AD User is being made
	add-logs -text 'LOG: Checking to see what is being created'
	If (($checkboxCreateActiveDirector.Checked -eq $True) -and ($checkboxconfigo365user.Checked -eq $false))
	{
		add-logs -text 'LOG: Only an Active Directory user is being created'
		add-logs -text 'LOG: Checking all required parameters for data...'
		If (($checkboxUserCannotChangePass.Checked -eq $true) -and ($checkboxUserMustChangePasswo.Checked -eq $true))
		{
			add-logs -text 'WARN: You cannot check both User Must Change Password at Next Logon and User Cannot Change Password for the same user.'
			$InfoMessage = "You cannot check both User Must Change Password at Next Logon and User Cannot Change Password for the same user."
			$InfoTitle = "Warning"
			Show-MessageBox_psf
		}
		ElseIf (($checkboxPasswordNeverExpires.Checked -eq $true) -and ($checkboxUserMustChangePasswo.Checked -eq $true))
		{
			add-logs -text 'WARN: You have selected "Password never Expires". and "User must change password at next logon". They will be unable to change their password'
			$InfoMessage = 'You have selected "Password never Expires". and "User must change password at next logon". They will be unable to change their password'
			$InfoTitle = "Warning"
			Show-MessageBox_psf
		}
		Else
		{
			add-logs -text 'LOG: All required parameters are valid'
			Try
			{
				add-logs -text 'LOG: Converting password to SecureString'
				add-logs -text 'CMD: ConvertTo-SecureString -String $textboxConfirmPassword.Text'
				$PasswordSecureString = $textboxConfirmPassword.Text | ConvertTo-SecureString -AsPlainText -Force
				#Get disable account boolean
				add-logs -text 'LOG: Checking if account is disabled or enabled'
				$disabledaccount = ($checkboxAccountIsDisabled.checked)
				#If account should be disabled
				If ($disabledaccount -eq $true)
				{
					add-logs -text 'LOG: Account is disabled'
					add-logs -text 'LOG: Creating user'
					New-ADUser -Name ($textboxDisplayName.Text) -GivenName ($textboxFirstName.Text) -Surname ($textboxLastName.Text) -Initials ($textboxInitials.Text) -DisplayName ($textboxDisplayName.Text) -SamAccountName ($textboxSamAccount.text) -UserPrincipalName (($textboxUserLogonName.Text) + ($comboboxDomains.SelectedItem)) -EmailAddress ($textboxEmail.Text) -Description ($textboxDescription.Text) -Office ($textboxoffice.text) -OfficePhone ($textboxTelephone.text) -HomePage ($textboxWebPage.text) -StreetAddress ($textboxStreet.text) -State ($textboxstate.text) -PostalCode ($textboxzipcode.Text) -City ($textboxcity.text) -Title ($textboxjobtitle.text) -Department ($textboxDepartment.text) -Company ($textboxCompany.text) -POBox ($textboxPOBox.text) -ProfilePath ($textboxprofilepath.text) -ScriptPath ($textboxlogonscript.text) -PasswordNeverExpires ($checkboxPasswordNeverExpires.Checked) -Enabled $false -CannotChangePassword ($checkboxUserCannotChangePass.checked) -ChangePasswordAtLogon ($checkboxUserMustChangePasswo.Checked) -AccountPassword $PasswordSecureString -HomeDrive $comboboxDriveLetter.SelectedItem -HomeDirectory $textboxhomedirectory.Text
					$User = Get-ADUser -Filter * | Where-Object { ($_.Name -eq $textboxDisplayName.text) -and ($_.UserPrincipalName -eq (($textboxUserLogonName.Text) + ($comboboxDomains.SelectedItem))) }
					add-logs -text "LOG: User has been created"
					
					$Proxys = @()
					add-logs -text "LOG: Getting user proxy addresses to set"
					$Proxys += $textboxproxyaddress.Lines
					If ($Proxys -ne $Null)
					{
						foreach ($Proxy in $Proxys)
						{
							add-logs -text "LOG: Adding proxy addresses"
							add-logs -text "LOG: Getting user proxy addresses to set"
							add-logs -text "CMD: Set-ADUser $User -Add @{ proxyAddresses = $Proxy }"
							Set-ADUser $User -Add @{ proxyAddresses = $Proxy }
						}
					}
					Else
					{
						add-logs -text "LOG: No proxys were found to add"
					}
					add-logs -text "LOG: Done with Proxys"
					
					#Find if user should be added to any groups
					add-logs -text 'LOG: Getting checked groups'
					$groups = $checkedlistboxGroups.CheckedItems
					If ($groups -ne $null)
					{
						add-logs -text 'LOG: Groups found'
						foreach ($group in $groups)
						{
							add-logs -text "LOG: Adding $User to $Group"
							add-logs -text "CMD: Add-ADGroupMember -Identity $Group -Members $User"
							Add-ADGroupMember -Identity $Group -Members $User
						}
					}
					Else
					{
						add-logs -text 'LOG: No Groups checked'
					}
				}
				Else
				{
					add-logs -text 'LOG: Account is enabled'
					add-logs -text 'LOG: Creating user'
					New-ADUser -Name ($textboxDisplayName.Text) -GivenName ($textboxFirstName.Text) -Surname ($textboxLastName.Text) -Initials ($textboxInitials.Text) -DisplayName ($textboxDisplayName.Text) -SamAccountName ($textboxSamAccount.text) -UserPrincipalName (($textboxUserLogonName.Text) + ($comboboxDomains.SelectedItem)) -EmailAddress ($textboxEmail.Text) -Description ($textboxDescription.Text) -Office ($textboxoffice.text) -OfficePhone ($textboxTelephone.text) -HomePage ($textboxWebPage.text) -StreetAddress ($textboxStreet.text) -State ($textboxstate.text) -PostalCode ($textboxzipcode.Text) -City ($textboxcity.text) -Title ($textboxjobtitle.text) -Department ($textboxDepartment.text) -Company ($textboxCompany.text) -POBox ($textboxPOBox.text) -ProfilePath ($textboxprofilepath.text) -ScriptPath ($textboxlogonscript.text) -PasswordNeverExpires ($checkboxPasswordNeverExpires.Checked) -Enabled $true -CannotChangePassword ($checkboxUserCannotChangePass.checked) -ChangePasswordAtLogon ($checkboxUserMustChangePasswo.Checked) -AccountPassword $PasswordSecureString -HomeDrive $comboboxDriveLetter.SelectedItem -HomeDirectory $textboxhomedirectory.Text
					$User = Get-ADUser -Filter * | Where-Object { ($_.Name -eq $textboxDisplayName.text) -and ($_.UserPrincipalName -eq (($textboxUserLogonName.Text) + ($comboboxDomains.SelectedItem))) }
					add-logs -text "LOG: User has been created"
					
					$Proxys = @()
					add-logs -text "LOG: Getting user proxy addresses to set"
					$Proxys += $textboxproxyaddress.Lines
					If ($Proxys -ne $Null)
					{
						foreach ($Proxy in $Proxys)
						{
							add-logs -text "LOG: Adding proxy addresses"
							add-logs -text "LOG: Getting user proxy addresses to set"
							add-logs -text "CMD: Set-ADUser $User -Add @{ proxyAddresses = $Proxy }"
							Set-ADUser $User -Add @{ proxyAddresses = $Proxy }
						}
					}
					Else
					{
						add-logs -text "LOG: No proxys were found to add"
					}
					add-logs -text "LOG: Done with Proxys"
					
					#Find if user should be added to any groups
					add-logs -text 'LOG: Getting checked groups'
					$groups = $checkedlistboxGroups.CheckedItems
					If ($groups -ne $null)
					{
						add-logs -text 'LOG: Groups found'
						foreach ($group in $groups)
						{
							add-logs -text "LOG: Adding $User to $Group"
							add-logs -text "CMD: Add-ADGroupMember -Identity $Group -Members $User"
							Add-ADGroupMember -Identity $Group -Members $User
						}
					}
					Else
					{
						add-logs -text 'LOG: No Groups checked'
					}
					Add-Logs -text 'LOG: Done with Grous'
				}
			}
			Catch
			{
				add-logs -text "WARN: $_"
				Add-Type -AssemblyName System.Windows.Forms
				[System.Windows.Forms.MessageBox]::Show($_, 'Warning', 'OK', 'Warning')
			}
		}
	}
	#If only Office 365 user is being created 
	ElseIf (($checkboxCreateActiveDirector.Checked -eq $false) -and ($checkboxconfigo365user.Checked -eq $true))
	{
		add-logs -text 'LOG: Only an Office 365 User is being created'
		#If user UPN is not entered display a error message
		If ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -lt 1)
		{
			
			$InfoMessage = "Please enter a UserPrincipalName as it's required"
			$InfoTitle = "Warning"
			Show-MessageBox_psf
		}
	}
	ElseIf (($checkboxCreateActiveDirector.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $true))
	{
		#If user logon name is not entered display a error message
		If (((($textboxSamAccount.Text | Measure-Object -Character).Characters) -lt 1) -or ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -lt 1))
		{
			$InfoMessage = "An Active Directory logon name (pre-windows 2000) and Office 365 UserPrincipalName are required"
			$InfoTitle = "Warning"
			Show-MessageBox_psf
		}
		add-logs -text 'LOG: Both an Office 365 User and Active Director User is being created'
	}
	Else
	{
		add-logs -text 'WARN: Nothing is being created!'
	}
}




$labelFirstName_Click={
	
}



$textboxDisplayName_TextChanged = {
	If ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0)
	{
		$labelDisplayName.Text = "Display Name:"
		$labelDisplayName.ForeColor = 'Black'
	}
	ElseIf ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -lt 1)
	{
		$labelDisplayName.Text = "*Display Name:"
		$labelDisplayName.ForeColor = 'Firebrick'
	}
	If (((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0)   )
	{
		$buttonCreateUser.Enabled = $true
	}
	Else
	{
		$buttonCreateUser.Enabled = $false
	}
	
}

$textboxLastName_TextChanged = {
	If ((($textboxInitials.text | Measure-Object -Character).Characters) -lt 1)
	{
		$textboxDisplayName.Text = $textboxFirstName.Text + " " + $textboxLastName.Text
	}
	Else
	{
		$textboxDisplayName.Text = $textboxFirstName.Text + " " + $textboxInitials.Text + "." + " " + $textboxLastName.Text
	}
}

$textboxFirstName_TextChanged = {
	If ((($textboxInitials.text | Measure-Object -Character).Characters) -lt 1)
	{
		$textboxDisplayName.Text = $textboxFirstName.text + " " + $textboxLastName.Text
	}
	Else
	{
		$textboxDisplayName.Text = $textboxFirstName.text + " " + $textboxInitials.Text + "." + " " + $textboxLastName.Text
	}
	
}

$textboxInitials_TextChanged = {
	If ((($textboxInitials.text | Measure-Object -Character).Characters) -lt 1)
	{
		$textboxDisplayName.Text = $textboxFirstName.text + " " + $textboxLastName.Text
	}
	Else
	{
		$textboxDisplayName.Text = $textboxFirstName.text + " " + $textboxInitials.text + "." + $textboxLastName.Text
	}
	
}

$button1_Click={
	Write-Host (($textboxInitials.text | Measure-Object -Character).Characters)
	
}

$buttonGeneratePassword_Click = {
	add-logs -text 'LOG: Generating random password'
	add-logs -text 'CMD: $textboxPasswordGen.Text = ([char[]]([char]33 .. [char]95) + ([char[]]([char]97 .. [char]126)) + 0 .. 9 | Sort-Object { Get-Random })[0 .. 10] -join '''
	$textboxPasswordGen.Text = ([char[]]([char]33 .. [char]95) + ([char[]]([char]97 .. [char]126)) + 0 .. 9 | Sort-Object { Get-Random })[0 .. 10] -join ''
	$maskedtextboxpassword.Text = $textboxPasswordGen.Text
	$textboxConfirmPassword.text = $textboxPasswordGen.Text
	
}

$textboxConfirmPassword_TextChanged = {
	If ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0)
	{
		$labelConfirmPassword.Text = "Confirm Password:"
		$labelConfirmPassword.ForeColor = 'Black'
	}
	ElseIf ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -lt 1)
	{
		$labelConfirmPassword.Text = "*Confirm Password:"
		$labelConfirmPassword.ForeColor = 'Firebrick'
	}
	
	If (((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -lt 1) -and ((($maskedtextboxpassword.Text | Measure-Object -Character).Characters) -lt 1))
	{
		$labelpasswordconfirmmessage.Text = ""
	}
	Else
	{
		If (($textboxConfirmPassword.Text) -ne ($maskedtextboxpassword.Text))
		{
			$labelpasswordconfirmmessage.ForeColor = 'Red'
			$labelpasswordconfirmmessage.Text = "Passwords do not match!"
			$buttonCreateUser.Enabled = $false
		}
		Else
		{
			
			
			$labelpasswordconfirmmessage.ForeColor = 'Green'
			$labelpasswordconfirmmessage.Text = "Passwords match!"
			If (((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
			{
				$buttonCreateUser.Enabled = $true
			}
			Else
			{
				$buttonCreateUser.Enabled = $false
			}
		}
	}
}

$buttonCopyOnPremUser_Click = {
	add-logs -text "LOG: Copying AD User attributes to Office 365 user"
	$textboxO365DisplayName.Text = $textboxDisplayName.Text
	$textboxO365Initials.Text = $textboxInitials.Text
	$textboxO365LastName.Text = $textboxLastName.Text
	$textboxO365FirstName.Text = $textboxFirstName.text
	#$buttonO365Genpassword.Enabled = $false
	$maskedtextboxo365password.Text = $maskedtextboxpassword.Text
	$textboxo365confirmpassword.Text = $textboxConfirmPassword.text
	$textboxo365passwordgen.Text = $textboxPasswordGen.text
	
	$textboxO365UPN.Text = ($textboxUserLogonName.text) + ($comboboxDomains.Text)
	
	$textboxo365city.Text = $textboxcity.Text
	$textboxO365street.Text = $textboxStreet.Text
	$textboxo365pobox.Text = $textboxPOBox.text
	$textboxo365zip.Text = $textboxzipcode.Text
	$textboxo365state.Text = $textboxstate.text
	
	$textboxo365proxyaddresses.Text = $textboxproxyaddress.Text
	$comboboxO365HidefromGAL.SelectedItem = $comboboxhidefromGAL.SelectedItem
	
	$checkboxo365usermustchangepassword.Checked = $checkboxUserMustChangePasswo.Checked
	add-logs -text "LOG: Copy Finished!"
	
}

$textboxo365confirmpassword_TextChanged={
	If (($textboxo365confirmpassword.Text) -ne ($maskedtextboxo365password.Text))
	{
		$labelo365password.ForeColor = 'Red'
		$labelo365password.Text = "Passwords do not match!"
	}
	Else
	{
		$labelo365password.ForeColor = 'Green'
		$labelo365password.Text = "Passwords match!"
	}
	
}

$buttonConnectToOffice365_Click = {
	If ($radiobuttonDisableMFA.Checked -eq $True)
	{
		$credential = Get-Credential -Message "Please enter your Office 365 credentials"
		If ($credential -eq $Null)
		{
			$InfoMessage = "No credentials were entered. Please enter valid Office 365 credentials"
			$InfoTitle = "Warning"
			Show-MessageBox_psf
		}
		Else
		{
			Import-Module MSOnline
			Connect-MsolService -Credential $credential
			$exchangeSession = New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri "https://outlook.office365.com/powershell-liveid/" -Authentication "Basic" -AllowRedirection -Credential $credential
			Import-PSSession $exchangeSession -AllowClobber
		}
	}
	Else
	{
		$Modules = Get-ChildItem $Env:LOCALAPPDATA\Apps\2.0\*\CreateExoPSSession.ps1 -Recurse | Select-Object -ExpandProperty Target -First 1
		foreach ($Module in $Modules)
		{
			Import-Module "$Module"
		}
		add-logs -text 'LOG: Connecting to MSOnline'
		#Connect to MSOnline w/2FA
		Connect-MsolService
		#Connect to Exchange Online w/ 2FA
		add-logs -text 'LOG: Connecting to Exchange Online'
		Connect-EXOPSSession
	}
	add-logs -text 'LOG: Checking to see if we are connected to Office 365'
	add-logs -text 'CMD: (Get-MsolDomain -ErrorAction SilentlyContinue) -ne $null'
	if ((Get-MsolDomain -ErrorAction SilentlyContinue) -ne $null)
	{
		
		add-logs -text 'LOG: Connected to Office 365!'
		add-logs -text 'LOG: Disabling connect to Office 365 button!'
		add-logs -text 'CMD: $buttonConnectToOffice365.Enabled = $False'
		$buttonConnectToOffice365.Enabled = $False
		
		#We only want licenses that have at least one to assign to a user
		add-logs -text 'LOG: Getting available licenses'
		add-logs -text 'CMD: Get-MsolAccountSku | Where-Object { $_.ActiveUnits -ne $_.ConsumedUnits }'
		$Avaialble = Get-MsolAccountSku | Where-Object { $_.ActiveUnits -ne $_.ConsumedUnits }
		
		
		add-logs -text 'LOG: Enabling Licenses combobox'
		add-logs -text 'CMD: $comboboxO365Licenses.Enabled = $True'
		$comboboxO365Licenses.Enabled = $True
		
		
		add-logs -text 'LOG: Loading license combobox with available licenses'
		add-logs -text 'CMD: Update-ComboBox -ComboBox $comboboxO365Licenses ($Avaialble).AccountSkuId'
		Update-ComboBox -ComboBox $comboboxO365Licenses ($Avaialble).AccountSkuId
		
		
		add-logs -text 'LOG: Loading Office 365 Groups ListBox'
		add-logs -text 'CMD: Update-ListBox -ListBox $checkedlistboxo365groups -Items (Get-MsolGroup | Select-Object -ExpandProperty DisplayName | Sort-Object)'
		Update-ListBox -ListBox $checkedlistboxo365groups -Items (Get-MsolGroup | Select-Object -ExpandProperty DisplayName | Sort-Object)
		
		
		$labelO365Groups.Text = "Please check all groups you want your user to be a member of. 
This feature is not available for AD-Synced environments"
		
		$labelsharedmailboxes.text = "Please check all Shared Mailboxes you want your user to have Full Access on.
		This feature is not available for AD-Synced environments"
		
		add-logs -text 'LOG: Getting all Shared Mailboxes'
		$Shared = Get-Mailbox | Where-Object { $_.RecipientTypeDetails -eq "SharedMailbox" } | Select-Object -ExpandProperty DisplayName | Sort-Object
		Update-ListBox -ListBox $checkedlistboxsharedmailboxes -Items $Shared
		
	}
	Else
	{
		add-logs -text 'WARN: Not connected to Office 365!'
	}
	
	
	
}



$buttonO365Genpassword_Click = {
	$textboxo365passwordgen.Text = ([char[]]([char]33 .. [char]95) + ([char[]]([char]97 .. [char]126)) + 0 .. 9 | Sort-Object { Get-Random })[0 .. 10] -join ''
	$maskedtextboxo365password.Text = $textboxo365passwordgen.Text
	$textboxo365confirmpassword.Text = $textboxo365passwordgen.Text

	
}

$tooltip1_Popup=[System.Windows.Forms.PopupEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.PopupEventArgs]
	#TODO: Place custom script here
	
}

$checkboxRunDirSyncAfterUserC_CheckedChanged={
	If ($checkboxRunDirSyncAfterUserC.Checked -eq $True)
	{
		$textboxO365FirstName.Enabled = $false
		$textboxO365DisplayName.Enabled = $false
		$textboxO365Initials.Enabled = $false
		$textboxO365LastName.Enabled = $false
		$buttonCopyOnPremUser.Enabled = $false
		$buttonO365Genpassword.Enabled = $false
		$textboxConfirmPassword.Enabled = $false
		$maskedtextboxo365password.Enabled = $false
		$textboxO365UPN.Enabled = $false
		$textboxo365state.Enabled = $false
		$textboxo365city.Enabled = $false
		$textboxo365zip.Enabled = $false
		$textboxo365pobox.Enabled = $false
		
		$labelO365Groups.Text = "This feature is not available for AD-Synced enviornments."
	}
	elseif ($checkboxRunDirSyncAfterUserC.Checked -eq $false)
	{
		$textboxO365FirstName.Enabled = $true
		$textboxO365DisplayName.Enabled = $true
		$textboxO365Initials.Enabled = $true
		$textboxO365LastName.Enabled = $true
		$buttonCopyOnPremUser.Enabled = $true
		$buttonO365Genpassword.Enabled = $true
		$textboxConfirmPassword.Enabled = $true
		$maskedtextboxo365password.Enabled = $true
		$textboxO365UPN.Enabled = $true
		$textboxo365state.Enabled = $true
		$textboxo365city.Enabled = $true
		$textboxo365zip.Enabled = $true
		$textboxo365pobox.Enabled = $true
		
		$labelO365Groups.Text = "Please check all groups you want your user to be a member of."
	}
}

$buttonExit_Click={

	$MainForm.close()
}

$textboxO365LastName_TextChanged={
	If ((($textboxO365Initials.text | Measure-Object -Character).Characters) -lt 1)
	{
		$textboxO365DisplayName.Text = $textboxO365FirstName.Text + " " + $textboxO365LastName.Text
	}
	Else
	{
		$textboxO365DisplayName.Text = $textboxO365FirstName.Text + " " + $textboxO365Initials.Text + "." + " " + $textboxO365LastName.Text
		
	}
}

$textboxO365FirstName_TextChanged={
	If ((($textboxO365Initials.text | Measure-Object -Character).Characters) -lt 1)
	{
		$textboxO365DisplayName.Text = $textboxO365FirstName.text + " " + $textboxO365LastName.Text
	}
	Else
	{
		$textboxO365DisplayName.Text = $textboxO365FirstName.text + " " + $textboxO365Initials.Text + "." + " " + $textboxO365LastName.Text
	}
	
}

$textboxO365Initials_TextChanged={
	If ((($textboxO365Initials.text | Measure-Object -Character).Characters) -lt 1)
	{
		$textboxO365DisplayName.Text = $textboxO365FirstName.text + " " + $textboxO365LastName.Text
	}
	Else
	{
		$textboxO365DisplayName.Text = $textboxO365FirstName.text + " " + $textboxO365Initials.text + "." + $textboxO365LastName.Text
	}
	
}



$console_TextChanged={
	$console.SelectionStart = $console.TextLength;
	$console.ScrollToCaret()
	$console.Focus()
	
}

$buttonO365Clear_Click = {
	add-logs -text 'LOG: Clearing randomly generated password'
	add-logs -text 'CMD: $textboxo365passwordgen.text = ""'
	$textboxo365passwordgen.text = ""
	
}

$buttonClear_Click={
	add-logs -text 'LOG: Clearing randomly generated password'
	add-logs -text 'CMD: $textboxPasswordGen.Text = "" '
	$textboxPasswordGen.Text = ""
}

$checkboxConfigureOffice365Us_CheckedChanged = {
	If ($checkboxCreateActiveDirector.Checked -eq $true)
	{
		$groupboxNoAdSync.Enabled = $true
		If (!($ADSyncModule))
		{
			
			$groupboxADSync.Enabled = $False
			
		}
		Else
		{
			$groupboxADSync.Enabled = $True
		}
	}
	Else
	{
		$groupboxNoAdSync.Enabled = $false
		$groupboxADSync.Enabled = $False
	}
}



$checkboxconfigo365user_CheckedChanged={
	If (($checkboxCreateActiveDirector.Checked -eq $true) -or ($checkboxconfigo365user.Checked -eq $true))
	{
		$buttonCreateUser.Enabled = $true
		$groupboxNoAdSync.Enabled = $true
		If (!($ADSyncModule))
		{
			
			$groupboxADSync.Enabled = $False
		}
		Else
		{
			$groupboxADSync.Enabled = $True
		}
	}
	Else
	{
		$buttonCreateUser.Enabled = $false
		$groupboxNoAdSync.Enabled = $false
		$groupboxADSync.Enabled = $False	
	}
	
}

$checkboxCreateActiveDirector_CheckedChanged={
	If (($checkboxCreateActiveDirector.Checked -eq $true) -or ($checkboxconfigo365user.Checked -eq $true))
	{
		$tabcontrolUserProperties.Enabled = $true
	}
	Else
	{
		$tabcontrolUserProperties.Enabled = $false	
	}
	
}

$copyAllLogToClipboardToolStripMenuItem_Click={
	$console.Text | clip
	
}

$clearLogToolStripMenuItem_Click={
	$console.Text = ""
	
}

$exitToolStripMenuItem_Click={
	$MainForm.close()
	
}



$textboxUserLogonName_TextChanged = {
	If ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0)
	{
		$labelUserLogonNameUPN.Text = "User logon name: (UPN)"
		$labelUserLogonNameUPN.ForeColor = 'Black'
	}
	ElseIf ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -lt 1)
	{
		$labelUserLogonNameUPN.Text = "*User logon name: (UPN)"
		$labelUserLogonNameUPN.ForeColor = 'Firebrick'
	}
	
	If (((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
	{
		$buttonCreateUser.Enabled = $true
	}
	Else
	{
		$buttonCreateUser.Enabled = $false
	}
}




$maskedtextboxpassword_TextChanged = {
	If ((($maskedtextboxpassword.Text | Measure-Object -Character).Characters) -gt 0)
	{
		$labelPassword.Text = "Password:"
		$labelPassword.ForeColor = 'Black'
	}
	ElseIf ((($maskedtextboxpassword.Text | Measure-Object -Character).Characters) -lt 1)
	{
		$labelPassword.Text = "*Password:"
		$labelPassword.ForeColor = 'Firebrick'
	}
	
	If (((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -lt 1) -and ((($maskedtextboxpassword.Text | Measure-Object -Character).Characters) -lt 1))
	{
		$labelpasswordconfirmmessage.Text = ""
	}
	Else
	{
		If (($textboxConfirmPassword.Text) -ne ($maskedtextboxpassword.Text))
		{
			$labelpasswordconfirmmessage.ForeColor = 'Red'
			$labelpasswordconfirmmessage.Text = "Passwords do not match!"
			$buttonCreateUser.Enabled = $false
		}
		Else
		{
			$labelpasswordconfirmmessage.ForeColor = 'Green'
			$labelpasswordconfirmmessage.Text = "Passwords match!"
			If (((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
			{
				$buttonCreateUser.Enabled = $true
			}
			Else
			{
				$buttonCreateUser.Enabled = $false
			}
		}
	}
}





$resetFormToolStripMenuItem_Click = {
	###########################
	#                         #
	#  ACTIVE DIRECTORY USER  #
	#                         #
	###########################
	
	add-logs -text 'LOG: Resetting forms on General Page'
	#General page
	$textboxFirstName.Text = ""
	$textboxInitials.Text = ""
	$textboxLastName.Text = ""
	$textboxDisplayName.Text = ""
	$textboxDescription.Text = ""
	$textboxoffice.Text = ""
	$textboxPasswordGen.Text = ""
	$maskedtextboxpassword.Text = ""
	$textboxConfirmPassword.Text = ""
	$textboxTelephone.Text = ""
	$textboxEmail.Text = ""
	$textboxWebPage.Text = ""
	
	add-logs -text 'LOG: Resetting forms on Account Page'
	#Account page
	$textboxUserLogonName.Text = ""
	$textboxSamAccount.Text = ""
	$checkboxAccountIsDisabled.CheckState = 'Unchecked'
	$checkboxUserMustChangePasswo.CheckState = 'Unchecked'
	$checkboxUserCannotChangePass.CheckState = 'Unchecked'
	$checkboxPasswordNeverExpires.CheckState = 'Unchecked'
	
	add-logs -text 'LOG: Resetting forms on Address Page'
	#Address page
	$textboxStreet.Text = ""
	$textboxPOBox.Text = ""
	$textboxcity.Text = ""
	$textboxstate.Text = ""
	$textboxzipcode.Text = ""
	
	add-logs -text 'LOG: Resetting forms on Groups Page'
	#Groups page
	for ($i = 0; $i -lt $checkedlistboxGroups.Items.Count; $i++)
	{
		
		$checkedlistboxGroups.SetItemCheckState($i, 'Unchecked')
		
	}
	
	add-logs -text 'LOG: Resetting forms on Organization Page'
	#Organization page
	$textboxjobtitle.Text = ""
	$textboxDepartment.Text = ""
	$textboxCompany.Text = ""
	
	add-logs -text 'LOG: Resetting forms on Profile Page'
	#Profile page
	$textboxprofilepath.Text = ""
	$textboxlogonscript.Text = ""
	$comboboxDriveLetter.SelectedIndex = 0
	$textboxhomedirectory.Text = ""
	
	add-logs -text 'LOG: Resetting forms on Attributes Page'
	#Attributes page
	$textboxproxyaddress.Text = ""
	
	
	###########################
	#                         #
	#     OFFICE 365 USER     #
	#                         #
	###########################
	
	
}

$linklabelBradWyatt_LinkClicked=[System.Windows.Forms.LinkLabelLinkClickedEventHandler]{
	start-process -FilePath "https://www.linkedin.com/in/bradleywyatt/"
	
}

$linklabelGitHubProject_LinkClicked=[System.Windows.Forms.LinkLabelLinkClickedEventHandler]{
	Start-Process -FilePath "https://github.com/bwya77/AD-Master-User-Creator"
	
}
]]></Code>
  <Mode>0</Mode>
  <Assemblies />
</File>