#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: 46747728-ffe8-444b-ac66-f10472371add
# Source File: C:\Users\brw18\OneDrive - bwya77\SurfaceBook\Documents\GitHub\AD-Master-User-Creator\NewADUser.psproj
#------------------------------------------------------------------------
#region Project Recovery Data (DO NOT MODIFY)
<#RecoveryData:
9QIAAB+LCAAAAAAABACdUl1PwjAUfSfhPyx9NBljuDASRxORzPAgGoa+mrLdsWnXLm3Hh7/ebh2I
QaLx5banPT3nfjRYQMw3IPZTogjudiwreBL8DWJlRXsWZ4Kz/AOSMQoJlYCawzCnCsQYXfVK6d7U
sTBLYhZ3V9BmkzZR6mhOMqBlT+0Uaoy01QsImXOGB71+4BxAe6ddYDbF3tD3fH8wstMURrbneSub
xMOhnbp9zx9c+y5JksBpye3TtoLlvgSshU/hQZzTRNtZzqmbbEELrUmVU115H+FIEaGqsi7GeF1i
WgtIQQCLIaxYrHQ5YxRlfGs/kJyFXBSvuisIH1Ddo18Eo4yIuv9LUcGP8jO24e9g31O+IlTLuwib
vaxH8c907zLN+Mr3CP+Q8MUOgJRkDRO+a3twxGeiBphxHMdn0KPI1zkjtCbMSQF4Dtvb6bMEoVVK
zQycM0q3EzjfvvkneZV9wPUCAAA=#>
#endregion
<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2018 v5.5.153
     Generated on:       7/10/2018 6:57 PM
     Generated by:       brw18
    --------------------------------------------------------------------------------
    .DESCRIPTION
        Script generated by PowerShell Studio 2018
#>



#region Source: Startup.pss
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
YQAAAB+LCAAAAAAABACzCUpNzi9LLap0SSxJVAAyijPz82yVjPUMlex4uRQUbPyLMtMz8xJz3DJz
Uv0Sc1PtgksSi0pKC/QKiott9DFkebls9JGNtAMAoyFkEGEAAAA=#>
#endregion
#----------------------------------------------
#region Import Assemblies
#----------------------------------------------
#endregion Import Assemblies

#Define a Param block to use custom parameters in the project
#Param ($CustomParameter)

function Main {
<#
    .SYNOPSIS
        The Main function starts the project application.
    
    .PARAMETER Commandline
        $Commandline contains the complete argument string passed to the script packager executable.
    
    .NOTES
        Use this function to initialize your script and to call GUI forms.
		
    .NOTES
        To get the console output in the Packager (Forms Engine) use: 
		$ConsoleOutput (Type: System.Collections.ArrayList)
#>
	Param ([String]$Commandline)
		
	#--------------------------------------------------------------------------
	#TODO: Add initialization script here (Load modules and check requirements)
	
	
	#--------------------------------------------------------------------------
	
	if((Show-MainForm_psf) -eq 'OK')
	{
		
	}
	
	$script:ExitCode = 0 #Set the exit code for the Packager
}



#endregion Source: Startup.pss

#region Source: MainForm.psf
function Show-MainForm_psf
{
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
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
mIWCAAA=#>
#endregion
	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$MainForm = New-Object 'System.Windows.Forms.Form'
	$console = New-Object 'System.Windows.Forms.TextBox'
	$buttonExit = New-Object 'System.Windows.Forms.Button'
	$buttonCreateUser = New-Object 'System.Windows.Forms.Button'
	$tabcontrol1 = New-Object 'System.Windows.Forms.TabControl'
	$tabpageSettings = New-Object 'System.Windows.Forms.TabPage'
	$groupbox1 = New-Object 'System.Windows.Forms.GroupBox'
	$labelLink = New-Object 'System.Windows.Forms.Label'
	$label100 = New-Object 'System.Windows.Forms.Label'
	$linklabelBradWyatt = New-Object 'System.Windows.Forms.LinkLabel'
	$linklabelGitHub = New-Object 'System.Windows.Forms.LinkLabel'
	$labelAuthor = New-Object 'System.Windows.Forms.Label'
	$labelVersion = New-Object 'System.Windows.Forms.Label'
	$groupbox2FA = New-Object 'System.Windows.Forms.GroupBox'
	$radiobuttonEnableMFA = New-Object 'System.Windows.Forms.RadioButton'
	$radiobuttonDisableMFA = New-Object 'System.Windows.Forms.RadioButton'
	$groupboxADUser = New-Object 'System.Windows.Forms.GroupBox'
	$checkboxCreateAnActiveDirect = New-Object 'System.Windows.Forms.CheckBox'
	$groupboxOffice365User = New-Object 'System.Windows.Forms.GroupBox'
	$checkboxconfigo365user = New-Object 'System.Windows.Forms.CheckBox'
	$tabpage1 = New-Object 'System.Windows.Forms.TabPage'
	$tabcontrolUserProperties = New-Object 'System.Windows.Forms.TabControl'
	$tabpageGeneral = New-Object 'System.Windows.Forms.TabPage'
	$panel1 = New-Object 'System.Windows.Forms.Panel'
	$maskedtextboxpassword = New-Object 'System.Windows.Forms.TextBox'
	$buttonClear = New-Object 'System.Windows.Forms.Button'
	$labelpasswordconfirmmessage = New-Object 'System.Windows.Forms.Label'
	$textboxConfirmPassword = New-Object 'System.Windows.Forms.TextBox'
	$labelConfirmPassword = New-Object 'System.Windows.Forms.Label'
	$buttonGeneratePassword = New-Object 'System.Windows.Forms.Button'
	$textboxPasswordGen = New-Object 'System.Windows.Forms.TextBox'
	$labelPassword = New-Object 'System.Windows.Forms.Label'
	$labelWebPage = New-Object 'System.Windows.Forms.Label'
	$labelEMail = New-Object 'System.Windows.Forms.Label'
	$labelTelephoneNumber = New-Object 'System.Windows.Forms.Label'
	$textboxWebPage = New-Object 'System.Windows.Forms.TextBox'
	$textboxEmail = New-Object 'System.Windows.Forms.TextBox'
	$textboxTelephone = New-Object 'System.Windows.Forms.TextBox'
	$labelOffice = New-Object 'System.Windows.Forms.Label'
	$labelDescription = New-Object 'System.Windows.Forms.Label'
	$textboxoffice = New-Object 'System.Windows.Forms.TextBox'
	$textboxDescription = New-Object 'System.Windows.Forms.TextBox'
	$labelFirstName = New-Object 'System.Windows.Forms.Label'
	$textboxDisplayName = New-Object 'System.Windows.Forms.TextBox'
	$textboxFirstName = New-Object 'System.Windows.Forms.TextBox'
	$labelDisplayName = New-Object 'System.Windows.Forms.Label'
	$textboxInitials = New-Object 'System.Windows.Forms.TextBox'
	$labelLastName = New-Object 'System.Windows.Forms.Label'
	$labelInitials = New-Object 'System.Windows.Forms.Label'
	$textboxLastName = New-Object 'System.Windows.Forms.TextBox'
	$tabpageAccount = New-Object 'System.Windows.Forms.TabPage'
	$labelPlaceUserInFollowing = New-Object 'System.Windows.Forms.Label'
	$comboboxOUTree = New-Object 'System.Windows.Forms.ComboBox'
	$panel2 = New-Object 'System.Windows.Forms.Panel'
	$checkboxAccountIsDisabled = New-Object 'System.Windows.Forms.CheckBox'
	$checkboxPasswordNeverExpires = New-Object 'System.Windows.Forms.CheckBox'
	$checkboxUserCannotChangePass = New-Object 'System.Windows.Forms.CheckBox'
	$checkboxUserMustChangePasswo = New-Object 'System.Windows.Forms.CheckBox'
	$textboxSamAccount = New-Object 'System.Windows.Forms.TextBox'
	$textboxUPNDomain = New-Object 'System.Windows.Forms.TextBox'
	$labelUserLogonNamepreWind = New-Object 'System.Windows.Forms.Label'
	$comboboxDomains = New-Object 'System.Windows.Forms.ComboBox'
	$textboxUserLogonName = New-Object 'System.Windows.Forms.TextBox'
	$labelUserLogonNameUPN = New-Object 'System.Windows.Forms.Label'
	$tabpageAddress = New-Object 'System.Windows.Forms.TabPage'
	$label1 = New-Object 'System.Windows.Forms.Label'
	$labelZipPostalCode = New-Object 'System.Windows.Forms.Label'
	$textboxzipcode = New-Object 'System.Windows.Forms.TextBox'
	$textboxstate = New-Object 'System.Windows.Forms.TextBox'
	$labelStateprovince = New-Object 'System.Windows.Forms.Label'
	$labelcity = New-Object 'System.Windows.Forms.Label'
	$textboxcity = New-Object 'System.Windows.Forms.TextBox'
	$textboxPOBox = New-Object 'System.Windows.Forms.TextBox'
	$labelPOBox = New-Object 'System.Windows.Forms.Label'
	$textboxStreet = New-Object 'System.Windows.Forms.TextBox'
	$labelStreet = New-Object 'System.Windows.Forms.Label'
	$tabpageGroups = New-Object 'System.Windows.Forms.TabPage'
	$labelPleaseCheckAllGroups = New-Object 'System.Windows.Forms.Label'
	$checkedlistboxGroups = New-Object 'System.Windows.Forms.CheckedListBox'
	$tabpageOrganization = New-Object 'System.Windows.Forms.TabPage'
	$textboxCompany = New-Object 'System.Windows.Forms.TextBox'
	$labelCompany = New-Object 'System.Windows.Forms.Label'
	$textboxDepartment = New-Object 'System.Windows.Forms.TextBox'
	$labelDepartment = New-Object 'System.Windows.Forms.Label'
	$textboxjobtitle = New-Object 'System.Windows.Forms.TextBox'
	$labelJobTitle = New-Object 'System.Windows.Forms.Label'
	$tabpageProfile = New-Object 'System.Windows.Forms.TabPage'
	$groupbox2 = New-Object 'System.Windows.Forms.GroupBox'
	$labelDriveLetter = New-Object 'System.Windows.Forms.Label'
	$textboxhomedirectory = New-Object 'System.Windows.Forms.TextBox'
	$labelTo = New-Object 'System.Windows.Forms.Label'
	$comboboxDriveLetter = New-Object 'System.Windows.Forms.ComboBox'
	$groupboxuserprofile = New-Object 'System.Windows.Forms.GroupBox'
	$textboxlogonscript = New-Object 'System.Windows.Forms.TextBox'
	$textboxprofilepath = New-Object 'System.Windows.Forms.TextBox'
	$labelLogonScript = New-Object 'System.Windows.Forms.Label'
	$labelProfilePath = New-Object 'System.Windows.Forms.Label'
	$tabpageattributes = New-Object 'System.Windows.Forms.TabPage'
	$labelProxyAddresses = New-Object 'System.Windows.Forms.Label'
	$textboxproxyaddress = New-Object 'System.Windows.Forms.TextBox'
	$tabpageOffice365 = New-Object 'System.Windows.Forms.TabPage'
	$groupboxNoAdSync = New-Object 'System.Windows.Forms.GroupBox'
	$tabcontrol2 = New-Object 'System.Windows.Forms.TabControl'
	$tabpageO365General = New-Object 'System.Windows.Forms.TabPage'
	$buttonConnectToOffice365 = New-Object 'System.Windows.Forms.Button'
	$labelO365FirstName = New-Object 'System.Windows.Forms.Label'
	$buttonCopyOnPremUser = New-Object 'System.Windows.Forms.Button'
	$comboboxO365Licenses = New-Object 'System.Windows.Forms.ComboBox'
	$textboxO365FirstName = New-Object 'System.Windows.Forms.TextBox'
	$panel3 = New-Object 'System.Windows.Forms.Panel'
	$maskedtextboxo365password = New-Object 'System.Windows.Forms.TextBox'
	$buttonO365Clear = New-Object 'System.Windows.Forms.Button'
	$labelo365password = New-Object 'System.Windows.Forms.Label'
	$textboxo365confirmpassword = New-Object 'System.Windows.Forms.TextBox'
	$labelO365userconfirmpassword = New-Object 'System.Windows.Forms.Label'
	$buttonO365Genpassword = New-Object 'System.Windows.Forms.Button'
	$textboxo365passwordgen = New-Object 'System.Windows.Forms.TextBox'
	$labelO365userpassword = New-Object 'System.Windows.Forms.Label'
	$labelO365License = New-Object 'System.Windows.Forms.Label'
	$labelO365LastName = New-Object 'System.Windows.Forms.Label'
	$textboxO365LastName = New-Object 'System.Windows.Forms.TextBox'
	$textboxO365DisplayName = New-Object 'System.Windows.Forms.TextBox'
	$labelO365DisplayName = New-Object 'System.Windows.Forms.Label'
	$tabpageO365Account = New-Object 'System.Windows.Forms.TabPage'
	$comboboxMFA = New-Object 'System.Windows.Forms.ComboBox'
	$labelMultiFactorAuthentic = New-Object 'System.Windows.Forms.Label'
	$comboboxO365Domains = New-Object 'System.Windows.Forms.ComboBox'
	$labelAliasEMailAddresses = New-Object 'System.Windows.Forms.Label'
	$textboxo365proxyaddresses = New-Object 'System.Windows.Forms.TextBox'
	$textboxO365EmailAddress = New-Object 'System.Windows.Forms.TextBox'
	$labelEMailOnlyIfYouWantIt = New-Object 'System.Windows.Forms.Label'
	$comboboxO365countrycode = New-Object 'System.Windows.Forms.ComboBox'
	$labelCountryCode = New-Object 'System.Windows.Forms.Label'
	$panel4 = New-Object 'System.Windows.Forms.Panel'
	$checkboxBlockCred = New-Object 'System.Windows.Forms.CheckBox'
	$checkboxO365PasswordNeverExpires = New-Object 'System.Windows.Forms.CheckBox'
	$checkboxo365usermustchangepassword = New-Object 'System.Windows.Forms.CheckBox'
	$textboxO365UPN = New-Object 'System.Windows.Forms.TextBox'
	$labelO365UserPrincipalName = New-Object 'System.Windows.Forms.Label'
	$tabpageO365Address = New-Object 'System.Windows.Forms.TabPage'
	$label10 = New-Object 'System.Windows.Forms.Label'
	$textboxo365zip = New-Object 'System.Windows.Forms.TextBox'
	$textboxo365state = New-Object 'System.Windows.Forms.TextBox'
	$label11 = New-Object 'System.Windows.Forms.Label'
	$label12 = New-Object 'System.Windows.Forms.Label'
	$textboxo365city = New-Object 'System.Windows.Forms.TextBox'
	$textboxO365street = New-Object 'System.Windows.Forms.TextBox'
	$label14 = New-Object 'System.Windows.Forms.Label'
	$tabpageO365Groups = New-Object 'System.Windows.Forms.TabPage'
	$labelO365Groups = New-Object 'System.Windows.Forms.TextBox'
	$checkedlistboxDISTROo365groups = New-Object 'System.Windows.Forms.CheckedListBox'
	$tabpagesecurityGroups = New-Object 'System.Windows.Forms.TabPage'
	$labelSecurityGroups = New-Object 'System.Windows.Forms.TextBox'
	$checkedlistboxO365SecurityGroups = New-Object 'System.Windows.Forms.CheckedListBox'
	$tabpageo365shared = New-Object 'System.Windows.Forms.TabPage'
	$groupbox3 = New-Object 'System.Windows.Forms.GroupBox'
	$labelAutomapping = New-Object 'System.Windows.Forms.Label'
	$comboboxsharedmailboxautomap = New-Object 'System.Windows.Forms.ComboBox'
	$comboboxsharedmaiboxpermission = New-Object 'System.Windows.Forms.ComboBox'
	$labelPermission = New-Object 'System.Windows.Forms.Label'
	$labelsharedmailboxes = New-Object 'System.Windows.Forms.TextBox'
	$checkedlistboxsharedmailboxes = New-Object 'System.Windows.Forms.CheckedListBox'
	$tabpageO365Attributes = New-Object 'System.Windows.Forms.TabPage'
	$labelHideFromGlobalAddres = New-Object 'System.Windows.Forms.Label'
	$comboboxO365HidefromGAL = New-Object 'System.Windows.Forms.ComboBox'
	$groupboxADSync = New-Object 'System.Windows.Forms.GroupBox'
	$checkboxRunDirSyncAfterUserC = New-Object 'System.Windows.Forms.CheckBox'
	$menustrip1 = New-Object 'System.Windows.Forms.MenuStrip'
	$fileToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$exitToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$editToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$tooltip1 = New-Object 'System.Windows.Forms.ToolTip'
	$copyAllLogToClipboardToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$clearLogToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$resetFormToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$disconnectFromOffice365ToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$toolstripseparator1 = New-Object 'System.Windows.Forms.ToolStripSeparator'
	$saveLogAsToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$helpToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$versionToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	#region Control Helper Functions
	function Update-ListBox
	{
	<#
		.SYNOPSIS
			This functions helps you load items into a ListBox or CheckedListBox.
		
		.DESCRIPTION
			Use this function to dynamically load items into the ListBox control.
		
		.PARAMETER ListBox
			The ListBox control you want to add items to.
		
		.PARAMETER Items
			The object or objects you wish to load into the ListBox's Items collection.
		
		.PARAMETER DisplayMember
			Indicates the property to display for the items in this control.
		
		.PARAMETER Append
			Adds the item(s) to the ListBox without clearing the Items collection.
		
		.EXAMPLE
			Update-ListBox $ListBox1 "Red", "White", "Blue"
		
		.EXAMPLE
			Update-ListBox $listBox1 "Red" -Append
			Update-ListBox $listBox1 "White" -Append
			Update-ListBox $listBox1 "Blue" -Append
		
		.EXAMPLE
			Update-ListBox $listBox1 (Get-Process) "ProcessName"
		
		.NOTES
			Additional information about the function.
	#>
		
		param
		(
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			[System.Windows.Forms.ListBox]$ListBox,
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			$Items,
			[Parameter(Mandatory = $false)]
			[string]$DisplayMember,
			[switch]$Append
		)
		
		if (-not $Append)
		{
			$listBox.Items.Clear()
		}
		
		if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection])
		{
			$listBox.Items.AddRange($Items)
		}
		elseif ($Items -is [Array])
		{
			$listBox.BeginUpdate()
			foreach ($obj in $Items)
			{
				$listBox.Items.Add($obj)
			}
			$listBox.EndUpdate()
		}
		else
		{
			$listBox.Items.Add($Items)
		}
		
		$listBox.DisplayMember = $DisplayMember
	}
	
	function Update-ComboBox
	{
	<#
		.SYNOPSIS
			This functions helps you load items into a ComboBox.
		
		.DESCRIPTION
			Use this function to dynamically load items into the ComboBox control.
		
		.PARAMETER ComboBox
			The ComboBox control you want to add items to.
		
		.PARAMETER Items
			The object or objects you wish to load into the ComboBox's Items collection.
		
		.PARAMETER DisplayMember
			Indicates the property to display for the items in this control.
		
		.PARAMETER Append
			Adds the item(s) to the ComboBox without clearing the Items collection.
		
		.EXAMPLE
			Update-ComboBox $combobox1 "Red", "White", "Blue"
		
		.EXAMPLE
			Update-ComboBox $combobox1 "Red" -Append
			Update-ComboBox $combobox1 "White" -Append
			Update-ComboBox $combobox1 "Blue" -Append
		
		.EXAMPLE
			Update-ComboBox $combobox1 (Get-Process) "ProcessName"
		
		.NOTES
			Additional information about the function.
	#>
		
		param
		(
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			[System.Windows.Forms.ComboBox]$ComboBox,
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			$Items,
			[Parameter(Mandatory = $false)]
			[string]$DisplayMember,
			[switch]$Append
		)
		
		if (-not $Append)
		{
			$ComboBox.Items.Clear()
		}
		
		if ($Items -is [Object[]])
		{
			$ComboBox.Items.AddRange($Items)
		}
		elseif ($Items -is [System.Collections.IEnumerable])
		{
			$ComboBox.BeginUpdate()
			foreach ($obj in $Items)
			{
				$ComboBox.Items.Add($obj)
			}
			$ComboBox.EndUpdate()
		}
		else
		{
			$ComboBox.Items.Add($Items)
		}
		
		$ComboBox.DisplayMember = $DisplayMember
	}
	#endregion
	$MainForm_Load = {
		
		$maskedtextboxpassword.UseSystemPasswordChar = $true
		$textboxConfirmPassword.UseSystemPasswordChar = $true
		$textboxo365confirmpassword.UseSystemPasswordChar = $true
		$maskedtextboxo365password.UseSystemPasswordChar = $true
		
		$comboboxO365HidefromGAL.SelectedIndex = 1
	
		$groupboxNoAdSync.Enabled = $false
		$groupboxADSync.Enabled = $False
		
		#Disable the Office 365 license drop down until we connect to MSOnline
		$comboboxO365Licenses.Enabled = $False
		
		$groupboxNoAdSync.Enabled = $false
		$tabcontrolUserProperties.Enabled = $false
		
		$radiobuttonDisableMFA.Checked = $true
		
		$buttonCreateUser.Enabled = $false
		
		$labelO365Groups.Text = "To add your user to a Mail Enabled Group, please connect to Office 365"
		$labelsharedmailboxes.text = "To grant your user permissions on a Shared Mailbox, please connect to Office 365"
		$labelSecurityGroups.Text = "To add your user to a Security Group, please connect to Office 365"
		
		
		$checkedlistboxDISTROo365groups.Enabled = $false
		$checkedlistboxsharedmailboxes.Enabled = $false
		
		$disconnectFromOffice365ToolStripMenuItem.Enabled = $false
		
		Update-ComboBox -ComboBox $comboboxO365Domains -Items "Please connect to Office 365"
		
		$comboboxsharedmaiboxpermission.SelectedIndex = 0
		$comboboxsharedmailboxautomap.SelectedIndex = 0
		
		$comboboxsharedmaiboxpermission.Enabled = $false
		$comboboxsharedmailboxautomap.Enabled = $false
		
		$Global:AD_Pre_Req = 0
		$Global:O365_Pre_Req = 0
		
		$comboboxMFA.SelectedIndex = 0
		
		$comboboxO365countrycode.SelectedItem = "US"
		
	}
	
	$buttonCreateUser_Click = {
		#If only an AD User is being made
		add-logs -text 'LOG: Checking to see what is being created'
		If (($checkboxCreateAnActiveDirect.Checked -eq $True) -and ($checkboxconfigo365user.Checked -eq $false))
		{
			add-logs -text 'LOG: Only an Active Directory user is being created'
			add-logs -text 'LOG: Checking all required parameters for data...'
			If (($checkboxUserCannotChangePass.Checked -eq $true) -and ($checkboxUserMustChangePasswo.Checked -eq $true))
			{
				add-logs -text 'WARN: You cannot check both User Must Change Password at Next Logon and User Cannot Change Password for the same user.'
				$InfoMessage = "You cannot check both User Must Change Password at Next Logon and User Cannot Change Password for the same user."
				$InfoTitle = "Warning"
				Show-MessageBox_psf
			}
			ElseIf (($checkboxPasswordNeverExpires.Checked -eq $true) -and ($checkboxUserMustChangePasswo.Checked -eq $true))
			{
				add-logs -text 'WARN: You have selected "Password never Expires". and "User must change password at next logon". They will be unable to change their password'
				$InfoMessage = 'You have selected "Password never Expires". and "User must change password at next logon". They will be unable to change their password'
				$InfoTitle = "Warning"
				Show-MessageBox_psf
			}
			Else
			{
				add-logs -text 'LOG: All required parameters are valid'
				Try
				{
					add-logs -text 'LOG: Converting password to SecureString'
					add-logs -text 'CMD: ConvertTo-SecureString -String $textboxConfirmPassword.Text'
					$PasswordSecureString = $textboxConfirmPassword.Text | ConvertTo-SecureString -AsPlainText -Force
					#Get disable account boolean
					add-logs -text 'LOG: Checking if account is disabled or enabled'
					$disabledaccount = ($checkboxAccountIsDisabled.checked)
					#If account should be disabled
					If ($disabledaccount -eq $true)
					{
						add-logs -text 'LOG: Account is disabled'
						add-logs -text 'LOG: Creating user'
						Try
						{
							New-ADUser -Name ($textboxDisplayName.Text) -GivenName ($textboxFirstName.Text) -Surname ($textboxLastName.Text) -Initials ($textboxInitials.Text) -DisplayName ($textboxDisplayName.Text) -SamAccountName ($textboxSamAccount.text) -UserPrincipalName (($textboxUserLogonName.Text) + ($comboboxDomains.SelectedItem)) -EmailAddress ($textboxEmail.Text) -Description ($textboxDescription.Text) -Office ($textboxoffice.text) -OfficePhone ($textboxTelephone.text) -HomePage ($textboxWebPage.text) -StreetAddress ($textboxStreet.text) -State ($textboxstate.text) -PostalCode ($textboxzipcode.Text) -City ($textboxcity.text) -Title ($textboxjobtitle.text) -Department ($textboxDepartment.text) -Company ($textboxCompany.text) -POBox ($textboxPOBox.text) -ProfilePath ($textboxprofilepath.text) -ScriptPath ($textboxlogonscript.text) -PasswordNeverExpires ($checkboxPasswordNeverExpires.Checked) -Enabled $false -CannotChangePassword ($checkboxUserCannotChangePass.checked) -ChangePasswordAtLogon ($checkboxUserMustChangePasswo.Checked) -AccountPassword $PasswordSecureString -HomeDrive $comboboxDriveLetter.SelectedItem -HomeDirectory $textboxhomedirectory.Text
						}
						Catch
						{
							add-logs -text "WARN: $_"
							$InfoMessage = $_
							$InfoTitle = "Warning"
							Show-MessageBox_psf
						}
						$User = Get-ADUser -Filter * | Where-Object { ($_.Name -eq $textboxDisplayName.text) -and ($_.UserPrincipalName -eq (($textboxUserLogonName.Text) + ($comboboxDomains.SelectedItem))) }
						add-logs -text "LOG: User has been created"
						
						add-logs -text 'LOG: Checking if user is being put in an specific OU'
						If ($comboboxOUTree.SelectedItem -ne $null)
						{
							
							add-logs -text 'LOG: Specific OU specified, moving user'
							$CanocicalName = $comboboxOUTree.SelectedItem
							add-logs -text "CMD: `$OUTOMove = (Get-ADOrganizationalUnit -Filter * -Properties CanonicalName | Where-Object { `$_.CanonicalName -eq $CanocicalName }).DistinguishedName"
							$OUTOMove = (Get-ADOrganizationalUnit -Filter * -Properties CanonicalName | Where-Object { $_.CanonicalName -eq $CanocicalName }).DistinguishedName
							add-logs -text "CMD: `$User | Move-ADObject -TargetPath $OUTOMove"
							$User | Move-ADObject -TargetPath $OUTOMove
							add-logs -text 'LOG: Done'
						}
						Else
						{
							add-logs -text 'LOG: No OU Specified, skipping'
						}
						
						$Proxys = @()
						add-logs -text "LOG: Getting user proxy addresses to set"
						$Proxys += $textboxproxyaddress.Lines
						If ($Proxys -ne $Null)
						{
							foreach ($Proxy in $Proxys)
							{
								add-logs -text "LOG: Adding proxy addresses"
								add-logs -text "LOG: Getting user proxy addresses to set"
								add-logs -text "CMD: Set-ADUser $User -Add @{ proxyAddresses = $Proxy }"
								Set-ADUser $User -Add @{ proxyAddresses = $Proxy }
							}
						}
						Else
						{
							add-logs -text "LOG: No proxys were found to add"
						}
						add-logs -text "LOG: Done with Proxys"
						
						#Find if user should be added to any groups
						add-logs -text 'LOG: Getting checked groups'
						$groups = $checkedlistboxGroups.CheckedItems
						If ($groups -ne $null)
						{
							add-logs -text 'LOG: Groups found'
							foreach ($group in $groups)
							{
								add-logs -text "LOG: Adding $User to $Group"
								add-logs -text "CMD: Add-ADGroupMember -Identity $Group -Members $User"
								Add-ADGroupMember -Identity $Group -Members $User
							}
						}
						Else
						{
							add-logs -text 'LOG: No Groups checked'
						}
					}
					Else
					{
						add-logs -text 'LOG: Account is enabled'
						add-logs -text 'LOG: Creating user'
						Try
						{
							New-ADUser -Name ($textboxDisplayName.Text) -GivenName ($textboxFirstName.Text) -Surname ($textboxLastName.Text) -Initials ($textboxInitials.Text) -DisplayName ($textboxDisplayName.Text) -SamAccountName ($textboxSamAccount.text) -UserPrincipalName (($textboxUserLogonName.Text) + ($comboboxDomains.SelectedItem)) -EmailAddress ($textboxEmail.Text) -Description ($textboxDescription.Text) -Office ($textboxoffice.text) -OfficePhone ($textboxTelephone.text) -HomePage ($textboxWebPage.text) -StreetAddress ($textboxStreet.text) -State ($textboxstate.text) -PostalCode ($textboxzipcode.Text) -City ($textboxcity.text) -Title ($textboxjobtitle.text) -Department ($textboxDepartment.text) -Company ($textboxCompany.text) -POBox ($textboxPOBox.text) -ProfilePath ($textboxprofilepath.text) -ScriptPath ($textboxlogonscript.text) -PasswordNeverExpires ($checkboxPasswordNeverExpires.Checked) -Enabled $true -CannotChangePassword ($checkboxUserCannotChangePass.checked) -ChangePasswordAtLogon ($checkboxUserMustChangePasswo.Checked) -AccountPassword $PasswordSecureString -HomeDrive $comboboxDriveLetter.SelectedItem -HomeDirectory $textboxhomedirectory.Text
						}
						Catch
						{
							add-logs -text "WARN: $_"
							$InfoMessage = $_
							$InfoTitle = "Warning"
							Show-MessageBox_psf
						}
						$User = Get-ADUser -Filter * | Where-Object { ($_.Name -eq $textboxDisplayName.text) -and ($_.UserPrincipalName -eq (($textboxUserLogonName.Text) + ($comboboxDomains.SelectedItem))) }
						add-logs -text "LOG: User has been created"
						
						add-logs -text 'LOG: Checking if user is being put in an specific OU'
						If ($comboboxOUTree.SelectedItem -ne $null)
						{
							
							add-logs -text 'LOG: Specific OU specified, moving user'
							$CanocicalName = $comboboxOUTree.SelectedItem
							add-logs -text "CMD: `$OUTOMove = (Get-ADOrganizationalUnit -Filter * -Properties CanonicalName | Where-Object { `$_.CanonicalName -eq $CanocicalName }).DistinguishedName"
							$OUTOMove = (Get-ADOrganizationalUnit -Filter * -Properties CanonicalName | Where-Object { $_.CanonicalName -eq $CanocicalName }).DistinguishedName
							add-logs -text "CMD: `$User | Move-ADObject -TargetPath $OUTOMove"
							$User | Move-ADObject -TargetPath $OUTOMove
							add-logs -text 'LOG: Done'
						}
						Else
						{
							add-logs -text 'LOG: No OU Specified, skipping'
						}
						
						$Proxys = @()
						add-logs -text "LOG: Getting user proxy addresses to set"
						$Proxys += $textboxproxyaddress.Lines
						If ($Proxys -ne $Null)
						{
							foreach ($Proxy in $Proxys)
							{
								add-logs -text "LOG: Adding proxy addresses"
								add-logs -text "LOG: Getting user proxy addresses to set"
								add-logs -text "CMD: Set-ADUser $User -Add @{ proxyAddresses = $Proxy }"
								Set-ADUser $User -Add @{ proxyAddresses = $Proxy }
							}
						}
						Else
						{
							add-logs -text "LOG: No proxys were found to add"
						}
						add-logs -text "LOG: Done with Proxys"
						
						#Find if user should be added to any groups
						add-logs -text 'LOG: Getting checked groups'
						$groups = $checkedlistboxGroups.CheckedItems
						If ($groups -ne $null)
						{
							add-logs -text 'LOG: Groups found'
							foreach ($group in $groups)
							{
								add-logs -text "LOG: Adding $User to $Group"
								add-logs -text "CMD: Add-ADGroupMember -Identity $Group -Members $User"
								Add-ADGroupMember -Identity $Group -Members $User
							}
						}
						Else
						{
							add-logs -text 'LOG: No Groups checked'
						}
						Add-Logs -text 'LOG: Done with Groups'
					}
				}
				Catch
				{
					add-logs -text "WARN: $_"
					Add-Type -AssemblyName System.Windows.Forms
					[System.Windows.Forms.MessageBox]::Show($_, 'Warning', 'OK', 'Warning')
				}
			}
		}
		#If only Office 365 user is being created 
		ElseIf (($checkboxCreateAnActiveDirect.Checked -eq $false) -and ($checkboxconfigo365user.Checked -eq $true))
		{
			add-logs -text 'LOG: Only an Office 365 User is being created'
			add-logs -text 'LOG: Checking DirSync option'
			#If DirSync is enabled
			If ($checkboxRunDirSyncAfterUserC.CheckState -eq 'Checked')
			{
				add-logs -text 'LOG: DirSync Enabled'
				add-logs -text 'LOG: Running DirSync'
				add-logs -text 'CMD: Start-ADSyncSyncCycle'
				Start-ADSyncSyncCycle
				add-logs -text 'LOG: Done'
			}
			#If DirSync is not enabled
			Else
			{
				add-logs -text "LOG: User is not being AD-Synced"
				add-logs -text 'LOG: Checking all required parameters for data...'
				If (($checkboxO365PasswordNeverExpires.Checked -eq $true) -and ($checkboxo365usermustchangepassword.Checked -eq $true))
				{
					add-logs -text 'WARN: You have selected "Password never Expires". and "User must change password at next logon". They will be unable to change their password'
					$InfoMessage = 'You have selected "Password never Expires". and "User must change password at next logon". They will be unable to change their password'
					$InfoTitle = "Warning"
					Show-MessageBox_psf
				}
				Else
				{
					add-logs -text 'LOG: All required parameters are valid'
					
					#Check to see if the user is being enabled upon creation or disabled
					
					#User is going to be disabled
					add-logs -text 'LOG: Checking enabled status of user'
					If ($checkboxBlockCred.Checked -eq $true)
					{
						#If user is going to be disabled
						add-logs -text 'LOG: User is Disabled'
						add-logs -text 'LOG: Creating user'
						If (($comboboxO365Licenses.SelectedItem -ne $null) -and ($comboboxO365countrycode.SelectedItem -eq $null))
						{
							add-logs -text 'WARN: You must assign a country code to your user if you are assigning a license'
							$InfoMessage = 'You must assign a country code to your user if you are assigning a license'
							$InfoTitle = "Warning"
							Show-MessageBox_psf
						}
						Else
						{
							If ($comboboxO365Licenses.SelectedItem -ne $null)
							{
								$Lookup = @()
								Add-Logs -text "LOG: Getting License selected for user"
								$License = $comboboxO365Licenses.SelectedItem
								Add-Logs -text "LOG: Getting AccountSKU Domain"
								$LicenseDomain = ((((Get-MsolAccountSku).AccountSkuID) -split ":" | Select-Object -First 1) + ":").Trim()
								Add-Logs -text "LOG: Looking up SKU for license"
								$Lookup += $Sku.Keys | Where-Object { $Sku["$_"] -eq "$license" }
								If ((($Lookup | Measure-Object -Character).Characters) -lt 1)
								{
									Add-Logs -text "LOG: No SKU found during lookup"
									$BackSKU = "$LicenseDomain$License"
									Add-Logs -text "LOG: Checking if $BackSKU is already SKU"
									$CheckSku = Get-MSOLAccountSku | Where-Object { $_.AccountSKuID -like "*$BackSKU*" } | Select-Object -ExpandProperty AccountSkuID
									If ($CheckSku -ne $Null)
									{
										Add-Logs -text "LOG: Assigning $BackSKU to User"
										$licenseforuser = $CheckSku
									}
									Else
									{
										Add-Logs -text "WARN: Uknown license, could not assign $BackSKU"
										$ReLic = (((Get-MsolAccountSku).AccountSkuID) | Select-Object -First 1)
										Add-Logs -text "WARN: Assigning $ReLic to user instead"
										$licenseforuser = (((Get-MsolAccountSku).AccountSkuID) | Select-Object -First 1)
									}
									
								}
								Else
								{
									Add-Logs -text "LOG: Found the SKU for the license"
									Foreach ($Item in $Lookup)
									{
										Add-Logs -text "LOG: Checking License $Item"
										$BackSKU = "$LicenseDomain$Item"
										Add-Logs -text "LOG: Looking up $BackSKU in tenant"
										Add-Logs -text "LOG: Verifying $BackSKU in tenant"
										$CheckSku = Get-MSOLAccountSku | Where-Object { $_.AccountSKuID -like "*$BackSKU*" } | Select-Object -ExpandProperty AccountSkuID
										If ($CheckSku -ne $Null)
										{
											Add-Logs -text "LOG: License Found, assigning $CheckSku to user"
											$licenseforuser = $CheckSku
										}
										Else
										{
											Add-Logs -text "WARN: $BackSKU was not found in tenant"
										}
									}
								}
							}
							
							Try
							{
								add-logs -text 'LOG: Creating User'
								$User = New-MsolUser -FirstName $textboxO365FirstName.Text -LastName $textboxO365LastName.Text -DisplayName $textboxO365DisplayName.Text -LicenseAssignment $licenseforuser -Password $textboxo365confirmpassword.text -UserPrincipalName (($textboxO365UPN.Text) + ($comboboxO365Domains.SelectedItem)) -UsageLocation $comboboxO365countrycode.SelectedItem -ForceChangePassword ($checkboxo365usermustchangepassword.Checked) -PasswordNeverExpires ($checkboxPasswordNeverExpires.checked) -BlockCredential $true -StreetAddress $textboxO365street.Text -City $textboxo365city.Text -State $textboxo365state.Text -PostalCode $textboxo365zip.Text
								add-logs -text 'LOG: Done'
							}
							Catch
							{
								add-logs -text "WARN: $_"
								$InfoMessage = $_
								$InfoTitle = "Warning"
								Show-MessageBox_psf
							}
							
							#Find if user should be added to any Security groups
							add-logs -text 'LOG: Getting checked Security groups'
							$groups = $checkedlistboxO365SecurityGroups.CheckedItems
							If ($groups -ne $null)
							{
								add-logs -text 'LOG: Security Groups found'
								$DN = ($User).DisplayName
								foreach ($group in $groups)
								{
									add-logs -text "LOG: Adding $DN to $Group"
									$GroupGuid = ((get-msolgroup | where-object { $_.displayname -eq $Group }).ObjectID).GUID
									$UserGUID = (($User).ObjectID).GUID
									add-logs -text "CMD: Add-MsolGroupMember -Identity $GroupGuid -Members $UserGUID"
									Add-MsolGroupMember -GroupObjectId $GroupGuid -GroupMemberObjectId $UserGUID
								}
							}
							Else
							{
								add-logs -text 'LOG: No Security Groups checked'
							}
							Add-Logs -text 'LOG: Done with Security Groups'
							
							#Check user licenses, if licensed create and wait for mailbox
							Add-Logs -text 'LOG: Checking if license was applied to the user'
							If ($comboboxO365Licenses.SelectedItem -ne $Null)
							{
								Add-Logs -text 'LOG: License is applied to the new user'
								Do
								{
									Add-Logs -text 'LOG: Pausing for 30 seconds for mailbox to be created'
									Start-Sleep -Seconds 10
									Add-Logs -text 'LOG: 20 seconds reamining'
									Start-Sleep -Seconds 10
									Add-Logs -text 'LOG: 10 seconds reamining'
									Start-Sleep -Seconds 10
									Add-Logs -text 'LOG: Done'
									
									Add-Logs -text 'LOG: Checking to see if the mailbox has been created, if mailbox is not present will wait another 30 seconds'
								}
								Until ((Get-Mailbox | Where-Object { $_.DisplayName -eq $textboxO365DisplayName.text }) -ne $null)
								
								add-logs -text 'LOG: Checking E-Mail address field for entered data'
								If ($textboxO365EmailAddress.Text -like "*@*")
								{
									add-logs -text 'LOG: Verifying that E-Mail value is not the same as UPN'
									If ($textboxO365EmailAddress.Text -ne (($textboxO365UPN.Text) + ($comboboxO365Domains.SelectedItem)))
									{
										add-logs -text 'LOG: Email is different from UPN, proceeding.'
										
										Try
										{
											$PrimEmail = $textboxO365EmailAddress.Text
											add-logs -text "LOG: Setting primary E-Mail to $PrimEmail"
											$Mailbox = Get-Mailbox | Where-Object { $_.DisplayName -eq $textboxO365DisplayName.text }
											$DN = $Mailbox.DisplayName
											add-logs -text "CMD: Set-Mailbox -Identity $DN -WindowsEmailAddress $PrimEmail"
											Set-Mailbox -Identity $DN -WindowsEmailAddress $PrimEmail
											add-logs -text "LOG: Done"
										}
										Catch
										{
											add-logs -text "WARN: $_"
											Add-Type -AssemblyName System.Windows.Forms
											[System.Windows.Forms.MessageBox]::Show($_, 'Warning', 'OK', 'Warning')
										}
									}
									Else
									{
										add-logs -text "LOG: E-Mail entered is the same as UPN, skipping."
									}
									
								}
								Else
								{
									add-logs -text "LOG: No E-Mail entered"
								}
								
								#Add any email aliases
								add-logs -text 'LOG: Checking Alias Addresses field for entered data'
								If ($textboxo365proxyaddresses.Text -ne $null)
								{
									add-logs -text 'LOG: Found Alias Addresses to add'
									$Proxys = $textboxo365proxyaddresses.Lines
									$Mailbox = Get-Mailbox | Where-Object { $_.DisplayName -eq $textboxO365DisplayName.text }
									$DN = $Mailbox.DisplayName
									foreach ($Proxy in $Proxys)
									{
										add-logs -text "LOG: Adding $Proxy for $DN"
										Set-Mailbox $Mailbox.DisplayName -EmailAddresses @{ add = "$Proxy" }
										add-logs -text 'LOG: Done'
									}
								}
								Else
								{
									add-logs -text 'LOG: No Alias Addresses found'
								}
								add-logs -text 'LOG: Done with Alias Addresses'
								
								#Find if user should be added to any mail groups
								add-logs -text 'LOG: Getting checked mail groups'
								$groups = $checkedlistboxDISTROo365groups.CheckedItems
								If ($groups -ne $null)
								{
									add-logs -text 'LOG: Mail Groups found'
									$User = Get-MSOLUser | Where-Object { $_.Displayname -eq $textboxO365DisplayName.text }
									$DN = ($User).DisplayName
									foreach ($group in $groups)
									{
										add-logs -text "LOG: Adding $DN to $Group"
										add-logs -text "CMD: Add-DistributionGroupMember -Identity $Group -Member $DN"
										Try
										{
											Add-DistributionGroupMember -Identity "$Group" -Member ($User).DisplayName
										}
										Catch
										{
											add-logs -text "WARN: $_"
											Add-Type -AssemblyName System.Windows.Forms
											[System.Windows.Forms.MessageBox]::Show($_, 'Warning', 'OK', 'Warning')
										}
									}
								}
								Else
								{
									add-logs -text 'LOG: No Mail Groups checked'
								}
								Add-Logs -text 'LOG: Done with Mail Groups'
								
								#Shared Mailboxes
								Add-Logs -text 'LOG: Checking if there are Share Mailboxes checked'
								$SharedMailboxes = $checkedlistboxsharedmailboxes.CheckedItems
								#If there are shared mailboxes to add the user to (full access rights)
								If ($SharedMailboxes -ne $null)
								{
									$User = Get-MSOLUser | Where-Object { $_.Displayname -eq $textboxO365DisplayName.text }
									$DN = ($User).DisplayName
									If ($comboboxsharedmaiboxpermission.SelectedItem -eq "Full Access")
									{
										foreach ($SharedMailbox in $SharedMailboxes)
										{
											$Automap = $comboboxsharedmailboxautomap.Text
											Add-Logs -text "LOG: Adding $DN Full Access to $SharedMailbox with Automapping set to $Automap"
											Add-Logs -text "CMD: Add-MailboxPermission $SharedMailbox -User $DN -AccessRights FullAccess -AutoMapping:$Automap"
											Add-MailboxPermission $SharedMailbox -User ($User).DisplayName -AccessRights FullAccess -AutoMapping:$Automap
										}
									}
									ElseIf ($comboboxsharedmaiboxpermission.SelectedItem -eq "Send As")
									{
										foreach ($SharedMailbox in $SharedMailboxes)
										{
											Add-Logs -text "LOG: Assigning $DN Send-As permission on $SharedMailbox"
											Add-Logs -text 'CMD: Add-RecipientPermission -Identity $SharedMailbox -Trustee ($User).DisplayName -AccessRights SendAs'
											Add-RecipientPermission -Identity $SharedMailbox -Trustee ($User).DisplayName -AccessRights SendAs -Confirm:$False
											Add-Logs -text "LOG: Done"
										}
										
									}
									Else
									{
										foreach ($SharedMailbox in $SharedMailboxes)
										{
											#$Mailbox = Get-Mailbox | Where-Object { $_.DisplayName -eq $textboxO365DisplayName.text }
											Add-Logs -text "LOG: Granting $DN to Send on Behalf of $SharedMailbox"
											Add-Logs -text "CMD: Set-Mailbox $SharedMailbox -GrantSendOnBehalfTo $DN"
											Set-Mailbox $SharedMailbox -GrantSendOnBehalfTo ($User).DisplayName
											Add-Logs -text 'LOG: Done'
										}
									}
								}
								Else
								{
									Add-Logs -text 'LOG: No Shared Mailboxes selected'
								}
								Add-Logs -text 'LOG: Done with Shared Mailboxes'
								
								Add-Logs -text 'LOG: Checking if Hide from global address list is set to True'
								#Hide from GAL
								If ($comboboxO365HidefromGAL.SelectedItem -eq $True)
								{
									Add-Logs -text 'LOG: Hide from global address list is set to True'
									Add-Logs -text 'LOG: Hiding mailbox from global address list'
									$Mailbox = Get-Mailbox | Where-Object { $_.DisplayName -eq $textboxO365DisplayName.text }
									If ($null -ne $mailbox)
									{
										Set-Mailbox -Identity ($Mailbox).DisplayName -HiddenFromAddressListsEnabled $true
									}
									Else
									{
										Add-Logs -text 'WARN: User does not have a mailbox and cannot be hidden from GAL. Please verify the user has a valid license with a mailbox'
										$InfoMessage = "User does not have a mailbox and cannot be hidden from GAL. Please verify the user has a valid license with a mailbox"
										$InfoTitle = "Warning"
										Show-MessageBox_psf
									}
								}
								Else
								{
									Add-Logs -text 'LOG: Hide from global address list is set to False'
								}
							}
							Else
							{
								Add-Logs -text 'LOG: No license is being added for the new user'
								Add-Logs -text 'LOG: Skipping Mail Groups as user is not licensed'
								Add-Logs -text 'LOG: Skipping Shared Mailboxes as user is not licensed'
								Add-Logs -text 'LOG: Skipping Hide from Global Address List as user is not licensed'
							}
							
							#If MFA is set to TRUE then enable MFA for the user
							Add-Logs -text 'LOG: Checking MFA status for the user'
							If ($comboboxMFA.Selecteditem -eq "True")
							{
								$UserMFA = ($User).UserPrincipalName
								Add-Logs -text 'LOG: MFA for the user set to TRUE, enabling MFA'
								Add-Logs -text "CMD: `$Auth = New-Object -TypeName Microsoft.Online.Administration.StrongAuthenticationRequirement"
								$Auth = New-Object -TypeName Microsoft.Online.Administration.StrongAuthenticationRequirement
								Add-Logs -text 'CMD: $Auth.RelyingParty = "*"'
								$Auth.RelyingParty = "*"
								Add-Logs -text 'CMD: $MFA = @($Auth)'
								$MFA = @($Auth)
								Add-Logs -text "CMD: Set-MsolUser -UserPrincipalName $UserMFA -StrongAuthenticationRequirements $MFA"
								Set-MsolUser -UserPrincipalName $UserMFA -StrongAuthenticationRequirements $MFA
								Add-Logs -text 'LOG: Done'
							}
							Else
							{
								Add-Logs -text 'LOG: MFA is set to False'
							}
							Add-Logs -text 'LOG: Done'
						}
					}
					Else
					{
						#User is going to be enabled upon creation
						add-logs -text 'LOG: User is Enabled'
						add-logs -text 'LOG: Creating user'
						If (($comboboxO365Licenses.SelectedItem -ne $null) -and ($comboboxO365countrycode.SelectedItem -eq $null))
						{
							add-logs -text 'WARN: You must assign a country code to your user if you are assigning a license'
							$InfoMessage = 'You must assign a country code to your user if you are assigning a license'
							$InfoTitle = "Warning"
							Show-MessageBox_psf
						}
						Else
						{
							If ($comboboxO365Licenses.SelectedItem -ne $null)
							{
								$Lookup = @()
								Add-Logs -text "LOG: Getting License selected for user"
								$License = $comboboxO365Licenses.SelectedItem
								Add-Logs -text "LOG: Getting AccountSKU Domain"
								$LicenseDomain = ((((Get-MsolAccountSku).AccountSkuID) -split ":" | Select-Object -First 1) + ":").Trim()
								Add-Logs -text "LOG: Looking up SKU for license"
								$Lookup += $Sku.Keys | Where-Object { $Sku["$_"] -eq "$license" }
								If ((($Lookup | Measure-Object -Character).Characters) -lt 1)
								{
									Add-Logs -text "LOG: No SKU found during lookup"
									$BackSKU = "$LicenseDomain$License"
									Add-Logs -text "LOG: Checking if $BackSKU is already SKU"
									$CheckSku = Get-MSOLAccountSku | Where-Object { $_.AccountSKuID -like "*$BackSKU*" } | Select-Object -ExpandProperty AccountSkuID
									If ($CheckSku -ne $Null)
									{
										Add-Logs -text "LOG: Assigning $BackSKU to User"
										$licenseforuser = $CheckSku
									}
									Else
									{
										Add-Logs -text "WARN: Uknown license, could not assign $BackSKU"
										$ReLic = (((Get-MsolAccountSku).AccountSkuID) | Select-Object -First 1)
										Add-Logs -text "WARN: Assigning $ReLic to user instead"
										$licenseforuser = (((Get-MsolAccountSku).AccountSkuID) | Select-Object -First 1)
									}
									
								}
								Else
								{
									Add-Logs -text "LOG: Found the SKU for the license"
									Foreach ($Item in $Lookup)
									{
										Add-Logs -text "LOG: Checking License $Item"
										$BackSKU = "$LicenseDomain$Item"
										Add-Logs -text "LOG: Looking up $BackSKU in tenant"
										Add-Logs -text "LOG: Verifying $BackSKU in tenant"
										$CheckSku = Get-MSOLAccountSku | Where-Object { $_.AccountSKuID -like "*$BackSKU*" } | Select-Object -ExpandProperty AccountSkuID
										If ($CheckSku -ne $Null)
										{
											Add-Logs -text "LOG: License Found, assigning $CheckSku to user"
											$licenseforuser = $CheckSku
										}
										Else
										{
											Add-Logs -text "WARN: $BackSKU was not found in tenant"
										}
									}
								}
							}
							Try
							{
								add-logs -text 'LOG: Creating User'
								$User = New-MsolUser -FirstName $textboxO365FirstName.Text -LastName $textboxO365LastName.Text -DisplayName $textboxO365DisplayName.Text -LicenseAssignment $licenseforuser -Password $textboxo365confirmpassword.text -UserPrincipalName (($textboxO365UPN.Text) + ($comboboxO365Domains.SelectedItem)) -UsageLocation $comboboxO365countrycode.SelectedItem -ForceChangePassword ($checkboxo365usermustchangepassword.Checked) -PasswordNeverExpires ($checkboxPasswordNeverExpires.checked) -BlockCredential $false -StreetAddress $textboxO365street.text -City $textboxo365city.Text -State $textboxo365state.Text -PostalCode $textboxo365zip.Text
								add-logs -text 'LOG: Done'
							}
							Catch
							{
								add-logs -text "WARN: $_"
								$InfoMessage = $_
								$InfoTitle = "Warning"
								Show-MessageBox_psf
							}
							#Find if user should be added to any Security groups
							add-logs -text 'LOG: Getting checked Security groups'
							$groups = $checkedlistboxO365SecurityGroups.CheckedItems
							If ($groups -ne $null)
							{
								add-logs -text 'LOG: Security Groups found'
								$DN = ($User).DisplayName
								foreach ($group in $groups)
								{
									add-logs -text "LOG: Adding $DN to $Group"
									$GroupGuid = ((get-msolgroup | where-object { $_.displayname -eq $Group }).ObjectID).GUID
									$UserGUID = (($User).ObjectID).GUID
									add-logs -text "CMD: Add-MsolGroupMember -Identity $GroupGuid -Members $UserGUID"
									Add-MsolGroupMember -GroupObjectId $GroupGuid -GroupMemberObjectId $UserGUID
								}
							}
							Else
							{
								add-logs -text 'LOG: No Security Groups checked'
							}
							Add-Logs -text 'LOG: Done with Security Groups'
							
							#Check user licenses, if licensed create and wait for mailbox
							Add-Logs -text 'LOG: Checking if license was applied to the user'
							If ($comboboxO365Licenses.SelectedItem -ne $Null)
							{
								Add-Logs -text 'LOG: License is applied to the new user'
								Do
								{
									Add-Logs -text 'LOG: Pausing for 30 seconds for mailbox to be created'
									Start-Sleep -Seconds 10
									Add-Logs -text 'LOG: 20 seconds reamining'
									Start-Sleep -Seconds 10
									Add-Logs -text 'LOG: 10 seconds reamining'
									Start-Sleep -Seconds 10
									Add-Logs -text 'LOG: Done'
									
									Add-Logs -text 'LOG: Checking to see if the mailbox has been created, if mailbox is not present will wait another 30 seconds'
								}
								Until ((Get-Mailbox | Where-Object { $_.DisplayName -eq $textboxO365DisplayName.text }) -ne $null)
								
								add-logs -text 'LOG: Checking E-Mail address field for entered data'
								If ($textboxO365EmailAddress.Text -like "*@*")
								{
									add-logs -text 'LOG: Verifying that E-Mail value is not the same as UPN'
									If ($textboxO365EmailAddress.Text -ne (($textboxO365UPN.Text) + ($comboboxO365Domains.SelectedItem)))
									{
										add-logs -text 'LOG: Email is different from UPN, proceeding.'
										
										Try
										{
											$PrimEmail = $textboxO365EmailAddress.Text
											add-logs -text "LOG: Setting primary E-Mail to $PrimEmail"
											$Mailbox = Get-Mailbox | Where-Object { $_.DisplayName -eq $textboxO365DisplayName.text }
											$DN = $Mailbox.DisplayName
											add-logs -text "CMD: Set-Mailbox -Identity $DN -WindowsEmailAddress $PrimEmail"
											Set-Mailbox -Identity $DN -WindowsEmailAddress $PrimEmail
											add-logs -text "LOG: Done"
										}
										Catch
										{
											add-logs -text "WARN: $_"
											Add-Type -AssemblyName System.Windows.Forms
											[System.Windows.Forms.MessageBox]::Show($_, 'Warning', 'OK', 'Warning')
										}
									}
									Else
									{
										add-logs -text "LOG: E-Mail entered is the same as UPN, skipping."
									}
									
								}
								Else
								{
									add-logs -text "LOG: No E-Mail entered"
								}
								
								#Add any email aliases
								add-logs -text 'LOG: Checking Alias Addresses field for entered data'
								If ($textboxo365proxyaddresses.Text -ne $null)
								{
									add-logs -text 'LOG: Found Alias Addresses to add'
									$Proxys = $textboxo365proxyaddresses.Lines
									$Mailbox = Get-Mailbox | Where-Object { $_.DisplayName -eq $textboxO365DisplayName.text }
									$DN = $Mailbox.DisplayName
									foreach ($Proxy in $Proxys)
									{
										add-logs -text "LOG: Adding $Proxy for $DN"
										Set-Mailbox $Mailbox.DisplayName -EmailAddresses @{ add = "$Proxy" }
										add-logs -text 'LOG: Done'
									}
								}
								Else
								{
									add-logs -text 'LOG: No Alias Addresses found'
								}
								add-logs -text 'LOG: Done with Alias Addresses'
								
								#Find if user should be added to any mail groups
								add-logs -text 'LOG: Getting checked mail groups'
								$groups = $checkedlistboxDISTROo365groups.CheckedItems
								If ($groups -ne $null)
								{
									add-logs -text 'LOG: Mail Groups found'
									$User = Get-MSOLUser | Where-Object { $_.Displayname -eq $textboxO365DisplayName.text }
									$DN = ($User).DisplayName
									foreach ($group in $groups)
									{
										add-logs -text "LOG: Adding $DN to $Group"
										add-logs -text "CMD: Add-DistributionGroupMember -Identity $Group -Member $DN"
										Try
										{
											Add-DistributionGroupMember -Identity "$Group" -Member ($User).DisplayName
										}
										Catch
										{
											add-logs -text "WARN: $_"
											Add-Type -AssemblyName System.Windows.Forms
											[System.Windows.Forms.MessageBox]::Show($_, 'Warning', 'OK', 'Warning')
										}
									}
								}
								Else
								{
									add-logs -text 'LOG: No Mail Groups checked'
								}
								Add-Logs -text 'LOG: Done with Mail Groups'
								
								#Shared Mailboxes
								Add-Logs -text 'LOG: Checking if there are Share Mailboxes checked'
								$SharedMailboxes = $checkedlistboxsharedmailboxes.CheckedItems
								#If there are shared mailboxes to add the user to (full access rights)
								If ($SharedMailboxes -ne $null)
								{
									$User = Get-MSOLUser | Where-Object { $_.Displayname -eq $textboxO365DisplayName.text }
									$DN = ($User).DisplayName
									If ($comboboxsharedmaiboxpermission.SelectedItem -eq "Full Access")
									{
										foreach ($SharedMailbox in $SharedMailboxes)
										{
											$Automap = $comboboxsharedmailboxautomap.Text
											Add-Logs -text "LOG: Adding $DN Full Access to $SharedMailbox with Automapping set to $Automap"
											Add-Logs -text "CMD: Add-MailboxPermission $SharedMailbox -User $DN -AccessRights FullAccess -AutoMapping:$Automap"
											Add-MailboxPermission $SharedMailbox -User ($User).DisplayName -AccessRights FullAccess -AutoMapping:$Automap
										}
									}
									ElseIf ($comboboxsharedmaiboxpermission.SelectedItem -eq "Send As")
									{
										foreach ($SharedMailbox in $SharedMailboxes)
										{
											Add-Logs -text "LOG: Assigning $DN Send-As permission on $SharedMailbox"
											Add-Logs -text 'CMD: Add-RecipientPermission -Identity $SharedMailbox -Trustee ($User).DisplayName -AccessRights SendAs'
											Add-RecipientPermission -Identity $SharedMailbox -Trustee ($User).DisplayName -AccessRights SendAs -Confirm:$False
											Add-Logs -text "LOG: Done"
										}
										
									}
									Else
									{
										foreach ($SharedMailbox in $SharedMailboxes)
										{
											#$Mailbox = Get-Mailbox | Where-Object { $_.DisplayName -eq $textboxO365DisplayName.text }
											Add-Logs -text "LOG: Granting $DN to Send on Behalf of $SharedMailbox"
											Add-Logs -text "CMD: Set-Mailbox $SharedMailbox -GrantSendOnBehalfTo $DN"
											Set-Mailbox $SharedMailbox -GrantSendOnBehalfTo ($User).DisplayName
											Add-Logs -text 'LOG: Done'
										}
									}
								}
								Else
								{
									Add-Logs -text 'LOG: No Shared Mailboxes selected'
								}
								Add-Logs -text 'LOG: Done with Shared Mailboxes'
								
								Add-Logs -text 'LOG: Checking if Hide from global address list is set to True'
								#Hide from GAL
								If ($comboboxO365HidefromGAL.SelectedItem -eq $True)
								{
									Add-Logs -text 'LOG: Hide from global address list is set to True'
									Add-Logs -text 'LOG: Hiding mailbox from global address list'
									$Mailbox = Get-Mailbox | Where-Object { $_.DisplayName -eq $textboxO365DisplayName.text }
									If ($null -ne $mailbox)
									{
										Set-Mailbox -Identity ($Mailbox).DisplayName -HiddenFromAddressListsEnabled $true
									}
									Else
									{
										Add-Logs -text 'WARN: User does not have a mailbox and cannot be hidden from GAL. Please verify the user has a valid license with a mailbox'
										$InfoMessage = "User does not have a mailbox and cannot be hidden from GAL. Please verify the user has a valid license with a mailbox"
										$InfoTitle = "Warning"
										Show-MessageBox_psf
									}
								}
								Else
								{
									Add-Logs -text 'LOG: Hide from global address list is set to False'
								}
							}
							Else
							{
								Add-Logs -text 'LOG: No license is being added for the new user'
								Add-Logs -text 'LOG: Skipping Mail Groups as user is not licensed'
								Add-Logs -text 'LOG: Skipping Shared Mailboxes as user is not licensed'
								Add-Logs -text 'LOG: Skipping Hide from Global Address List as user is not licensed'
							}
							
							#If MFA is set to TRUE then enable MFA for the user
							Add-Logs -text 'LOG: Checking MFA status for the user'
							If ($comboboxMFA.Selecteditem -eq "True")
							{
								$UserMFA = ($User).UserPrincipalName
								Add-Logs -text 'LOG: MFA for the user set to TRUE, enabling MFA'
								Add-Logs -text "CMD: `$Auth = New-Object -TypeName Microsoft.Online.Administration.StrongAuthenticationRequirement"
								$Auth = New-Object -TypeName Microsoft.Online.Administration.StrongAuthenticationRequirement
								Add-Logs -text 'CMD: $Auth.RelyingParty = "*"'
								$Auth.RelyingParty = "*"
								Add-Logs -text 'CMD: $MFA = @($Auth)'
								$MFA = @($Auth)
								Add-Logs -text "CMD: Set-MsolUser -UserPrincipalName $UserMFA -StrongAuthenticationRequirements $MFA"
								Set-MsolUser -UserPrincipalName $UserMFA -StrongAuthenticationRequirements $MFA
								Add-Logs -text 'LOG: Done'
							}
							Else
							{
								Add-Logs -text 'LOG: MFA is set to False'
							}
							Add-Logs -text 'LOG: Done'
						}
					}
				}
			}
		}
		ElseIf (($checkboxCreateAnActiveDirect.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $true))
		{
			add-logs -text 'LOG: Both an Office 365 User and Active Director User is being created'
		}
		Else
		{
			add-logs -text 'WARN: Nothing is being created!'
		}
	}
	
	
	$textboxDisplayName_TextChanged = {
		If ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0)
		{
			$labelDisplayName.Text = "Display Name:"
			$labelDisplayName.ForeColor = 'Black'
		}
		ElseIf ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -lt 1)
		{
			$labelDisplayName.Text = "*Display Name:"
			$labelDisplayName.ForeColor = 'Firebrick'
		}
		
		If (($checkboxCreateAnActiveDirect.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $false) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		ElseIf (($checkboxCreateAnActiveDirect.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		ElseIf (($checkboxCreateAnActiveDirect.Checked -eq $false) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		Else
		{
			$buttonCreateUser.Enabled = $False
		}
	}
	
	$textboxLastName_TextChanged = {
		If ((($textboxInitials.text | Measure-Object -Character).Characters) -lt 1)
		{
			$textboxDisplayName.Text = $textboxFirstName.Text + " " + $textboxLastName.Text
		}
		Else
		{
			$textboxDisplayName.Text = $textboxFirstName.Text + " " + $textboxInitials.Text + "." + " " + $textboxLastName.Text
		}
	}
	
	$textboxFirstName_TextChanged = {
		If ((($textboxInitials.text | Measure-Object -Character).Characters) -lt 1)
		{
			$textboxDisplayName.Text = $textboxFirstName.text + " " + $textboxLastName.Text
		}
		Else
		{
			$textboxDisplayName.Text = $textboxFirstName.text + " " + $textboxInitials.Text + "." + " " + $textboxLastName.Text
		}
		
	}
	
	$textboxInitials_TextChanged = {
		If ((($textboxInitials.text | Measure-Object -Character).Characters) -lt 1)
		{
			$textboxDisplayName.Text = $textboxFirstName.text + " " + $textboxLastName.Text
		}
		Else
		{
			$textboxDisplayName.Text = $textboxFirstName.text + " " + $textboxInitials.text + "." + $textboxLastName.Text
		}
		
	}
	
	
	$buttonGeneratePassword_Click = {
		add-logs -text 'LOG: Generating random password'
		add-logs -text 'CMD: $textboxPasswordGen.Text = ([char[]]([char]33 .. [char]95) + ([char[]]([char]97 .. [char]126)) + 0 .. 9 | Sort-Object { Get-Random })[0 .. 10] -join '''
		$textboxPasswordGen.Text = ([char[]]([char]33 .. [char]95) + ([char[]]([char]97 .. [char]126)) + 0 .. 9 | Sort-Object { Get-Random })[0 .. 10] -join ''
		$maskedtextboxpassword.Text = $textboxPasswordGen.Text
		$textboxConfirmPassword.text = $textboxPasswordGen.Text
		
	}
	
	$textboxConfirmPassword_TextChanged = {
		If ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0)
		{
			$labelConfirmPassword.Text = "Confirm Password:"
			$labelConfirmPassword.ForeColor = 'Black'
		}
		ElseIf ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -lt 1)
		{
			$labelConfirmPassword.Text = "*Confirm Password:"
			$labelConfirmPassword.ForeColor = 'Firebrick'
		}
		
		If (((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -lt 1) -and ((($maskedtextboxpassword.Text | Measure-Object -Character).Characters) -lt 1))
		{
			$labelpasswordconfirmmessage.Text = ""
		}
		Else
		{
			If (($textboxConfirmPassword.Text) -ne ($maskedtextboxpassword.Text))
			{
				$labelpasswordconfirmmessage.ForeColor = 'Red'
				$labelpasswordconfirmmessage.Text = "Passwords do not match!"
				$buttonCreateUser.Enabled = $false
			}
			ElseIf (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text))
			{
				$labelpasswordconfirmmessage.ForeColor = 'Green'
				$labelpasswordconfirmmessage.Text = "Passwords match!"
				If (($checkboxCreateAnActiveDirect.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $false) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
				{
					$buttonCreateUser.Enabled = $true
				}
				ElseIf (($checkboxCreateAnActiveDirect.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
				{
					$buttonCreateUser.Enabled = $true
				}
				ElseIf (($checkboxCreateAnActiveDirect.Checked -eq $false) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0))
				{
					$buttonCreateUser.Enabled = $true
				}
				Else
				{
					$buttonCreateUser.Enabled = $False
				}
			}
			Else
			{
				$labelpasswordconfirmmessage.Text = ""
			}
		}
		
		
	}
	
	$buttonCopyOnPremUser_Click = {
		If ($checkboxCreateAnActiveDirect.Checked -eq $true)
		{
			add-logs -text "LOG: Copying AD User attributes to Office 365 user"
			$textboxO365DisplayName.Text = $textboxDisplayName.Text
			$textboxO365LastName.Text = $textboxLastName.Text
			$textboxO365FirstName.Text = $textboxFirstName.text
			$maskedtextboxo365password.Text = $maskedtextboxpassword.Text
			$textboxo365confirmpassword.Text = $textboxConfirmPassword.text
			$textboxo365passwordgen.Text = $textboxPasswordGen.text
			$textboxO365EmailAddress.Text = $textboxEmail.text
			$textboxO365UPN.Text = ($textboxUserLogonName.text) + ($comboboxDomains.Text)
			
			#Address PAge
			$textboxo365city.Text = $textboxcity.Text
			$textboxO365street.Text = $textboxStreet.Text
			$textboxo365zip.Text = $textboxzipcode.Text
			$textboxo365state.Text = $textboxstate.text
			
			$textboxo365proxyaddresses.Text = $textboxproxyaddress.Text
			$comboboxO365HidefromGAL.SelectedItem = $comboboxhidefromGAL.SelectedItem
			
			$checkboxo365usermustchangepassword.Checked = $checkboxUserMustChangePasswo.Checked
			add-logs -text "LOG: Copy Finished!"
		}
		Else
		{
			add-logs -text "WARN: No Active Directory User is being created"
			$InfoMessage = "No Active Directory user is being created, there is nothing to copy"
			$InfoTitle = "Warning"
			Show-MessageBox_psf
		}
		
	}
	
	$textboxo365confirmpassword_TextChanged={
		If ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0)
		{
			$labelO365userconfirmpassword.Text = "Confirm Password:"
			$labelO365userconfirmpassword.ForeColor = 'Black'
			If (((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0) -and ((($maskedtextboxo365password.Text | Measure-Object -Character).Characters) -gt 0) -and ($buttonConnectToOffice365.Enabled -eq $false))
			{
				$buttonCreateUser.Enabled = $true
			}
			Else
			{
				$buttonCreateUser.Enabled = $false
			}
		}
		ElseIf ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -lt 1)
		{
			$labelO365userconfirmpassword.Text = "*Confirm Password:"
			$labelO365userconfirmpassword.ForeColor = 'Firebrick'
		}
		
		If (((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -lt 1) -and ((($maskedtextboxo365password.Text | Measure-Object -Character).Characters) -lt 1))
		{
			$labelo365password.Text = ""
		}
		Else
		{
			If (($textboxo365confirmpassword.Text) -ne ($maskedtextboxo365password.Text))
			{
				$labelo365password.ForeColor = 'Red'
				$labelo365password.Text = "Passwords do not match!"
				$buttonCreateUser.Enabled = $false
			}
			Else
			{
				$labelo365password.ForeColor = 'Green'
				$labelo365password.Text = "Passwords match!"
				If (($checkboxCreateAnActiveDirect.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $false) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
				{
					$buttonCreateUser.Enabled = $true
				}
				ElseIf (($checkboxCreateAnActiveDirect.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
				{
					$buttonCreateUser.Enabled = $true
				}
				ElseIf (($checkboxCreateAnActiveDirect.Checked -eq $false) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0))
				{
					$buttonCreateUser.Enabled = $true
				}
				Else
				{
					$buttonCreateUser.Enabled = $False
				}
			}
		}
		
	}
	
	$buttonConnectToOffice365_Click = {
		add-logs -text 'LOG: Checking MFA Status'
		If ($radiobuttonDisableMFA.Checked -eq $True)
		{
			add-logs -text 'LOG: Gathering credentials to connect to Office 365'
			add-logs -text 'CMD: Get-Credential -Message "Please enter your Office 365 credentials to connect to Exchange Online and MSOnline"'
			$credential = Get-Credential -Message "Please enter your Office 365 credentials to connect to Exchange Online and MSOnline"
			add-logs -text 'LOG: Done'
			If ($credential -eq $Null)
			{
				add-logs -text 'WARN: Credential object empty'
				$InfoMessage = "No credentials were entered. Please enter valid Office 365 credentials"
				$InfoTitle = "Warning"
				Show-MessageBox_psf
			}
			Else
			{
				add-logs -text 'LOG: Connecting to Office 365'
				add-logs -text 'CMD: Connect-MsolService -Credential $credential'
				Import-Module MSOnline
				Connect-MsolService -Credential $credential
				$exchangeSession = New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri "https://outlook.office365.com/powershell-liveid/" -Authentication "Basic" -AllowRedirection -Credential $credential
				add-logs -text 'LOG: Done'
				add-logs -text 'LOG: Connecting to Exchange Online'
				add-logs -text 'CMD: Import-PSSession $exchangeSession -AllowClobber'
				Import-PSSession $exchangeSession -AllowClobber
				add-logs -text 'LOG: Done'
			}
		}
		Else
		{
			add-logs -text 'LOG: Finding MFA Exchange Online Module'
			add-logs -text 'CMD: Get-ChildItem $Env:LOCALAPPDATA\Apps\2.0\*\CreateExoPSSession.ps1 -Recurse | Select-Object -ExpandProperty Target -First 1'
			$Modules = Get-ChildItem $Env:LOCALAPPDATA\Apps\2.0\*\CreateExoPSSession.ps1 -Recurse | Select-Object -ExpandProperty Target -First 1
			foreach ($Module in $Modules)
			{
				Import-Module "$Module"
			}
			add-logs -text 'LOG: Done'
			add-logs -text 'LOG: Connecting to MSOnline'
			#Connect to MSOnline w/2FA
			Connect-MsolService
			add-logs -text 'LOG: Done'
			#Connect to Exchange Online w/ 2FA
			add-logs -text 'LOG: Connecting to Exchange Online'
			Connect-EXOPSSession
			add-logs -text 'LOG: Done'
		}
		add-logs -text 'LOG: Checking to see if we are connected to Office 365'
		add-logs -text 'CMD: (Get-MsolDomain -ErrorAction SilentlyContinue) -ne $null'
		if ((Get-MsolDomain -ErrorAction SilentlyContinue) -ne $null)
		{
			
			
			
			add-logs -text 'LOG: Connected to Office 365!'
			
			$Global:O365_Pre_Req++
			If (($checkboxCreateAnActiveDirect.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $false) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
			{
				$buttonCreateUser.Enabled = $true
			}
			ElseIf (($checkboxCreateAnActiveDirect.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
			{
				$buttonCreateUser.Enabled = $true
			}
			ElseIf (($checkboxCreateAnActiveDirect.Checked -eq $false) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0))
			{
				$buttonCreateUser.Enabled = $true
			}
			Else
			{
				$buttonCreateUser.Enabled = $False
			}
			
			$labelO365Groups.Text = "To add your user to a Mail Enabled Group, please select a valid license so the user has a mailbox"
			$labelsharedmailboxes.text = "To grant your user permissions on a Shared Mailbox, please select a valid license so the user has a mailbox"
			$labelSecurityGroups.Text = "Please select any Security Groups you want to add your new user to"
		
			add-logs -text 'LOG: Enabling Disconnect from Office 365 menu item'
			add-logs -text 'CMD: $disconnectFromOffice365ToolStripMenuItem.Enabled = $true'
			$disconnectFromOffice365ToolStripMenuItem.Enabled = $true
			add-logs -text 'LOG: Done'
			
			add-logs -text 'LOG: Disabling connect to Office 365 button!'
			add-logs -text 'CMD: $buttonConnectToOffice365.Enabled = $False'
			$buttonConnectToOffice365.Enabled = $False
			$buttonConnectToOffice365.Text = "Connected to Office 365"
			$buttonConnectToOffice365.ForeColor = 'Black'
			add-logs -text 'LOG: Done'
			
			If (((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0) -and ((($maskedtextboxo365password.Text | Measure-Object -Character).Characters) -gt 0) -and ($buttonConnectToOffice365.Enabled -eq $false))
			{
				$buttonCreateUser.Enabled = $true
			}
			Else
			{
				$buttonCreateUser.Enabled = $false
			}
			
			add-logs -text 'LOG: Getting all verified domains for UPN list'
			add-logs -text 'CMD: Update-ComboBox -ComboBox $comboboxO365Domains -Items (Get-MsolDomain | Where-Object {$_.Status -eq "Verified"} | Select-Object -ExpandProperty Name)'
			$DomainsArray = @()
			$Domains = (Get-MsolDomain | Where-Object { $_.Status -eq 'Verified' } | Select-Object -ExpandProperty Name)
			If ($Domains -ne $Null)
			{
				foreach ($Domain in $Domains)
				{
					$DomainsArray += "@" + $Domain
				}
			}
			Else
			{
				add-logs -text 'WARN: No verified domains'
				$DomainsArray = "No verified Domains were found"
			}
			Update-ComboBox -ComboBox $comboboxO365Domains -Items $DomainsArray
			add-logs -text 'LOG: Done'
			
			
			#We only want licenses that have at least one to assign to a user
			$LicenseArray = @()
			
			
			add-logs -text 'LOG: Getting available licenses'
			add-logs -text 'CMD: Get-MsolAccountSku | Where-Object { $_.ActiveUnits -ne $_.ConsumedUnits }'
			$Avaialble = Get-MsolAccountSku | Where-Object { $_.ActiveUnits -ne $_.ConsumedUnits }
			add-logs -text 'LOG: Done'
			
			foreach ($item in $Avaialble)
			{
				add-logs -text 'LOG: Getting Account SKU for license'
				$RemoveDomain = ($item).AccountSkuId
				add-logs -text 'LOG: Removing domain portion of license'
				$LicenseItem = $RemoveDomain -split ":" | Select-Object -Last 1
				add-logs -text 'LOG: Converting SKU to friendly name'
				$TextLic = $Sku.Item("$LicenseItem")
				If (!($TextLic))
				{
					$LicenseArray += $LicenseItem
				}
				Else
				{
					$LicenseArray += $TextLic
				}
				add-logs -text 'LOG: Done'
			}
			
			add-logs -text 'LOG: Enabling Licenses combobox'
			add-logs -text 'CMD: $comboboxO365Licenses.Enabled = $True'
			$comboboxO365Licenses.Enabled = $True
			add-logs -text 'LOG: Done'
			
			
			add-logs -text 'LOG: Loading license combobox with available licenses'
			add-logs -text 'CMD: Update-ComboBox -ComboBox $comboboxO365Licenses ($Avaialble).AccountSkuId'
			Update-ComboBox -ComboBox $comboboxO365Licenses $LicenseArray
			add-logs -text 'LOG: Done'
			
			
			add-logs -text 'LOG: Loading Office 365 Mail Groups ListBox'
			add-logs -text 'CMD: Update-ListBox -ListBox $checkedlistboxDISTROo365groups -Items (Get-MsolGroup | Where-Object {($_.GroupType -eq "DistributionList") -or ($_.GroupType -eq "MailEnabledSecurity") }| Select-Object -ExpandProperty DisplayName | Sort-Object)'
			Update-ListBox -ListBox $checkedlistboxDISTROo365groups -Items (Get-MsolGroup | Where-Object {($_.GroupType -eq "DistributionList") -or ($_.GroupType -eq "MailEnabledSecurity") }| Select-Object -ExpandProperty DisplayName | Sort-Object)
			$comboboxO365Domains.SelectedIndex = 0
			add-logs -text 'LOG: Done'
			
			add-logs -text 'LOG: Loading Office 365 Security Groups ListBox'
			add-logs -text 'CMD: Update-ListBox -ListBox $checkedlistboxO365SecurityGroups -Items (Get-MsolGroup | Where-Object { $_.GroupType -like "*Security*" } | Select-Object -ExpandProperty DisplayName | Sort-Object)'
			Update-ListBox -ListBox $checkedlistboxO365SecurityGroups -Items (Get-MsolGroup | Where-Object { $_.GroupType -eq "Security" } | Select-Object -ExpandProperty DisplayName | Sort-Object)
			$comboboxO365Domains.SelectedIndex = 0
			$labelSecurityGroups.Text = "Please select any Security Groups you want to add your new user to"
			
			add-logs -text 'LOG: Done'
			
			
			$labelO365Groups.Text = "To add your user to a Mail Enabled Group, please select a valid license so the user has a mailbox"
			
			$labelsharedmailboxes.text = "To grant your user permissions on a Shared Mailbox, please select a valid license so the user has a mailbox"
			
			add-logs -text 'LOG: Getting all Shared Mailboxes'
			$Shared = Get-Mailbox | Where-Object { $_.RecipientTypeDetails -eq "SharedMailbox" } | Select-Object -ExpandProperty DisplayName | Sort-Object
			Update-ListBox -ListBox $checkedlistboxsharedmailboxes -Items $Shared
			add-logs -text 'LOG: Done'
			
		}
		Else
		{
			add-logs -text 'WARN: Not connected to Office 365!'
		}
		
		
		
	}
	
	
	
	$buttonO365Genpassword_Click = {
		add-logs -text 'LOG: Generating random password'
		add-logs -text 'LOG: ([char[]]([char]33 .. [char]95) + ([char[]]([char]97 .. [char]126)) + 0 .. 9 | Sort-Object { Get-Random })[0 .. 10] -join '''
		$textboxo365passwordgen.Text = ([char[]]([char]33 .. [char]95) + ([char[]]([char]97 .. [char]126)) + 0 .. 9 | Sort-Object { Get-Random })[0 .. 10] -join ''
		$maskedtextboxo365password.Text = $textboxo365passwordgen.Text
		$textboxo365confirmpassword.Text = $textboxo365passwordgen.Text
		add-logs -text 'LOG: Done'
	
		
	}
	
	
	$checkboxRunDirSyncAfterUserC_CheckedChanged={
		If ($checkboxRunDirSyncAfterUserC.Checked -eq $True)
		{
			$textboxO365FirstName.Enabled = $false
			$textboxO365DisplayName.Enabled = $false
			$textboxO365Initials.Enabled = $false
			$textboxO365LastName.Enabled = $false
			$buttonCopyOnPremUser.Enabled = $false
			$buttonO365Genpassword.Enabled = $false
			$textboxConfirmPassword.Enabled = $false
			$maskedtextboxo365password.Enabled = $false
			$textboxO365UPN.Enabled = $false
			$textboxo365state.Enabled = $false
			$textboxo365city.Enabled = $false
			$textboxo365zip.Enabled = $false
			$textboxo365pobox.Enabled = $false
			
			$labelO365Groups.Text = "This feature is not available for AD-Synced enviornments."
		}
		elseif ($checkboxRunDirSyncAfterUserC.Checked -eq $false)
		{
			$textboxO365FirstName.Enabled = $true
			$textboxO365DisplayName.Enabled = $true
			$textboxO365Initials.Enabled = $true
			$textboxO365LastName.Enabled = $true
			$buttonCopyOnPremUser.Enabled = $true
			$buttonO365Genpassword.Enabled = $true
			$textboxConfirmPassword.Enabled = $true
			$maskedtextboxo365password.Enabled = $true
			$textboxO365UPN.Enabled = $true
			$textboxo365state.Enabled = $true
			$textboxo365city.Enabled = $true
			$textboxo365zip.Enabled = $true
			$textboxo365pobox.Enabled = $true
			
			$labelO365Groups.Text = "Please check all groups you want your user to be a member of."
		}
	}
	
	$buttonExit_Click={
		Get-PSSession | Remove-PSSession
		$MainForm.close()
	}
	
	$textboxO365LastName_TextChanged={
		If ((($textboxO365Initials.text | Measure-Object -Character).Characters) -lt 1)
		{
			$textboxO365DisplayName.Text = $textboxO365FirstName.Text + " " + $textboxO365LastName.Text
		}
		Else
		{
			$textboxO365DisplayName.Text = $textboxO365FirstName.Text + " " + $textboxO365Initials.Text + "." + " " + $textboxO365LastName.Text
			
		}
	}
	
	$textboxO365FirstName_TextChanged={
		If ((($textboxO365Initials.text | Measure-Object -Character).Characters) -lt 1)
		{
			$textboxO365DisplayName.Text = $textboxO365FirstName.text + " " + $textboxO365LastName.Text
		}
		Else
		{
			$textboxO365DisplayName.Text = $textboxO365FirstName.text + " " + $textboxO365Initials.Text + "." + " " + $textboxO365LastName.Text
		}
		
	}
	
	$textboxO365Initials_TextChanged={
		If ((($textboxO365Initials.text | Measure-Object -Character).Characters) -lt 1)
		{
			$textboxO365DisplayName.Text = $textboxO365FirstName.text + " " + $textboxO365LastName.Text
		}
		Else
		{
			$textboxO365DisplayName.Text = $textboxO365FirstName.text + " " + $textboxO365Initials.text + "." + $textboxO365LastName.Text
		}
		
	}
	
	
	
	$console_TextChanged={
		$console.SelectionStart = $console.TextLength;
		$console.ScrollToCaret()
		$console.Focus()
		
	}
	
	$buttonO365Clear_Click = {
		add-logs -text 'LOG: Clearing randomly generated password'
		add-logs -text 'CMD: $textboxo365passwordgen.text = ""'
		$textboxo365passwordgen.text = ""
		
	}
	
	$buttonClear_Click={
		add-logs -text 'LOG: Clearing randomly generated password'
		add-logs -text 'CMD: $textboxPasswordGen.Text = "" '
		$textboxPasswordGen.Text = ""
	}
	
	$checkboxconfigo365user_CheckedChanged = {
		If (($checkboxCreateAnActiveDirect.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $false) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		ElseIf (($checkboxCreateAnActiveDirect.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		ElseIf (($checkboxCreateAnActiveDirect.Checked -eq $false) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		Else
		{
			$buttonCreateUser.Enabled = $False
		}
		If (($checkboxconfigo365user.Checked -eq $true))
		{
			add-logs -text 'LOG: Checking if DirSync is present on localhost'
			Import-Module ADSync -ErrorAction SilentlyContinue
			$ADSyncModule = Get-Module | Where-Object { $_.Name -eq "ADSync" } -ErrorAction SilentlyContinue
			If ($null -ne $ADSyncModule)
			{
				add-logs -text 'LOG: DirSync found, enabling DirSync option'
				$checkboxRunDirSyncAfterUserC.Enabled = $True
				$groupboxADSync.Enabled = $true
				add-logs -text 'LOG: Done'
			}
			Else
			{
				add-logs -text 'LOG: No DirSync Found. Enabling manual user creation'
				$groupboxNoAdSync.Enabled = $true
				add-logs -text 'LOG: Done'
			}
		}
		Else
		{
			add-logs -text 'LOG: Disabling Office 365 manual user creation'
			$groupboxNoAdSync.Enabled = $false
			add-logs -text 'LOG: Done'
		}
		
	}
	
	$checkboxCreateAnActiveDirect_CheckedChanged = {
		If (($checkboxCreateAnActiveDirect.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $false) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		ElseIf (($checkboxCreateAnActiveDirect.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		ElseIf (($checkboxCreateAnActiveDirect.Checked -eq $false) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		Else
		{
			$buttonCreateUser.Enabled = $False
		}
		If (($checkboxCreateAnActiveDirect.Checked -eq $true) )
		{
			add-logs -text 'LOG: Enabling AD User creation'
			$tabcontrolUserProperties.Enabled = $true
			add-logs -text 'LOG: Done'
			
			add-logs -text 'LOG: Loading Organizational Unit Tree'
			add-logs -text "CMD: `$OUTree = (Get-ADOrganizationalUnit -Filter * -Properties CanonicalName | Sort-Object | Select-Object -Property CanonicalName).CanonicalName"
			$OUTree = (Get-ADOrganizationalUnit -Filter * -Properties CanonicalName | Sort-Object | Select-Object -Property CanonicalName).CanonicalName
			If ($null -eq $OUTree)
			{
				$InfoMessage = 'Could not load Organizational Unit structure'
				$InfoTitle = "Warning"
				Show-MessageBox_psf
				$comboboxOUTree.Enabled = $false
			}
			Else
			{
				add-logs -text "CMD: Update-ComboBox -ComboBox `$comboboxOUTree -Items $OUTree"
				Update-ComboBox -ComboBox $comboboxOUTree -Items $OUTree
				add-logs -text 'LOG: Done'
				$comboboxOUTree.Enabled = $true
			}
			
			add-logs -text 'LOG: Getting Active Directory Groups'
			add-logs -text 'CMD: $Groups = Get-ADGroup -Filter * | Where-Object {($_.Name -ne "Domain Users") -and ($_.Name -ne "Domain Computers")} | Select-Object -ExpandProperty Name | Sort-Object'
			$Groups = Get-ADGroup -Filter * | Where-Object { ($_.Name -ne "Domain Users") -and ($_.Name -ne "Domain Computers") } | Select-Object -ExpandProperty Name | Sort-Object
			If ($null -eq $Groups)
			{
				add-logs -text 'WARN: No Active Directory Groups were found'
				$InfoMessage = 'No Active Directory Group objects were found when running Get-ADGroup'
				$InfoTitle = "Warning"
				Show-MessageBox_psf
			}
			Else
			{
				add-logs -text 'CMD: Update-ListBox -ListBox $checkedlistboxGroups -Items $Groups'
				Update-ListBox -ListBox $checkedlistboxGroups -Items $Groups
				add-logs -text 'LOG: Done'
			}
			
			add-logs -text 'LOG: Getting NetBIOS Name'
			add-logs -text 'CMD: (Get-ADDomain).NetBIOSName'
			$Netbiosname = (Get-ADDomain).NetBIOSName
			If ($null -eq $Netbiosname)
			{
				add-logs -text 'WARN: No NetBIOS Name was found'
				$InfoMessage = 'No NetBIOS Name was found when running (Get-ADDomain).NetBIOSName'
				$InfoTitle = "Warning"
				Show-MessageBox_psf
				$textboxUPNDomain.Text ="Not Available"
			}
			Else
			{
				$textboxUPNDomain.Text = $Netbiosname + "\"
				add-logs -text 'LOG: Done'
			}
			
			add-logs -text 'LOG: Getting UPN Suffixes'
			add-logs -text 'CMD: $Forest = Get-ADForest'
			$Forest = Get-ADForest
			If ($null -eq $Forest)
			{
				add-logs -text 'WARN: No Active Directory Forest was found'
				$InfoMessage = 'No Active Directory Forest was found when running Get-ADForest'
				$InfoTitle = "Warning"
				Show-MessageBox_psf
				$comboboxDomains.Enabled = $false
			}
			Else
			{
				$comboboxDomains.Enabled = $true
				$UPNs = @()
				add-logs -text 'CMD: ($Forest | Select-Object UPNSuffixes -ExpandProperty UPNSuffixes)'
				$extraUPNS = ($Forest | Select-Object UPNSuffixes -ExpandProperty UPNSuffixes)
				If ($extraUPNs -ne $Null)
				{
					foreach ($extraUPN in $extraUPNs)
					{
						$UPNs += "@" + $extraUPN
					}
				}
				add-logs -text 'CMD: $UPNs += "@" +  ($Forest | Select-Object -ExpandProperty Name)'
				$UPNs += "@" + ($Forest | Select-Object -ExpandProperty Name)
				Update-ComboBox -ComboBox $comboboxDomains -Items $UPNs
			}
			add-logs -text 'LOG: Done'
			
			$comboboxDomains.SelectedIndex = 0
			
		}
		Else
		{
			$tabcontrolUserProperties.Enabled = $false	
		}
		
	}
	
	$copyAllLogToClipboardToolStripMenuItem_Click = {
		add-logs -text 'LOG: Copying log to clipboard'
		add-logs -text 'CMD: $console.Text | clip'
		$console.Text | clip
		add-logs -text 'LOG: Done'
		
	}
	
	$clearLogToolStripMenuItem_Click = {
		add-logs -text 'LOG: Clearing log'
		add-logs -text 'CMD: $console.Text = ""'
		$console.Text = ""
		add-logs -text 'LOG: Done'
		
	}
	
	$exitToolStripMenuItem_Click = {
		Get-PSSession | Remove-PSSession
		$MainForm.close()
		
	}
	
	
	
	$textboxUserLogonName_TextChanged = {
	
			$textboxSamAccount.Text = $textboxUserLogonName.Text
		
		If ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0)
		{
			$labelUserLogonNameUPN.Text = "User logon name: (UPN)"
			$labelUserLogonNameUPN.ForeColor = 'Black'
		}
		ElseIf ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -lt 1)
		{
			$labelUserLogonNameUPN.Text = "*User logon name: (UPN)"
			$labelUserLogonNameUPN.ForeColor = 'Firebrick'
		}
		
		If (($checkboxCreateAnActiveDirect.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $false) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		ElseIf (($checkboxCreateAnActiveDirect.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		ElseIf (($checkboxCreateAnActiveDirect.Checked -eq $false) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		Else
		{
			$buttonCreateUser.Enabled = $False
		}
	}
	
	
	
	
	$maskedtextboxpassword_TextChanged = {
		If ((($maskedtextboxpassword.Text | Measure-Object -Character).Characters) -gt 0)
		{
			$labelPassword.Text = "Password:"
			$labelPassword.ForeColor = 'Black'
			
		}
		ElseIf ((($maskedtextboxpassword.Text | Measure-Object -Character).Characters) -lt 1)
		{
			$labelPassword.Text = "*Password:"
			$labelPassword.ForeColor = 'Firebrick'
			
		}
		
		If (((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -lt 1) -and ((($maskedtextboxpassword.Text | Measure-Object -Character).Characters) -lt 1))
		{
			$labelpasswordconfirmmessage.Text = ""
		}
		Else
		{
			If (($textboxConfirmPassword.Text) -ne ($maskedtextboxpassword.Text))
			{
				$labelpasswordconfirmmessage.ForeColor = 'Red'
				$labelpasswordconfirmmessage.Text = "Passwords do not match!"
				$buttonCreateUser.Enabled = $false
			}
			ElseIf (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text))
			{
				$labelpasswordconfirmmessage.ForeColor = 'Green'
				$labelpasswordconfirmmessage.Text = "Passwords match!"
				If (($checkboxCreateAnActiveDirect.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $false) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
				{
					$buttonCreateUser.Enabled = $true
				}
				ElseIf (($checkboxCreateAnActiveDirect.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
				{
					$buttonCreateUser.Enabled = $true
				}
				ElseIf (($checkboxCreateAnActiveDirect.Checked -eq $false) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0))
				{
					$buttonCreateUser.Enabled = $true
				}
				Else
				{
					$buttonCreateUser.Enabled = $False
				}
			}
			Else
			{
				$labelpasswordconfirmmessage.Text = ""
			}
		}
		
		
	}
	
	
	
	
	
	$resetFormToolStripMenuItem_Click = {
		
		###########################
		#                         #
		#  ACTIVE DIRECTORY USER  #
		#                         #
		###########################
		
		#General Page
		add-logs -text 'LOG: Resetting forms on General Page for Active Directory'
		$textboxFirstName.Text = ""
		$textboxInitials.Text = ""
		$textboxLastName.Text = ""
		$textboxDisplayName.Text = ""
		$textboxDescription.Text = ""
		$textboxoffice.Text = ""
		$textboxPasswordGen.Text = ""
		$maskedtextboxpassword.Text = ""
		$textboxConfirmPassword.Text = ""
		$textboxTelephone.Text = ""
		$textboxEmail.Text = ""
		$textboxWebPage.Text = ""
		add-logs -text 'LOG: Done'
		
		#Account Page
		add-logs -text 'LOG: Resetting forms on Account Page for Active Directory'
		$textboxUserLogonName.Text = ""
		$textboxSamAccount.Text = ""
		$checkboxAccountIsDisabled.CheckState = 'Unchecked'
		$checkboxUserMustChangePasswo.CheckState = 'Unchecked'
		$checkboxUserCannotChangePass.CheckState = 'Unchecked'
		$checkboxPasswordNeverExpires.CheckState = 'Unchecked'
		$comboboxOUTree.SelectedText = ""
		add-logs -text 'LOG: Done'
		
		#Address Page
		add-logs -text 'LOG: Resetting forms on Address Page for Active Directory'
		$textboxStreet.Text = ""
		$textboxPOBox.Text = ""
		$textboxcity.Text = ""
		$textboxstate.Text = ""
		$textboxzipcode.Text = ""
		add-logs -text 'LOG: Done'
		
		#Groups Page
		add-logs -text 'LOG: Resetting forms on Groups Page for Active Directory'
		for ($i = 0; $i -lt $checkedlistboxGroups.Items.Count; $i++)
		{
			
			$checkedlistboxGroups.SetItemCheckState($i, 'Unchecked')
			
		}
		add-logs -text 'LOG: Done'
		
		#Organization Page
		add-logs -text 'LOG: Resetting forms on Organization Page for Active Directory'
		$textboxjobtitle.Text = ""
		$textboxDepartment.Text = ""
		$textboxCompany.Text = ""
		add-logs -text 'LOG: Done'
		
		#Profile Page
		add-logs -text 'LOG: Resetting forms on Profile Page for Active Directory'
		$textboxprofilepath.Text = ""
		$textboxlogonscript.Text = ""
		$comboboxDriveLetter.SelectedIndex = 0
		$textboxhomedirectory.Text = ""
		add-logs -text 'LOG: Done'
		
		#Attributes Page
		add-logs -text 'LOG: Resetting forms on Attributes Page for Active Directory'
		$textboxproxyaddress.Text = ""
		add-logs -text 'LOG: Done'
		
		
		###########################
		#                         #
		#     OFFICE 365 USER     #
		#                         #
		###########################
		
		#General Page
		add-logs -text 'LOG: Resetting forms on General Page for Office 365'
		$textboxO365FirstName.Text = ""
		$textboxO365LastName.Text = ""
		$textboxO365DisplayName.Text = ""
		$textboxo365passwordgen.Text = ""
		$maskedtextboxo365password.Text = ""
		$textboxo365confirmpassword.Text = ""
		add-logs -text 'LOG: Done'
		
		#Account Page
		add-logs -text 'LOG: Resetting forms on Account Page for Office 365'
		$checkboxRunDirSyncAfterUserC.Checked = $false
		$textboxO365UPN.Text = ""
		$textboxO365EmailAddress.Text = ""
		$textboxo365proxyaddresses.Text = ""
		$checkboxo365usermustchangepassword.Checked = $false
		$checkboxO365PasswordNeverExpires.Checked = $false
		$checkboxBlockCred.Checked = $false
		$comboboxMFA.SelectedItem = "False"
		$comboboxO365countrycode.SelectedItem = "US"
		add-logs -text 'LOG: Done'
		
		#Address Page
		add-logs -text 'LOG: Resetting forms on Address Page for Office 365'
		$textboxO365street.Text = ""
		$textboxo365city.Text = ""
		$textboxo365state.Text = ""
		$textboxo365zip.Text = ""
		add-logs -text 'LOG: Done'
		
		#Mail Groups Page
		add-logs -text 'LOG: Resetting forms on Mail Groups Page for Office 365'
		for ($i = 0; $i -lt $checkedlistboxDISTROo365groups.Items.Count; $i++)
		{
			
			$checkedlistboxDISTROo365groups.SetItemCheckState($i, 'Unchecked')
			
		}
		add-logs -text 'LOG: Done'
		
		#Security Groups Page
		add-logs -text 'LOG: Resetting forms on Security Groups Page for Office 365'
		for ($i = 0; $i -lt $checkedlistboxO365SecurityGroups.Items.Count; $i++)
		{
			
			$checkedlistboxO365SecurityGroups.SetItemCheckState($i, 'Unchecked')
			
		}
		add-logs -text 'LOG: Done'
		
		#Shared Mailboxes Page
		add-logs -text 'LOG: Resetting forms on Shared Mailboxes Page for Office 365'
		$comboboxsharedmaiboxpermission.SelectedIndex = 0
		$comboboxsharedmailboxautomap.SelectedIndex = 0
		for ($i = 0; $i -lt $checkedlistboxsharedmailboxes.Items.Count; $i++)
		{
			
			$checkedlistboxsharedmailboxes.SetItemCheckState($i, 'Unchecked')
			
		}
		add-logs -text 'LOG: Done'
	}
	
	$linklabelBradWyatt_LinkClicked = [System.Windows.Forms.LinkLabelLinkClickedEventHandler]{
		add-logs -text 'LOG: Navigating to author site'
		add-logs -text 'CMD: start-process -FilePath "https://www.linkedin.com/in/bradleywyatt/"'
		start-process -FilePath "https://www.linkedin.com/in/bradleywyatt/"
		add-logs -text 'LOG: Done'
		
	}
	
	$linklabelGitHub_LinkClicked = [System.Windows.Forms.LinkLabelLinkClickedEventHandler]{
		add-logs -text 'LOG: Navigating to GitHub Project site'
		add-logs -text 'CMD: Start-Process -FilePath "https://github.com/bwya77/AD-Master-User-Creator"'
		Start-Process -FilePath "https://github.com/bwya77/AD-Master-User-Creator"
		add-logs -text 'LOG: Done'
		
	}
	
	$textboxO365DisplayName_TextChanged= {
		If ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0)
		{
			$labelO365DisplayName.Text = "Display Name:"
			$labelO365DisplayName.ForeColor = 'Black'
		}
		ElseIf ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -lt 1)
		{
			$labelO365DisplayName.Text = "*Display Name:"
			$labelO365DisplayName.ForeColor = 'Firebrick'
		}
		
		If (($checkboxCreateAnActiveDirect.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $false) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		ElseIf (($checkboxCreateAnActiveDirect.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		ElseIf (($checkboxCreateAnActiveDirect.Checked -eq $false) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		Else
		{
			$buttonCreateUser.Enabled = $False
		}
	}
	
	$textboxO365UPN_TextChanged= {
		If ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0)
		{
			$labelO365UserPrincipalName.Text = "UserPrincipalName:"
			$labelO365UserPrincipalName.ForeColor = 'Black'
		}
		ElseIf ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -lt 1)
		{
			$labelO365UserPrincipalName.Text = "*UserPrincipalName:"
			$labelO365UserPrincipalName.ForeColor = 'Firebrick'
		}
		If (($checkboxCreateAnActiveDirect.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $false) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		ElseIf (($checkboxCreateAnActiveDirect.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		ElseIf (($checkboxCreateAnActiveDirect.Checked -eq $false) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		Else
		{
			$buttonCreateUser.Enabled = $False
		}
	}
	
	
	$maskedtextboxo365password_TextChanged={
		If ((($maskedtextboxo365password.Text | Measure-Object -Character).Characters) -gt 0)
		{
			$labelO365userpassword.Text = "Password:"
			$labelO365userpassword.ForeColor = 'Black'
		}
		ElseIf ((($maskedtextboxo365password.Text | Measure-Object -Character).Characters) -lt 1)
		{
			$labelO365userpassword.Text = "*Password:"
			$labelO365userpassword.ForeColor = 'Firebrick'
		}
		
		If (((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -lt 1) -and ((($maskedtextboxo365password.Text | Measure-Object -Character).Characters) -lt 1))
		{
			$labelo365password.Text = ""
		}
		Else
		{
			If (($textboxo365confirmpassword.Text) -ne ($maskedtextboxo365password.Text))
			{
				$labelo365password.ForeColor = 'Red'
				$labelo365password.Text = "Passwords do not match!"
				$buttonCreateUser.Enabled = $false
			}
			Else
			{
				$labelo365password.ForeColor = 'Green'
				$labelo365password.Text = "Passwords match!"
				
				If (($checkboxCreateAnActiveDirect.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $false) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
				{
					$buttonCreateUser.Enabled = $true
				}
				ElseIf (($checkboxCreateAnActiveDirect.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
				{
					$buttonCreateUser.Enabled = $true
				}
				ElseIf (($checkboxCreateAnActiveDirect.Checked -eq $false) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0))
				{
					$buttonCreateUser.Enabled = $true
				}
				Else
				{
					$buttonCreateUser.Enabled = $False
				}
			}
		}
	}
	
	
	$comboboxO365Licenses_SelectedIndexChanged={
		If ($comboboxO365Licenses.SelectedIndex -eq $null)
		{
			$checkedlistboxDISTROo365groups.Enabled = $false
			$comboboxsharedmaiboxpermission.Enabled = $false
			$comboboxsharedmailboxautomap.Enabled = $false
			$labelSecurityGroups.Text = "Please connect to Office 365 in the General tab to add your user to Groups.
If no license is selected for your user, this will remain disabled"
			$checkedlistboxsharedmailboxes.Enabled = $false
			$labelsharedmailboxes.Text = "Please connect to Office 365 in the General tab to add your user to Shared Mailboxes.
If no license is selected for your user, this will remain disabled"
			If (($comboboxO365countrycode.SelectedItem -eq $Null) -and ($comboboxO365Licenses.SelectedItem -ne $null))
			{
				$labelCountryCode.Text = "*Country Code"
				$labelCountryCode.ForeColor = 'Firebrick'
				$comboboxO365countrycode.SelectedItem = "US"
			}
			Else
			{
				$labelCountryCode.Text = "Country Code"
				$labelCountryCode.ForeColor = 'Black'
			}
		}
		Else
		{
			$checkedlistboxDISTROo365groups.Enabled = $true
			$comboboxsharedmaiboxpermission.Enabled = $true
			$comboboxsharedmailboxautomap.Enabled = $true
			$labelO365Groups.Text = "Please select any Mail Enabled groups to add your user to"
			$checkedlistboxsharedmailboxes.Enabled = $true
			$labelsharedmailboxes.Text = "Please select any Shared Mailbox you want your user to have access to. The permission level and automapping you set will apply to all Shared Mailboxes you select"
			If (($comboboxO365countrycode.SelectedItem -eq $Null) -and ($comboboxO365Licenses.SelectedItem -ne $null))
			{
				$labelCountryCode.Text = "*Country Code"
				$labelCountryCode.ForeColor = 'Firebrick'
				$comboboxO365countrycode.SelectedItem = "US"
			}
			Else
			{
				$labelCountryCode.Text = "Country Code"
				$labelCountryCode.ForeColor = 'Black'
			}
		}
		
	}
	
	
	$comboboxO365countrycode_SelectedIndexChanged={
		If (($comboboxO365countrycode.SelectedItem -eq $Null) -and ($comboboxO365Licenses.SelectedItem -ne $null))
			{
				$labelCountryCode.Text = "*Country Code"
				$labelCountryCode.ForeColor = 'Firebrick'
		}
		Else
		{
			$labelCountryCode.Text = "Country Code"
			$labelCountryCode.ForeColor = 'Black'
		}
		
	}
	
	$disconnectFromOffice365ToolStripMenuItem_Click = {
		$Global:O365_Pre_Req--
		Add-Logs -text 'LOG: Removing PSSessiong'
		Add-Logs -text 'CMD: Get-PSSession | Remove-PSSession'
		Get-PSSession | Remove-PSSession
		$buttonConnectToOffice365.Enabled = $true
		$buttonConnectToOffice365.Text = "*Connect to Office 365"
		$buttonConnectToOffice365.ForeColor = 'Firebrick'
		Add-Logs -text 'LOG: Done'
		$disconnectFromOffice365ToolStripMenuItem.Enabled = $false
		
	}
	
	
	
	$saveLogAsToolStripMenuItem_Click={
		$SaveChooser = New-Object -Typename System.Windows.Forms.SaveFileDialog
		$SaveChooser.title = "Save Log File"
		$SaveChooser.filter = "Text File|*.txt"
		$SaveChooser.ShowDialog()
		$console.Text | Out-File $SaveChooser.Filename
		
	}
	
	$comboboxsharedmaiboxpermission_SelectedIndexChanged={
		If ($comboboxsharedmaiboxpermission.SelectedItem -eq "Full Access")
		{
			$comboboxsharedmailboxautomap.Enabled = $true
			Update-ComboBox -ComboBox $comboboxsharedmailboxautomap -Items "True", "False"
			$comboboxsharedmailboxautomap.SelectedIndex = 0
		}
		Else
		{
			Update-ComboBox -ComboBox $comboboxsharedmailboxautomap -Items ""
			$comboboxsharedmailboxautomap.Enabled = $false
			
		}
		
	}
	
	
	
	
	$versionToolStripMenuItem_Click={
		$InfoMessage = "
Version Number: $Version
Build Date: $Builddate
Author: Brad Wyatt
"
		$InfoTitle = "Build Information"
		Show-MessageBox_psf
		
	}
	
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$MainForm.WindowState = $InitialFormWindowState
	}
	
	$Form_StoreValues_Closing=
	{
		#Store the control values
		$script:MainForm_console = $console.Text
		$script:MainForm_radiobuttonEnableMFA = $radiobuttonEnableMFA.Checked
		$script:MainForm_radiobuttonDisableMFA = $radiobuttonDisableMFA.Checked
		$script:MainForm_checkboxCreateAnActiveDirect = $checkboxCreateAnActiveDirect.Checked
		$script:MainForm_checkboxconfigo365user = $checkboxconfigo365user.Checked
		$script:MainForm_maskedtextboxpassword = $maskedtextboxpassword.Text
		$script:MainForm_textboxConfirmPassword = $textboxConfirmPassword.Text
		$script:MainForm_textboxPasswordGen = $textboxPasswordGen.Text
		$script:MainForm_textboxWebPage = $textboxWebPage.Text
		$script:MainForm_textboxEmail = $textboxEmail.Text
		$script:MainForm_textboxTelephone = $textboxTelephone.Text
		$script:MainForm_textboxoffice = $textboxoffice.Text
		$script:MainForm_textboxDescription = $textboxDescription.Text
		$script:MainForm_textboxDisplayName = $textboxDisplayName.Text
		$script:MainForm_textboxFirstName = $textboxFirstName.Text
		$script:MainForm_textboxInitials = $textboxInitials.Text
		$script:MainForm_textboxLastName = $textboxLastName.Text
		$script:MainForm_comboboxOUTree = $comboboxOUTree.Text
		$script:MainForm_comboboxOUTree_SelectedItem = $comboboxOUTree.SelectedItem
		$script:MainForm_checkboxAccountIsDisabled = $checkboxAccountIsDisabled.Checked
		$script:MainForm_checkboxPasswordNeverExpires = $checkboxPasswordNeverExpires.Checked
		$script:MainForm_checkboxUserCannotChangePass = $checkboxUserCannotChangePass.Checked
		$script:MainForm_checkboxUserMustChangePasswo = $checkboxUserMustChangePasswo.Checked
		$script:MainForm_textboxSamAccount = $textboxSamAccount.Text
		$script:MainForm_textboxUPNDomain = $textboxUPNDomain.Text
		$script:MainForm_comboboxDomains = $comboboxDomains.Text
		$script:MainForm_comboboxDomains_SelectedItem = $comboboxDomains.SelectedItem
		$script:MainForm_textboxUserLogonName = $textboxUserLogonName.Text
		$script:MainForm_textboxzipcode = $textboxzipcode.Text
		$script:MainForm_textboxstate = $textboxstate.Text
		$script:MainForm_textboxcity = $textboxcity.Text
		$script:MainForm_textboxPOBox = $textboxPOBox.Text
		$script:MainForm_textboxStreet = $textboxStreet.Text
		$script:MainForm_checkedlistboxGroups = $checkedlistboxGroups.SelectedItems
		$script:MainForm_textboxCompany = $textboxCompany.Text
		$script:MainForm_textboxDepartment = $textboxDepartment.Text
		$script:MainForm_textboxjobtitle = $textboxjobtitle.Text
		$script:MainForm_textboxhomedirectory = $textboxhomedirectory.Text
		$script:MainForm_comboboxDriveLetter = $comboboxDriveLetter.Text
		$script:MainForm_comboboxDriveLetter_SelectedItem = $comboboxDriveLetter.SelectedItem
		$script:MainForm_textboxlogonscript = $textboxlogonscript.Text
		$script:MainForm_textboxprofilepath = $textboxprofilepath.Text
		$script:MainForm_textboxproxyaddress = $textboxproxyaddress.Text
		$script:MainForm_comboboxO365Licenses = $comboboxO365Licenses.Text
		$script:MainForm_comboboxO365Licenses_SelectedItem = $comboboxO365Licenses.SelectedItem
		$script:MainForm_textboxO365FirstName = $textboxO365FirstName.Text
		$script:MainForm_maskedtextboxo365password = $maskedtextboxo365password.Text
		$script:MainForm_textboxo365confirmpassword = $textboxo365confirmpassword.Text
		$script:MainForm_textboxo365passwordgen = $textboxo365passwordgen.Text
		$script:MainForm_textboxO365LastName = $textboxO365LastName.Text
		$script:MainForm_textboxO365DisplayName = $textboxO365DisplayName.Text
		$script:MainForm_comboboxMFA = $comboboxMFA.Text
		$script:MainForm_comboboxMFA_SelectedItem = $comboboxMFA.SelectedItem
		$script:MainForm_comboboxO365Domains = $comboboxO365Domains.Text
		$script:MainForm_comboboxO365Domains_SelectedItem = $comboboxO365Domains.SelectedItem
		$script:MainForm_textboxo365proxyaddresses = $textboxo365proxyaddresses.Text
		$script:MainForm_textboxO365EmailAddress = $textboxO365EmailAddress.Text
		$script:MainForm_comboboxO365countrycode = $comboboxO365countrycode.Text
		$script:MainForm_comboboxO365countrycode_SelectedItem = $comboboxO365countrycode.SelectedItem
		$script:MainForm_checkboxBlockCred = $checkboxBlockCred.Checked
		$script:MainForm_checkboxO365PasswordNeverExpires = $checkboxO365PasswordNeverExpires.Checked
		$script:MainForm_checkboxo365usermustchangepassword = $checkboxo365usermustchangepassword.Checked
		$script:MainForm_textboxO365UPN = $textboxO365UPN.Text
		$script:MainForm_textboxo365zip = $textboxo365zip.Text
		$script:MainForm_textboxo365state = $textboxo365state.Text
		$script:MainForm_textboxo365city = $textboxo365city.Text
		$script:MainForm_textboxO365street = $textboxO365street.Text
		$script:MainForm_labelO365Groups = $labelO365Groups.Text
		$script:MainForm_checkedlistboxDISTROo365groups = $checkedlistboxDISTROo365groups.SelectedItems
		$script:MainForm_labelSecurityGroups = $labelSecurityGroups.Text
		$script:MainForm_checkedlistboxO365SecurityGroups = $checkedlistboxO365SecurityGroups.SelectedItems
		$script:MainForm_comboboxsharedmailboxautomap = $comboboxsharedmailboxautomap.Text
		$script:MainForm_comboboxsharedmailboxautomap_SelectedItem = $comboboxsharedmailboxautomap.SelectedItem
		$script:MainForm_comboboxsharedmaiboxpermission = $comboboxsharedmaiboxpermission.Text
		$script:MainForm_comboboxsharedmaiboxpermission_SelectedItem = $comboboxsharedmaiboxpermission.SelectedItem
		$script:MainForm_labelsharedmailboxes = $labelsharedmailboxes.Text
		$script:MainForm_checkedlistboxsharedmailboxes = $checkedlistboxsharedmailboxes.SelectedItems
		$script:MainForm_comboboxO365HidefromGAL = $comboboxO365HidefromGAL.Text
		$script:MainForm_comboboxO365HidefromGAL_SelectedItem = $comboboxO365HidefromGAL.SelectedItem
		$script:MainForm_checkboxRunDirSyncAfterUserC = $checkboxRunDirSyncAfterUserC.Checked
	}

	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$console.remove_TextChanged($console_TextChanged)
			$buttonExit.remove_Click($buttonExit_Click)
			$buttonCreateUser.remove_Click($buttonCreateUser_Click)
			$linklabelBradWyatt.remove_LinkClicked($linklabelBradWyatt_LinkClicked)
			$linklabelGitHub.remove_LinkClicked($linklabelGitHub_LinkClicked)
			$checkboxCreateAnActiveDirect.remove_CheckedChanged($checkboxCreateAnActiveDirect_CheckedChanged)
			$checkboxconfigo365user.remove_CheckedChanged($checkboxconfigo365user_CheckedChanged)
			$maskedtextboxpassword.remove_TextChanged($maskedtextboxpassword_TextChanged)
			$buttonClear.remove_Click($buttonClear_Click)
			$textboxConfirmPassword.remove_TextChanged($textboxConfirmPassword_TextChanged)
			$buttonGeneratePassword.remove_Click($buttonGeneratePassword_Click)
			$textboxDisplayName.remove_TextChanged($textboxDisplayName_TextChanged)
			$textboxFirstName.remove_TextChanged($textboxFirstName_TextChanged)
			$textboxInitials.remove_TextChanged($textboxInitials_TextChanged)
			$textboxLastName.remove_TextChanged($textboxLastName_TextChanged)
			$textboxUserLogonName.remove_TextChanged($textboxUserLogonName_TextChanged)
			$buttonConnectToOffice365.remove_Click($buttonConnectToOffice365_Click)
			$buttonCopyOnPremUser.remove_Click($buttonCopyOnPremUser_Click)
			$comboboxO365Licenses.remove_SelectedIndexChanged($comboboxO365Licenses_SelectedIndexChanged)
			$textboxO365FirstName.remove_TextChanged($textboxO365FirstName_TextChanged)
			$maskedtextboxo365password.remove_TextChanged($maskedtextboxo365password_TextChanged)
			$buttonO365Clear.remove_Click($buttonO365Clear_Click)
			$textboxo365confirmpassword.remove_TextChanged($textboxo365confirmpassword_TextChanged)
			$buttonO365Genpassword.remove_Click($buttonO365Genpassword_Click)
			$textboxO365LastName.remove_TextChanged($textboxO365LastName_TextChanged)
			$textboxO365DisplayName.remove_TextChanged($textboxO365DisplayName_TextChanged)
			$comboboxO365countrycode.remove_SelectedIndexChanged($comboboxO365countrycode_SelectedIndexChanged)
			$textboxO365UPN.remove_TextChanged($textboxO365UPN_TextChanged)
			$comboboxsharedmaiboxpermission.remove_SelectedIndexChanged($comboboxsharedmaiboxpermission_SelectedIndexChanged)
			$checkboxRunDirSyncAfterUserC.remove_CheckedChanged($checkboxRunDirSyncAfterUserC_CheckedChanged)
			$MainForm.remove_Load($MainForm_Load)
			$exitToolStripMenuItem.remove_Click($exitToolStripMenuItem_Click)
			$copyAllLogToClipboardToolStripMenuItem.remove_Click($copyAllLogToClipboardToolStripMenuItem_Click)
			$clearLogToolStripMenuItem.remove_Click($clearLogToolStripMenuItem_Click)
			$resetFormToolStripMenuItem.remove_Click($resetFormToolStripMenuItem_Click)
			$disconnectFromOffice365ToolStripMenuItem.remove_Click($disconnectFromOffice365ToolStripMenuItem_Click)
			$saveLogAsToolStripMenuItem.remove_Click($saveLogAsToolStripMenuItem_Click)
			$versionToolStripMenuItem.remove_Click($versionToolStripMenuItem_Click)
			$MainForm.remove_Load($Form_StateCorrection_Load)
			$MainForm.remove_Closing($Form_StoreValues_Closing)
			$MainForm.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$MainForm.SuspendLayout()
	$tabcontrol1.SuspendLayout()
	$tabpageSettings.SuspendLayout()
	$groupbox1.SuspendLayout()
	$groupbox2FA.SuspendLayout()
	$groupboxADUser.SuspendLayout()
	$groupboxOffice365User.SuspendLayout()
	$tabpage1.SuspendLayout()
	$tabcontrolUserProperties.SuspendLayout()
	$tabpageGeneral.SuspendLayout()
	$panel1.SuspendLayout()
	$tabpageAccount.SuspendLayout()
	$panel2.SuspendLayout()
	$tabpageAddress.SuspendLayout()
	$tabpageGroups.SuspendLayout()
	$tabpageOrganization.SuspendLayout()
	$tabpageProfile.SuspendLayout()
	$groupbox2.SuspendLayout()
	$groupboxuserprofile.SuspendLayout()
	$tabpageattributes.SuspendLayout()
	$tabpageOffice365.SuspendLayout()
	$groupboxNoAdSync.SuspendLayout()
	$tabcontrol2.SuspendLayout()
	$tabpageO365General.SuspendLayout()
	$panel3.SuspendLayout()
	$tabpageO365Account.SuspendLayout()
	$panel4.SuspendLayout()
	$tabpageO365Address.SuspendLayout()
	$tabpageO365Groups.SuspendLayout()
	$tabpagesecurityGroups.SuspendLayout()
	$tabpageo365shared.SuspendLayout()
	$groupbox3.SuspendLayout()
	$tabpageO365Attributes.SuspendLayout()
	$groupboxADSync.SuspendLayout()
	$menustrip1.SuspendLayout()
	#
	# MainForm
	#
	$MainForm.Controls.Add($console)
	$MainForm.Controls.Add($buttonExit)
	$MainForm.Controls.Add($buttonCreateUser)
	$MainForm.Controls.Add($tabcontrol1)
	$MainForm.Controls.Add($menustrip1)
	$MainForm.AutoScaleDimensions = '192, 192'
	$MainForm.AutoScaleMode = 'Dpi'
	$MainForm.AutoSize = $True
	$MainForm.AutoSizeMode = 'GrowAndShrink'
	$MainForm.BackColor = 'Control'
	$MainForm.ClientSize = '1067, 1278'
	$MainForm.FormBorderStyle = 'FixedSingle'
	#region Binary Data
	$MainForm.Icon = [System.Convert]::FromBase64String('
AAABAAUAEBAAAAEAIABoBAAAVgAAABgYAAABACAAiAkAAL4EAAAgIAAAAQAgAKgQAABGDgAAMDAA
AAEAIACoJQAA7h4AAAAAAAABACAAJB4AAJZEAAAoAAAAEAAAACAAAAABACAAAAAAAAAEAADXDQAA
1w0AAAAAAAAAAAAAWkj/01pI/+1aSP/vWkj/71pI/+9aSP/vWkj/71pI/+9aSP/vWkj/8lpI/4mT
iP8Aw77/BMC7/wLAu/8AAAAAAFpI//9aSP/YWkj/plpI/6daSP+nWkj/p1pI/6daSP+nWkj/p1pI
/6haR/9byMT/BsC7/4TAu/9lwLv/AMC7/wBaSP//Wkj/jVpI/wBaSP8BWkj/AVpI/wFaSP8BWkj/
AVpI/wFYRv8BxsL/AMC7/xHAu//SwLv/p8C7/wHAu/8AWkj//1pI/4xaSP8AWkj/AAAAAAAAAAAA
AAAAAAAAAADAu/8AwLv/EcC7/2jAu/+DwLv/6MC7/9HAu/96wLv/ZFpI//9aSP+VWkj/AFpI/wAA
AAAAAAAAAAAAAAAAAAAAwLv/AMC7/y3Au//ZwLv/8cC7//zAu//5wLv/78C7/9haSP/YWkj/0FpI
/yBaSP8AWkj/AAAAAAAAAAAAAAAAAMC7/wDAu/8EwLv/IsC7/zvAu//bwLv/t8C7/y7Au/8gWkj/
ZFpI//BaSP/FWkj/blpI/19aSP9gWkj/YFpI/1laSP80Wkj/CKGY/wDAu/8PwLv/zMC7/6HAu/8A
wLv/AFpI/wVaSP9iWkj/1VpI//daSP//Wkj//1pI//paSP/4Wkj/8FpI/6FaSP8g////AMC7/0TA
u/8ywLv/AMC7/wBaSP8AWkj/AFpI/x1aSP+3Wkj//FpI/6daSP9QWkj/SlpI/5laSP/2Wkj/tFpI
/xNaSP8AAAAAAAAAAAAAAAAAAAAAAFpI/wBaSP82Wkj/7VpI/6FaSP8MWkj/AFpI/wBaSP8FWkj/
hlpI//taSP9iWkj/AFpI/wAAAAAAAAAAAFpI/wBaSP8AWkj/b1pI//ZaSP9BWkj/AFpI/wAAAAAA
Wkj/AFpI/ypaSP/rWkj/olpI/wFaSP8AAAAAAAAAAABaSP8AWkj/AFpI/31aSP/xWkj/MVpI/wAA
AAAAAAAAAFpI/wBaSP8dWkj/4lpI/69aSP8DWkj/AAAAAAAAAAAAWkj/AFpI/wBaSP9YWkj/+VpI
/2laSP8AWkj/AFpI/wBaSP8AWkj/TVpI//laSP+JWkj/AFpI/wAAAAAAAAAAAAAAAABaSP8AWkj/
GlpI/81aSP/fWkj/S1pI/wpaSP8HWkj/O1pI/85aSP/qWkj/OFpI/wAAAAAAAAAAAAAAAAAAAAAA
Wkj/AFpI/wBaSP9EWkj/3FpI//JaSP/CWkj/vVpI/+xaSP/tWkj/aFpI/wJaSP8AAAAAAAAAAAAA
AAAAAAAAAAAAAABaSP8AWkj/AFpI/zRaSP+kWkj/41pI/+haSP+3Wkj/TVpI/wRaSP8AAAAAAAAA
AAAAAAAAAAAAAAATAAAAAwAAICEAAD+AAAA/gAAAH4AAAAAjAAAAEwAAwA8AAMMPAADHhwAAx4cA
AMePAADADwAA4A8AAPAfAAAoAAAAGAAAADAAAAABACAAAAAAAAAJAADXDQAA1w0AAAAAAAAAAAAA
Wkj/pVpI/95aSP/eWkj/3lpI/95aSP/eWkj/3lpI/95aSP/eWkj/3lpI/95aSP/eWkj/3lpI/95a
SP/gWkj/nlpI/w1aSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWkj/+1pI//9aSP//Wkj//1pI
//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj/3VpI/x91Z/8AwLv/
FMC7/zDAu/8IwLv/AAAAAAAAAAAAWkj//1pI//5aSP+tWkj/f1pI/4FaSP+BWkj/gVpI/4FaSP+B
Wkj/gVpI/4FaSP+BWkj/gVpI/4FaSP+CWkj/UFA9/wPHw/8EwLv/msC7/+/Au/9awLv/AMC7/wAA
AAAAWkj//1pI//5aSP9aWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAMC7/wDAu/8MwLv/xMC7///Au/+AwLv/AMC7/wAAAAAAWkj//1pI//5aSP9aWkj/
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAu/8AwLv/AcC7/wLAu/8O
wLv/xcC7///Au/+CwLv/AMC7/wPAu/8AWkj//1pI//5aSP9aWkj/AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAMC7/wDAu/8YwLv/jcC7/6zAu/+vwLv/7MC7///Au//VwLv/qsC7
/6rAu/94Wkj//lpI//5aSP9dWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AMC7/wDAu/9JwLv/+MC7///Au///wLv//8C7///Au///wLv//8C7///Au//xWkj/61pI//9aSP+D
Wkj/AFpI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMC7/wDAu/8UwLv/gMC7/57A
u/+iwLv/6cC7///Au//PwLv/nMC7/5zAu/9rWkj/rVpI//9aSP/YWkj/LlpI/wBaSP8AAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMC7/wDAu/8MwLv/xMC7///Au/+AwLv/
AMC7/wAAAAAAWkj/QlpI/+VaSP//Wkj/zVpI/1taSP8pWkj/JFpI/yRaSP8kWkj/JFpI/yNaSP8b
Wkj/CVpI/wBaSP8AAAAAAMC7/wDAu/8LwLv/xMC7///Au/+AwLv/AMC7/wAAAAAAWkj/AVpI/2Za
SP/uWkj//1pI//paSP/pWkj/5FpI/+VaSP/lWkj/5VpI/+RaSP/cWkj/ulpI/21aSP8XWkj/ALy3
/wDAu/8DwLv/ksC7/+fAu/9UwLv/AMC7/wAAAAAAWkj/AFpI/wNaSP9NWkj/vVpI/+9aSP/8Wkj/
/1pI//9aSP//Wkj//1pI//5aSP//Wkj//1pI//1aSP/CWkj/NlpI/wC6tP8AwLv/EMC7/ybAu/8G
wLv/AAAAAAAAAAAAAAAAAFpI/wBaSP8AWkj/DVpI/0BaSP/TWkj//1pI//xaSP/HWkj/d1pI/1Za
SP9sWkj/tlpI//daSP//Wkj/0lpI/yxaSP8AWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AABaSP8AWkj/AFpI/19aSP/4Wkj//VpI/5VaSP8WWkj/AFpI/wBaSP8AWkj/C1pI/3RaSP/zWkj/
/1pI/6ZaSP8IWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/DlpI/8BaSP//
Wkj/ulpI/xJaSP8AAAAAAAAAAAAAAAAAWkj/AFpI/wVaSP+UWkj//1pI/+9aSP86Wkj/AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/L1pI/+xaSP/+Wkj/X1pI/wBaSP8AAAAAAAAA
AAAAAAAAAAAAAFpI/wBaSP84Wkj/71pI//9aSP9yWkj/AFpI/wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAABaSP8AWkj/R1pI//laSP/yWkj/N1pI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAFpI/wBaSP8Z
Wkj/2VpI//9aSP+PWkj/AFpI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/Q1pI//da
SP/0Wkj/PlpI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAFpI/wBaSP8dWkj/3VpI//9aSP+MWkj/AFpI
/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/KFpI/+ZaSP//Wkj/dVpI/wBaSP8AAAAA
AAAAAAAAAAAAWkj/AFpI/wBaSP9LWkj/9lpI//9aSP9oWkj/AFpI/wAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAABaSP8AWkj/CFpI/7BaSP//Wkj/1VpI/ylaSP8AWkj/AAAAAABaSP8AWkj/AFpI/xRa
SP+2Wkj//1pI/+VaSP8tWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/AFpI
/0taSP/wWkj//1pI/8JaSP89Wkj/B1pI/wBaSP8DWkj/KlpI/6daSP/9Wkj//1pI/4xaSP8DWkj/
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWkj/AFpI/wRaSP98Wkj/91pI//9aSP/s
Wkj/tFpI/5VaSP+qWkj/4lpI//9aSP//Wkj/tlpI/xpaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAFpI/wBaSP8IWkj/bFpI/99aSP/+Wkj//1pI//9aSP//Wkj//1pI
//FaSP+bWkj/HVpI/wBaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAABaSP8AWkj/AlpI/y9aSP+HWkj/xVpI/9taSP/QWkj/oFpI/0xaSP8JWkj/AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/AAAARwAAAAcAH/+HAB/+BQAf/AAAH/wAAB/8AAAP
/4cAAAeHAAABhwCAAMcA4AB/APBwPwDg+D8A4fw/AOH8PwDh/D8A4fw/AOD4PwDwID8A8AB/APgA
/wD8Af8AKAAAACAAAABAAAAAAQAgAAAAAAAAEAAA1w0AANcNAAAAAAAAAAAAAFpI/3BaSP/JWkj/
0lpI/9FaSP/RWkj/0VpI/9FaSP/RWkj/0VpI/9FaSP/RWkj/0VpI/9FaSP/RWkj/0VpI/9FaSP/R
Wkj/0VpI/9FaSP/SWkj/oFpI/xlaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAWkj/71pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI
//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP/9Wkj/X1pI/wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAABaSP//Wkj//1pI//9aSP/+Wkj//lpI//5aSP/+Wkj//lpI//5aSP/+
Wkj//lpI//5aSP/+Wkj//lpI//5aSP/+Wkj//lpI//5aSP/+Wkj//1pI/+paSP9EWkj/AMC7/wDA
u/8lwLv/gsC7/2DAu/8IwLv/AAAAAAAAAAAAAAAAAFpI//9aSP//Wkj/81pI/3taSP9bWkj/XVpI
/11aSP9dWkj/XVpI/11aSP9dWkj/XVpI/11aSP9dWkj/XVpI/11aSP9dWkj/XVpI/11aSP9dWkj/
OlpI/wSFef8AwLv/AsC7/5zAu///wLv/8sC7/0PAu/8AAAAAAAAAAAAAAAAAWkj//1pI//9aSP/t
Wkj/L1pI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAMC7/wDAu/8HwLv/ucC7///Au//+wLv/XMC7/wAAAAAAAAAAAAAA
AABaSP//Wkj//1pI/+1aSP8vWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwLv/AMC7/wfAu/+5wLv//8C7//7Au/9c
wLv/AAAAAAAAAAAAAAAAAFpI//9aSP//Wkj/7VpI/y9aSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMC7/wDAu/8AwLv/CsC7/xbAu/8WwLv/HcC7
/7/Au///wLv//sC7/2rAu/8TwLv/F8C7/xPAu/8EWkj//1pI//9aSP/tWkj/L1pI/wAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwLv/AMC7/yHAu/+t
wLv/1sC7/9bAu//XwLv/9MC7///Au///wLv/5cC7/9XAu//WwLv/0MC7/4JaSP/+Wkj//1pI/+1a
SP8wWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AADAu/8AwLv/YsC7//7Au///wLv//8C7///Au///wLv//8C7///Au///wLv//8C7///Au///wLv/
9FpI//RaSP//Wkj/9VpI/0NaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAMC7/wDAu/81wLv/1sC7//TAu//0wLv/9MC7//zAu///wLv//8C7//jA
u//0wLv/9MC7//HAu/+vWkj/z1pI//9aSP//Wkj/hVpI/wBaSP8AAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwLv/AMC7/wHAu/8iwLv/PMC7/zzAu/9CwLv/
ysC7///Au//+wLv/gsC7/znAu/88wLv/NsC7/xFaSP+BWkj//VpI//9aSP/kWkj/QFpI/wBaSP8A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAwLv/AMC7/wfAu/+5wLv//8C7//7Au/9bwLv/AAAAAAAAAAAAAAAAAFpI/yRaSP/QWkj//1pI
//9aSP/aWkj/XlpI/xVaSP8FWkj/BFpI/wRaSP8EWkj/BFpI/wRaSP8EWkj/A1pI/wFaSP8AAAAA
AAAAAAAAAAAAAAAAAAAAAADAu/8AwLv/B8C7/7nAu///wLv//sC7/1zAu/8AAAAAAAAAAAAAAAAA
Wkj/AFpI/1RaSP/tWkj//1pI//9aSP/4Wkj/0VpI/7NaSP+uWkj/rlpI/65aSP+uWkj/rlpI/65a
SP+rWkj/mVpI/21aSP8xWkj/BlpI/wBaSP8AAAAAAMC7/wDAu/8EwLv/q8C7///Au//5wLv/T8C7
/wAAAAAAAAAAAAAAAABaSP8AWkj/A1pI/19aSP/kWkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj/
/1pI//9aSP//Wkj//1pI//9aSP//Wkj//lpI/+paSP+eWkj/LlpI/wBaSP8AwLv/AMC7/wDAu/9C
wLv/t8C7/5LAu/8TwLv/AAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/AVpI/zZaSP+iWkj/5VpI//pa
SP/+Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP/bWkj/UVpI
/wFaSP8AwLv/AMC7/wDAu/8IwLv/BMC7/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/
AFpI/wZaSP8nWkj/ZVpI/+daSP//Wkj//1pI//9aSP/iWkj/oVpI/3JaSP9tWkj/kVpI/9JaSP/8
Wkj//1pI//9aSP/nWkj/TFpI/wBaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAWkj/AFpI/wFaSP9+Wkj//FpI//9aSP/7Wkj/pVpI/yxaSP8DWkj/AFpI
/wBaSP8BWkj/GlpI/4BaSP/wWkj//1pI//9aSP/RWkj/IlpI/wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/L1pI/+RaSP//Wkj//1pI/51aSP8P
Wkj/AFpI/wAAAAAAAAAAAAAAAABaSP8AWkj/A1pI/21aSP/2Wkj//1pI//9aSP+FWkj/AFpI/wAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWkj/AFpI/wBaSP99Wkj//1pI
//9aSP/UWkj/IVpI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/CVpI/6ZaSP//Wkj/
/1pI/9VaSP8aWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8A
Wkj/CVpI/7paSP//Wkj//1pI/4JaSP8AWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpI/wBa
SP8AWkj/SlpI//ZaSP//Wkj/9lpI/0VaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAFpI/wBaSP8YWkj/2FpI//9aSP/5Wkj/S1pI/wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAFpI/wBaSP8eWkj/3lpI//9aSP//Wkj/Z1pI/wBaSP8AAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWkj/AFpI/x9aSP/gWkj//1pI//RaSP88Wkj/AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWkj/AFpI/xRaSP/SWkj//1pI//9aSP90Wkj/AFpI
/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/GVpI/9haSP//Wkj/
+VpI/01aSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/H1pI/99aSP//
Wkj//1pI/2laSP8AWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpI/wBa
SP8KWkj/vFpI//9aSP//Wkj/hVpI/wBaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWkj/AFpI
/wBaSP9NWkj/91pI//9aSP/3Wkj/R1pI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAWkj/AFpI/wBaSP+BWkj//1pI//9aSP/XWkj/JVpI/wBaSP8AAAAAAAAAAAAAAAAA
AAAAAAAAAABaSP8AWkj/C1pI/6taSP//Wkj//1pI/9daSP8cWkj/AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWkj/AFpI/zNaSP/nWkj//1pI//9aSP+kWkj/E1pI
/wBaSP8AAAAAAAAAAAAAAAAAWkj/AFpI/wVaSP90Wkj/+FpI//9aSP//Wkj/ilpI/wBaSP8AAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/AlpI/4haSP//
Wkj//1pI//xaSP+uWkj/NFpI/wVaSP8AWkj/AFpI/wJaSP8gWkj/iVpI//NaSP//Wkj//1pI/9Za
SP8mWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AABaSP8AWkj/F1pI/7RaSP//Wkj//1pI//9aSP/oWkj/q1pI/31aSP93Wkj/m1pI/9laSP/9Wkj/
/1pI//9aSP/rWkj/UlpI/wBaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAFpI/wBaSP8AWkj/IFpI/65aSP/8Wkj//1pI//9aSP//Wkj//1pI//9a
SP//Wkj//1pI//9aSP//Wkj/4VpI/1laSP8CWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpI/wBaSP8AWkj/EVpI/3RaSP/WWkj/
+1pI//9aSP//Wkj//1pI//9aSP/+Wkj/7VpI/6daSP80Wkj/AVpI/wAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABa
SP8AWkj/AVpI/yJaSP9pWkj/p1pI/8haSP/NWkj/ulpI/4haSP9AWkj/CVpI/wBaSP8AAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/AAAD/wAAAw8AAAIPD//+
Dw///g8P//AAD//gAA//4AAP/+AAD//gAAf//g8AAP4PgAAeD4AADw/AAAOf8AAD//gGAf/4H4H/
+D/A//B/4P/wf+D/8H/g//B/4P/wf+D/+D/A//gfgf/4BgH//AAD//4AA///AAf//4Af/ygAAAAw
AAAAYAAAAAEAIAAAAAAAACQAANcNAADXDQAAAAAAAAAAAABaSP8dWkj/glpI/7RaSP+1Wkj/tVpI
/7VaSP+1Wkj/tVpI/7VaSP+1Wkj/tVpI/7VaSP+1Wkj/tVpI/7VaSP+1Wkj/tVpI/7VaSP+1Wkj/
tVpI/7VaSP+1Wkj/tVpI/7VaSP+1Wkj/tVpI/7VaSP+1Wkj/tVpI/7VaSP+RWkj/J1pI/wBaSP8A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABa
SP+qWkj//FpI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI
//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj/
/1pI//9aSP//Wkj/slpI/w9aSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAABaSP/4Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9a
SP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI
//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj/7FpI/zFaSP8AAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP//Wkj//1pI//9aSP//
Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9a
SP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj/1lpI
/x5aSP8AAAAAAMC7/wDAu/8BwLv/KcC7/13Au/9BwLv/B8C7/wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAABaSP//Wkj//1pI//9aSP//Wkj/9FpI/+FaSP/hWkj/4VpI/+FaSP/hWkj/4VpI/+FaSP/h
Wkj/4VpI/+FaSP/hWkj/4VpI/+FaSP/hWkj/4VpI/+FaSP/hWkj/4VpI/+FaSP/hWkj/4VpI/+Fa
SP/hWkj/4VpI/+FaSP/KWkj/VFpI/wBaSP8AwLv/AMC7/wDAu/84wLv/18C7///Au//ywLv/dMC7
/wHAu/8AAAAAAAAAAAAAAAAAAAAAAAAAAABaSP//Wkj//1pI//9aSP//Wkj/r1pI/yNaSP8iWkj/
IlpI/yJaSP8iWkj/IlpI/yJaSP8iWkj/IlpI/yJaSP8iWkj/IlpI/yJaSP8iWkj/IlpI/yJaSP8i
Wkj/IlpI/yJaSP8iWkj/IlpI/yJaSP8iWkj/IlpI/yFaSP8TWkj/AVpI/wAAAAAAwLv/AMC7/wDA
u/+OwLv//8C7///Au///wLv/08C7/xfAu/8AAAAAAAAAAAAAAAAAAAAAAAAAAABaSP//Wkj//1pI
//9aSP//Wkj/olpI/wFaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAwLv/AMC7/wHAu/+hwLv//8C7///Au///wLv/4MC7/yHAu/8AAAAAAAAAAAAA
AAAAAAAAAAAAAABaSP//Wkj//1pI//9aSP//Wkj/o1pI/wJaSP8AAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwLv/AMC7/wHAu/+hwLv//8C7///Au///
wLv/4MC7/yHAu/8AAAAAAAAAAAAAAAAAAAAAAAAAAABaSP//Wkj//1pI//9aSP//Wkj/o1pI/wJa
SP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwLv/
AMC7/wHAu/+hwLv//8C7///Au///wLv/4MC7/yHAu/8AAAAAAAAAAAAAAAAAAAAAAAAAAABaSP//
Wkj//1pI//9aSP//Wkj/o1pI/wJaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAwLv/AMC7/wHAu/+gwLv//8C7///Au///wLv/4MC7/yDAu/8AAAAA
AAAAAAAAAAAAAAAAAAAAAABaSP//Wkj//1pI//9aSP//Wkj/o1pI/wJaSP8AAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAwLv/AMC7/wHAu/8pwLv/YMC7/2nAu/9pwLv/acC7/2nAu//IwLv//8C7
///Au///wLv/7cC7/3zAu/9nwLv/acC7/2nAu/9nwLv/QcC7/wlaSP//Wkj//1pI//9aSP//Wkj/
o1pI/wJaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwLv/AMC7/zfAu//XwLv//8C7///A
u///wLv//8C7///Au///wLv//8C7///Au///wLv//8C7///Au///wLv//8C7///Au///wLv/8MC7
/4RaSP//Wkj//1pI//9aSP//Wkj/o1pI/wJaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAu/8A
wLv/AMC7/43Au///wLv//8C7///Au///wLv//8C7///Au///wLv//8C7///Au///wLv//8C7///A
u///wLv//8C7///Au///wLv//8C7//BaSP/7Wkj//1pI//9aSP//Wkj/q1pI/wRaSP8AAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAADAu/8AwLv/AMC7/4bAu///wLv//8C7///Au///wLv//8C7///Au///
wLv//8C7///Au///wLv//8C7///Au///wLv//8C7///Au///wLv//8C7/+paSP/qWkj//1pI//9a
SP//Wkj/yFpI/xBaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwLv/AMC7/yvAu//FwLv/
+MC7//rAu//6wLv/+sC7//rAu//9wLv//8C7///Au///wLv//sC7//vAu//6wLv/+sC7//rAu//6
wLv/48C7/25aSP/CWkj//1pI//9aSP//Wkj/71pI/z1aSP8AWkj/AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAwLv/AMC7/wDAu/8awLv/RsC7/07Au/9OwLv/TsC7/0/Au/++wLv//8C7///Au///wLv/
6sC7/2TAu/9MwLv/TsC7/07Au/9MwLv/LMC7/wRaSP+AWkj//VpI//9aSP//Wkj//1pI/6BaSP8I
Wkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwLv/AMC7
/wHAu/+gwLv//8C7///Au///wLv/4MC7/yDAu/8AAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8yWkj/
4VpI//9aSP//Wkj//1pI//VaSP9rWkj/A1pI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAwLv/AMC7/wHAu/+hwLv//8C7///Au///wLv/4MC7/yHAu/8AAAAAAAAA
AAAAAAAAAAAAAAAAAABaSP8DWkj/jlpI//9aSP//Wkj//1pI//9aSP/vWkj/eVpI/xNaSP8AWkj/
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwLv/AMC7/wHAu/+hwLv//8C7///A
u///wLv/4MC7/yHAu/8AAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/JFpI/9FaSP//Wkj//1pI
//9aSP//Wkj/+lpI/8NaSP9wWkj/PlpI/yxaSP8qWkj/KlpI/ypaSP8qWkj/KlpI/ypaSP8qWkj/
KlpI/ypaSP8oWkj/IVpI/xNaSP8EWkj/AFpI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
wLv/AMC7/wHAu/+hwLv//8C7///Au///wLv/4MC7/yHAu/8AAAAAAAAAAAAAAAAAAAAAAAAAAABa
SP8AWkj/AFpI/0taSP/nWkj//1pI//9aSP//Wkj//1pI//9aSP/+Wkj/81pI/+paSP/oWkj/6FpI
/+haSP/oWkj/6FpI/+haSP/oWkj/6FpI/+haSP/nWkj/4VpI/85aSP+pWkj/blpI/ytaSP8EWkj/
AAAAAAAAAAAAAAAAAAAAAAAAAAAAwLv/AMC7/wDAu/+HwLv//8C7///Au///wLv/zcC7/xTAu/8A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWkj/AFpI/wFaSP9WWkj/4lpI//9aSP//Wkj//1pI//9a
SP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI
//9aSP//Wkj//lpI/+RaSP+XWkj/L1pI/wFaSP8AAAAAAAAAAAAAAAAAwLv/AMC7/wDAu/8rwLv/
xcC7//fAu//lwLv/YsC7/wDAu/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpI/wBaSP8B
Wkj/PlpI/75aSP/7Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9a
SP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj/4FpI/2taSP8KWkj/AAAA
AAAAAAAAAAAAAMC7/wDAu/8AwLv/GsC7/0PAu/8swLv/A8C7/wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/AFpI/xRaSP9oWkj/wlpI//BaSP/+Wkj//1pI//9aSP//
Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9a
SP//Wkj//1pI//daSP+PWkj/EFpI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpI/wBaSP8AWkj/
D1pI/zpaSP9lWkj/qFpI//taSP//Wkj//1pI//9aSP//Wkj//1pI//1aSP/kWkj/ulpI/5xaSP+W
Wkj/rFpI/9RaSP/3Wkj//1pI//9aSP//Wkj//1pI//9aSP/8Wkj/kVpI/wtaSP8AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpI/wBaSP8PWkj/rFpI//9aSP//Wkj//1pI//9aSP//Wkj/
2FpI/3VaSP8pWkj/CVpI/wFaSP8AWkj/BFpI/xhaSP9RWkj/tFpI//haSP//Wkj//1pI//9aSP//
Wkj/+FpI/3FaSP8BWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWkj/AFpI/wBaSP9yWkj/+1pI
//9aSP//Wkj//1pI//xaSP+rWkj/KFpI/wBaSP8AAAAAAAAAAAAAAAAAAAAAAFpI/wBaSP8AWkj/
DVpI/3FaSP/rWkj//1pI//9aSP//Wkj//1pI/+RaSP83Wkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAWkj/AFpI/yVaSP/aWkj//1pI//9aSP//Wkj//1pI/6NaSP8TWkj/AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAWkj/AFpI/wJaSP9dWkj/7lpI//9aSP//Wkj//1pI//9aSP+iWkj/
BlpI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/AFpI/3ZaSP//Wkj//1pI//9aSP//Wkj/x1pI/x5a
SP8AWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpI/wBaSP8DWkj/flpI
//1aSP//Wkj//1pI//9aSP/rWkj/N1pI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/D1pI/8JaSP//
Wkj//1pI//9aSP/2Wkj/VVpI/wBaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABaSP8AWkj/GFpI/8laSP//Wkj//1pI//9aSP//Wkj/gFpI/wBaSP8AAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAABaSP8AWkj/MVpI/+xaSP//Wkj//1pI//9aSP/EWkj/EVpI/wAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/AFpI/3JaSP//Wkj//1pI//9a
SP//Wkj/u1pI/wpaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/WFpI//xaSP//Wkj//1pI//9aSP+GWkj/
AFpI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
Wkj/AFpI/zRaSP/tWkj//1pI//9aSP//Wkj/3VpI/x9aSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpI/wBaSP8AWkj/dFpI
//9aSP//Wkj//1pI//1aSP9cWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAWkj/AFpI/xhaSP/VWkj//1pI//9aSP//Wkj/7lpI/zJaSP8A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAFpI/wBaSP8AWkj/gVpI//9aSP//Wkj//1pI//laSP9MWkj/AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWkj/AFpI/w9aSP/JWkj/
/1pI//9aSP//Wkj/81pI/ztaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpI/wBaSP8AWkj/fVpI//9aSP//Wkj//1pI//ta
SP9SWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAWkj/AFpI/xJaSP/OWkj//1pI//9aSP//Wkj/8VpI/zlaSP8AAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpI/wBaSP8A
Wkj/alpI//9aSP//Wkj//1pI//9aSP9xWkj/AFpI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWkj/AFpI/yRaSP/iWkj//1pI//9aSP//Wkj/6FpI
/ytaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/SFpI//daSP//Wkj//1pI//9aSP+oWkj/BVpI/wAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWkj/AFpI/1Na
SP/5Wkj//1pI//9aSP//Wkj/0lpI/xZaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/IVpI/95aSP//Wkj/
/1pI//9aSP/lWkj/MFpI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAABaSP8AWkj/BlpI/6RaSP//Wkj//1pI//9aSP//Wkj/pVpI/wNaSP8AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AABaSP8AWkj/BVpI/6ZaSP//Wkj//1pI//9aSP//Wkj/llpI/wZaSP8AAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpI/wBaSP8AWkj/SFpI/+5aSP//Wkj//1pI//9aSP/8
Wkj/YVpI/wBaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/AFpI/1FaSP/2Wkj//1pI//9aSP//Wkj/8lpI
/2BaSP8BWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWkj/AFpI/wBaSP8kWkj/
yFpI//9aSP//Wkj//1pI//9aSP/TWkj/HVpI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWkj/AFpI/w5a
SP+1Wkj//1pI//9aSP//Wkj//1pI/+haSP9eWkj/BVpI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AABaSP8AWkj/AFpI/ylaSP+7Wkj//1pI//9aSP//Wkj//1pI//1aSP90Wkj/AFpI/wAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAWkj/AFpI/wBaSP9AWkj/6FpI//9aSP//Wkj//1pI//9aSP/xWkj/j1pI/yda
SP8CWkj/AAAAAAAAAAAAWkj/AFpI/wBaSP8RWkj/XlpI/9NaSP//Wkj//1pI//9aSP//Wkj//1pI
/71aSP8WWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpI/wBaSP8BWkj/cFpI//daSP//
Wkj//1pI//9aSP//Wkj//lpI/99aSP+aWkj/X1pI/0BaSP86Wkj/T1pI/39aSP/FWkj/91pI//9a
SP//Wkj//1pI//9aSP//Wkj/3VpI/zlaSP8AWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAABaSP8AWkj/CFpI/4NaSP/3Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//VpI//VaSP/y
Wkj/+lpI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP/iWkj/TVpI/wBaSP8AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWkj/AFpI/wlaSP90Wkj/61pI//9aSP//Wkj/
/1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI/9BaSP9F
Wkj/AFpI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpI
/wBaSP8DWkj/R1pI/79aSP/6Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj/
/1pI//9aSP/vWkj/mlpI/yVaSP8AWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/AFpI/xNaSP9eWkj/tFpI/+daSP/7Wkj//1pI
//9aSP//Wkj//1pI//9aSP/3Wkj/21pI/5taSP9AWkj/B1pI/wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpI/wBa
SP8AWkj/C1pI/zVaSP9pWkj/k1pI/6taSP+xWkj/pVpI/4daSP9YWkj/JFpI/wRaSP8AWkj/AAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAA//8AAAAAAAB//wAAAAAAAH//AAAAAAAAcH8AAAAAAADwPwAA
AAAAAPA/AAAD////4D8AAAP////gPwAAA////+A/AAAD////4D8AAAP///gAAAAAA///+AAAAAAD
///4AAAAAAP///gAAAAAA///+AAAAAAD///8AAAAAAH////gPwAAAP///+A/AAAAf///4D8AAIAA
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
iP8BjCyhguhy23IAAAAASUVORK5CYII=')
	#endregion
	$MainForm.MainMenuStrip = $menustrip1
	$MainForm.Margin = '9, 8, 9, 8'
	$MainForm.Name = 'MainForm'
	$MainForm.StartPosition = 'CenterScreen'
	$MainForm.Text = 'Master User Creation Tool'
	$MainForm.add_Load($MainForm_Load)
	#
	# console
	#
	$console.BackColor = 'InactiveBorder'
	$console.Cursor = 'Default'
	$console.Font = 'Microsoft Sans Serif, 7.5pt'
	$console.Location = '26, 1064'
	$console.Margin = '6, 6, 6, 6'
	$console.Multiline = $True
	$console.Name = 'console'
	$console.ReadOnly = $True
	$console.ScrollBars = 'Both'
	$console.Size = '1014, 128'
	$console.TabIndex = 12
	$console.add_TextChanged($console_TextChanged)
	#
	# buttonExit
	#
	$buttonExit.Location = '610, 1204'
	$buttonExit.Margin = '6, 6, 6, 6'
	$buttonExit.Name = 'buttonExit'
	$buttonExit.Size = '162, 46'
	$buttonExit.TabIndex = 14
	$buttonExit.Text = '&Exit'
	$buttonExit.UseCompatibleTextRendering = $True
	$buttonExit.UseVisualStyleBackColor = $True
	$buttonExit.add_Click($buttonExit_Click)
	#
	# buttonCreateUser
	#
	$buttonCreateUser.Location = '157, 1204'
	$buttonCreateUser.Margin = '6, 6, 6, 6'
	$buttonCreateUser.Name = 'buttonCreateUser'
	$buttonCreateUser.Size = '212, 46'
	$buttonCreateUser.TabIndex = 13
	$buttonCreateUser.Text = '&Create User'
	$buttonCreateUser.UseCompatibleTextRendering = $True
	$buttonCreateUser.UseVisualStyleBackColor = $True
	$buttonCreateUser.add_Click($buttonCreateUser_Click)
	#
	# tabcontrol1
	#
	$tabcontrol1.Controls.Add($tabpageSettings)
	$tabcontrol1.Controls.Add($tabpage1)
	$tabcontrol1.Controls.Add($tabpageOffice365)
	$tabcontrol1.Location = '26, 54'
	$tabcontrol1.Margin = '6, 6, 6, 6'
	$tabcontrol1.Name = 'tabcontrol1'
	$tabcontrol1.SelectedIndex = 0
	$tabcontrol1.Size = '1014, 1006'
	$tabcontrol1.TabIndex = 3
	#
	# tabpageSettings
	#
	$tabpageSettings.Controls.Add($groupbox1)
	$tabpageSettings.Controls.Add($groupbox2FA)
	$tabpageSettings.Controls.Add($groupboxADUser)
	$tabpageSettings.Controls.Add($groupboxOffice365User)
	$tabpageSettings.Location = '8, 40'
	$tabpageSettings.Margin = '6, 6, 6, 6'
	$tabpageSettings.Name = 'tabpageSettings'
	$tabpageSettings.Size = '998, 958'
	$tabpageSettings.TabIndex = 3
	$tabpageSettings.Text = 'Settings'
	$tabpageSettings.UseVisualStyleBackColor = $True
	#
	# groupbox1
	#
	$groupbox1.Controls.Add($labelLink)
	$groupbox1.Controls.Add($label100)
	$groupbox1.Controls.Add($linklabelBradWyatt)
	$groupbox1.Controls.Add($linklabelGitHub)
	$groupbox1.Controls.Add($labelAuthor)
	$groupbox1.Controls.Add($labelVersion)
	$groupbox1.Location = '510, 160'
	$groupbox1.Margin = '6, 6, 6, 6'
	$groupbox1.Name = 'groupbox1'
	$groupbox1.Padding = '6, 6, 6, 6'
	$groupbox1.Size = '464, 184'
	$groupbox1.TabIndex = 6
	$groupbox1.TabStop = $False
	$groupbox1.Text = 'Information'
	$groupbox1.UseCompatibleTextRendering = $True
	#
	# labelLink
	#
	$labelLink.AutoSize = $True
	$labelLink.Location = '19, 135'
	$labelLink.Margin = '6, 0, 6, 0'
	$labelLink.Name = 'labelLink'
	$labelLink.Size = '56, 31'
	$labelLink.TabIndex = 7
	$labelLink.Text = 'Link:'
	$labelLink.UseCompatibleTextRendering = $True
	#
	# label100
	#
	$label100.AutoSize = $True
	$label100.Location = '129, 42'
	$label100.Margin = '6, 0, 6, 0'
	$label100.Name = 'label100'
	$label100.Size = '58, 31'
	$label100.TabIndex = 7
	$label100.Text = '1.0.0'
	$label100.UseCompatibleTextRendering = $True
	#
	# linklabelBradWyatt
	#
	$linklabelBradWyatt.Cursor = 'Hand'
	$linklabelBradWyatt.Location = '129, 88'
	$linklabelBradWyatt.Margin = '6, 0, 6, 0'
	$linklabelBradWyatt.Name = 'linklabelBradWyatt'
	$linklabelBradWyatt.Size = '146, 31'
	$linklabelBradWyatt.TabIndex = 4
	$linklabelBradWyatt.TabStop = $True
	$linklabelBradWyatt.Text = 'Brad Wyatt'
	$linklabelBradWyatt.UseCompatibleTextRendering = $True
	$linklabelBradWyatt.add_LinkClicked($linklabelBradWyatt_LinkClicked)
	#
	# linklabelGitHub
	#
	$linklabelGitHub.Cursor = 'Hand'
	$linklabelGitHub.Location = '129, 135'
	$linklabelGitHub.Margin = '13, 0, 13, 0'
	$linklabelGitHub.Name = 'linklabelGitHub'
	$linklabelGitHub.Size = '174, 31'
	$linklabelGitHub.TabIndex = 3
	$linklabelGitHub.TabStop = $True
	$linklabelGitHub.Text = 'GitHub'
	$linklabelGitHub.UseCompatibleTextRendering = $True
	$linklabelGitHub.add_LinkClicked($linklabelGitHub_LinkClicked)
	#
	# labelAuthor
	#
	$labelAuthor.AutoSize = $True
	$labelAuthor.Location = '19, 88'
	$labelAuthor.Margin = '13, 0, 13, 0'
	$labelAuthor.Name = 'labelAuthor'
	$labelAuthor.Size = '81, 31'
	$labelAuthor.TabIndex = 1
	$labelAuthor.Text = 'Author:'
	$labelAuthor.UseCompatibleTextRendering = $True
	#
	# labelVersion
	#
	$labelVersion.AutoSize = $True
	$labelVersion.Location = '19, 42'
	$labelVersion.Margin = '13, 0, 13, 0'
	$labelVersion.Name = 'labelVersion'
	$labelVersion.Size = '91, 31'
	$labelVersion.TabIndex = 0
	$labelVersion.Text = 'Version:'
	$labelVersion.UseCompatibleTextRendering = $True
	#
	# groupbox2FA
	#
	$groupbox2FA.Controls.Add($radiobuttonEnableMFA)
	$groupbox2FA.Controls.Add($radiobuttonDisableMFA)
	$groupbox2FA.Location = '15, 160'
	$groupbox2FA.Margin = '6, 6, 6, 6'
	$groupbox2FA.Name = 'groupbox2FA'
	$groupbox2FA.Padding = '6, 6, 6, 6'
	$groupbox2FA.Size = '483, 184'
	$groupbox2FA.TabIndex = 5
	$groupbox2FA.TabStop = $False
	$groupbox2FA.Text = 'Office 365 Multi-Factor Authentication'
	$tooltip1.SetToolTip($groupbox2FA, 'Specify if your Office 365 Global Admin requires MFA Login')
	$groupbox2FA.UseCompatibleTextRendering = $True
	#
	# radiobuttonEnableMFA
	#
	$radiobuttonEnableMFA.Location = '13, 98'
	$radiobuttonEnableMFA.Margin = '6, 6, 6, 6'
	$radiobuttonEnableMFA.Name = 'radiobuttonEnableMFA'
	$radiobuttonEnableMFA.Size = '225, 48'
	$radiobuttonEnableMFA.TabIndex = 1
	$radiobuttonEnableMFA.TabStop = $True
	$radiobuttonEnableMFA.Text = 'Enable MFA'
	$tooltip1.SetToolTip($radiobuttonEnableMFA, 'Specify if your Office 365 Global Admin requires MFA Login')
	$radiobuttonEnableMFA.UseCompatibleTextRendering = $True
	$radiobuttonEnableMFA.UseVisualStyleBackColor = $True
	#
	# radiobuttonDisableMFA
	#
	$radiobuttonDisableMFA.Location = '13, 38'
	$radiobuttonDisableMFA.Margin = '6, 6, 6, 6'
	$radiobuttonDisableMFA.Name = 'radiobuttonDisableMFA'
	$radiobuttonDisableMFA.Size = '225, 48'
	$radiobuttonDisableMFA.TabIndex = 0
	$radiobuttonDisableMFA.TabStop = $True
	$radiobuttonDisableMFA.Text = 'Disable MFA'
	$tooltip1.SetToolTip($radiobuttonDisableMFA, 'Specify if your Office 365 Global Admin requires MFA Login')
	$radiobuttonDisableMFA.UseCompatibleTextRendering = $True
	$radiobuttonDisableMFA.UseVisualStyleBackColor = $True
	#
	# groupboxADUser
	#
	$groupboxADUser.Controls.Add($checkboxCreateAnActiveDirect)
	$groupboxADUser.Location = '15, 34'
	$groupboxADUser.Margin = '6, 6, 6, 6'
	$groupboxADUser.Name = 'groupboxADUser'
	$groupboxADUser.Padding = '6, 6, 6, 6'
	$groupboxADUser.Size = '483, 114'
	$groupboxADUser.TabIndex = 4
	$groupboxADUser.TabStop = $False
	$groupboxADUser.Text = 'Active Directory'
	$groupboxADUser.UseCompatibleTextRendering = $True
	#
	# checkboxCreateAnActiveDirect
	#
	$checkboxCreateAnActiveDirect.Location = '13, 38'
	$checkboxCreateAnActiveDirect.Margin = '6, 6, 6, 6'
	$checkboxCreateAnActiveDirect.Name = 'checkboxCreateAnActiveDirect'
	$checkboxCreateAnActiveDirect.Size = '412, 48'
	$checkboxCreateAnActiveDirect.TabIndex = 0
	$checkboxCreateAnActiveDirect.Text = 'Create an Active Directory User'
	$tooltip1.SetToolTip($checkboxCreateAnActiveDirect, 'Create an Active Directory User')
	$checkboxCreateAnActiveDirect.UseCompatibleTextRendering = $True
	$checkboxCreateAnActiveDirect.UseVisualStyleBackColor = $True
	$checkboxCreateAnActiveDirect.add_CheckedChanged($checkboxCreateAnActiveDirect_CheckedChanged)
	#
	# groupboxOffice365User
	#
	$groupboxOffice365User.Controls.Add($checkboxconfigo365user)
	$groupboxOffice365User.Location = '510, 34'
	$groupboxOffice365User.Margin = '6, 6, 6, 6'
	$groupboxOffice365User.Name = 'groupboxOffice365User'
	$groupboxOffice365User.Padding = '6, 6, 6, 6'
	$groupboxOffice365User.Size = '464, 114'
	$groupboxOffice365User.TabIndex = 3
	$groupboxOffice365User.TabStop = $False
	$groupboxOffice365User.Text = 'Office 365'
	$tooltip1.SetToolTip($groupboxOffice365User, 'Configure an Office 365 User
')
	$groupboxOffice365User.UseCompatibleTextRendering = $True
	#
	# checkboxconfigo365user
	#
	$checkboxconfigo365user.Location = '13, 38'
	$checkboxconfigo365user.Margin = '6, 6, 6, 6'
	$checkboxconfigo365user.Name = 'checkboxconfigo365user'
	$checkboxconfigo365user.Size = '347, 48'
	$checkboxconfigo365user.TabIndex = 0
	$checkboxconfigo365user.Text = 'Create an Office 365 User'
	$tooltip1.SetToolTip($checkboxconfigo365user, 'Configure an Office 365 User
')
	$checkboxconfigo365user.UseCompatibleTextRendering = $True
	$checkboxconfigo365user.UseVisualStyleBackColor = $True
	$checkboxconfigo365user.add_CheckedChanged($checkboxconfigo365user_CheckedChanged)
	#
	# tabpage1
	#
	$tabpage1.Controls.Add($tabcontrolUserProperties)
	$tabpage1.Location = '8, 40'
	$tabpage1.Margin = '6, 6, 6, 6'
	$tabpage1.Name = 'tabpage1'
	$tabpage1.Padding = '6, 6, 6, 6'
	$tabpage1.Size = '998, 958'
	$tabpage1.TabIndex = 0
	$tabpage1.Text = 'Active Directory User'
	$tabpage1.UseVisualStyleBackColor = $True
	#
	# tabcontrolUserProperties
	#
	$tabcontrolUserProperties.Controls.Add($tabpageGeneral)
	$tabcontrolUserProperties.Controls.Add($tabpageAccount)
	$tabcontrolUserProperties.Controls.Add($tabpageAddress)
	$tabcontrolUserProperties.Controls.Add($tabpageGroups)
	$tabcontrolUserProperties.Controls.Add($tabpageOrganization)
	$tabcontrolUserProperties.Controls.Add($tabpageProfile)
	$tabcontrolUserProperties.Controls.Add($tabpageattributes)
	$tabcontrolUserProperties.Location = '13, 12'
	$tabcontrolUserProperties.Margin = '6, 6, 6, 6'
	$tabcontrolUserProperties.Name = 'tabcontrolUserProperties'
	$tabcontrolUserProperties.SelectedIndex = 0
	$tabcontrolUserProperties.Size = '979, 912'
	$tabcontrolUserProperties.TabIndex = 8
	#
	# tabpageGeneral
	#
	$tabpageGeneral.Controls.Add($panel1)
	$tabpageGeneral.Controls.Add($labelWebPage)
	$tabpageGeneral.Controls.Add($labelEMail)
	$tabpageGeneral.Controls.Add($labelTelephoneNumber)
	$tabpageGeneral.Controls.Add($textboxWebPage)
	$tabpageGeneral.Controls.Add($textboxEmail)
	$tabpageGeneral.Controls.Add($textboxTelephone)
	$tabpageGeneral.Controls.Add($labelOffice)
	$tabpageGeneral.Controls.Add($labelDescription)
	$tabpageGeneral.Controls.Add($textboxoffice)
	$tabpageGeneral.Controls.Add($textboxDescription)
	$tabpageGeneral.Controls.Add($labelFirstName)
	$tabpageGeneral.Controls.Add($textboxDisplayName)
	$tabpageGeneral.Controls.Add($textboxFirstName)
	$tabpageGeneral.Controls.Add($labelDisplayName)
	$tabpageGeneral.Controls.Add($textboxInitials)
	$tabpageGeneral.Controls.Add($labelLastName)
	$tabpageGeneral.Controls.Add($labelInitials)
	$tabpageGeneral.Controls.Add($textboxLastName)
	$tabpageGeneral.Location = '8, 40'
	$tabpageGeneral.Margin = '6, 6, 6, 6'
	$tabpageGeneral.Name = 'tabpageGeneral'
	$tabpageGeneral.Padding = '6, 6, 6, 6'
	$tabpageGeneral.Size = '963, 864'
	$tabpageGeneral.TabIndex = 0
	$tabpageGeneral.Text = 'General'
	$tabpageGeneral.UseVisualStyleBackColor = $True
	#
	# panel1
	#
	$panel1.Controls.Add($maskedtextboxpassword)
	$panel1.Controls.Add($buttonClear)
	$panel1.Controls.Add($labelpasswordconfirmmessage)
	$panel1.Controls.Add($textboxConfirmPassword)
	$panel1.Controls.Add($labelConfirmPassword)
	$panel1.Controls.Add($buttonGeneratePassword)
	$panel1.Controls.Add($textboxPasswordGen)
	$panel1.Controls.Add($labelPassword)
	$panel1.BackColor = 'MenuBar'
	$panel1.BorderStyle = 'Fixed3D'
	$panel1.Location = '13, 338'
	$panel1.Margin = '6, 6, 6, 6'
	$panel1.Name = 'panel1'
	$panel1.Size = '938, 284'
	$panel1.TabIndex = 6
	#
	# maskedtextboxpassword
	#
	$maskedtextboxpassword.Location = '364, 94'
	$maskedtextboxpassword.Margin = '13, 12, 13, 12'
	$maskedtextboxpassword.Name = 'maskedtextboxpassword'
	$maskedtextboxpassword.Size = '538, 32'
	$maskedtextboxpassword.TabIndex = 10
	$maskedtextboxpassword.UseSystemPasswordChar = $True
	$maskedtextboxpassword.add_TextChanged($maskedtextboxpassword_TextChanged)
	#
	# buttonClear
	#
	$buttonClear.Location = '813, 27'
	$buttonClear.Margin = '6, 6, 6, 6'
	$buttonClear.Name = 'buttonClear'
	$buttonClear.Size = '115, 46'
	$buttonClear.TabIndex = 9
	$buttonClear.Text = 'Clear'
	$buttonClear.UseCompatibleTextRendering = $True
	$buttonClear.UseVisualStyleBackColor = $True
	$buttonClear.add_Click($buttonClear_Click)
	#
	# labelpasswordconfirmmessage
	#
	$labelpasswordconfirmmessage.AutoSize = $True
	$labelpasswordconfirmmessage.Location = '310, 228'
	$labelpasswordconfirmmessage.Margin = '13, 0, 13, 0'
	$labelpasswordconfirmmessage.Name = 'labelpasswordconfirmmessage'
	$labelpasswordconfirmmessage.Size = '0, 29'
	$labelpasswordconfirmmessage.TabIndex = 25
	$labelpasswordconfirmmessage.UseCompatibleTextRendering = $True
	#
	# textboxConfirmPassword
	#
	$textboxConfirmPassword.Location = '364, 158'
	$textboxConfirmPassword.Margin = '13, 12, 13, 12'
	$textboxConfirmPassword.Name = 'textboxConfirmPassword'
	$textboxConfirmPassword.Size = '538, 32'
	$textboxConfirmPassword.TabIndex = 11
	$textboxConfirmPassword.add_TextChanged($textboxConfirmPassword_TextChanged)
	#
	# labelConfirmPassword
	#
	$labelConfirmPassword.AutoSize = $True
	$labelConfirmPassword.ForeColor = 'Firebrick'
	$labelConfirmPassword.Location = '11, 164'
	$labelConfirmPassword.Margin = '13, 0, 13, 0'
	$labelConfirmPassword.Name = 'labelConfirmPassword'
	$labelConfirmPassword.Size = '208, 31'
	$labelConfirmPassword.TabIndex = 23
	$labelConfirmPassword.Text = '*Confirm Password:'
	$labelConfirmPassword.UseCompatibleTextRendering = $True
	#
	# buttonGeneratePassword
	#
	$buttonGeneratePassword.Location = '11, 30'
	$buttonGeneratePassword.Margin = '6, 6, 6, 6'
	$buttonGeneratePassword.Name = 'buttonGeneratePassword'
	$buttonGeneratePassword.Size = '254, 46'
	$buttonGeneratePassword.TabIndex = 7
	$buttonGeneratePassword.Text = 'Generate Password'
	$buttonGeneratePassword.UseCompatibleTextRendering = $True
	$buttonGeneratePassword.UseVisualStyleBackColor = $True
	$buttonGeneratePassword.add_Click($buttonGeneratePassword_Click)
	#
	# textboxPasswordGen
	#
	$textboxPasswordGen.Location = '364, 34'
	$textboxPasswordGen.Margin = '13, 12, 13, 12'
	$textboxPasswordGen.Name = 'textboxPasswordGen'
	$textboxPasswordGen.ReadOnly = $True
	$textboxPasswordGen.Size = '430, 32'
	$textboxPasswordGen.TabIndex = 8
	#
	# labelPassword
	#
	$labelPassword.AutoSize = $True
	$labelPassword.ForeColor = 'Firebrick'
	$labelPassword.Location = '11, 102'
	$labelPassword.Margin = '13, 0, 13, 0'
	$labelPassword.Name = 'labelPassword'
	$labelPassword.Size = '122, 31'
	$labelPassword.TabIndex = 19
	$labelPassword.Text = '*Password:'
	$labelPassword.UseCompatibleTextRendering = $True
	#
	# labelWebPage
	#
	$labelWebPage.AutoSize = $True
	$labelWebPage.Location = '13, 796'
	$labelWebPage.Margin = '13, 0, 13, 0'
	$labelWebPage.Name = 'labelWebPage'
	$labelWebPage.Size = '117, 31'
	$labelWebPage.TabIndex = 17
	$labelWebPage.Text = 'Web page:'
	$labelWebPage.UseCompatibleTextRendering = $True
	#
	# labelEMail
	#
	$labelEMail.AutoSize = $True
	$labelEMail.Location = '13, 734'
	$labelEMail.Margin = '13, 0, 13, 0'
	$labelEMail.Name = 'labelEMail'
	$labelEMail.Size = '79, 31'
	$labelEMail.TabIndex = 16
	$labelEMail.Text = 'E-Mail:'
	$labelEMail.UseCompatibleTextRendering = $True
	#
	# labelTelephoneNumber
	#
	$labelTelephoneNumber.AutoSize = $True
	$labelTelephoneNumber.Location = '13, 672'
	$labelTelephoneNumber.Margin = '13, 0, 13, 0'
	$labelTelephoneNumber.Name = 'labelTelephoneNumber'
	$labelTelephoneNumber.Size = '208, 31'
	$labelTelephoneNumber.TabIndex = 15
	$labelTelephoneNumber.Text = 'Telephone Number:'
	$labelTelephoneNumber.UseCompatibleTextRendering = $True
	#
	# textboxWebPage
	#
	$textboxWebPage.Location = '327, 790'
	$textboxWebPage.Margin = '13, 12, 13, 12'
	$textboxWebPage.Name = 'textboxWebPage'
	$textboxWebPage.Size = '590, 32'
	$textboxWebPage.TabIndex = 14
	#
	# textboxEmail
	#
	$textboxEmail.Location = '327, 728'
	$textboxEmail.Margin = '13, 12, 13, 12'
	$textboxEmail.Name = 'textboxEmail'
	$textboxEmail.Size = '590, 32'
	$textboxEmail.TabIndex = 13
	#
	# textboxTelephone
	#
	$textboxTelephone.Location = '327, 666'
	$textboxTelephone.Margin = '13, 12, 13, 12'
	$textboxTelephone.Name = 'textboxTelephone'
	$textboxTelephone.Size = '590, 32'
	$textboxTelephone.TabIndex = 12
	#
	# labelOffice
	#
	$labelOffice.AutoSize = $True
	$labelOffice.Location = '15, 273'
	$labelOffice.Margin = '13, 0, 13, 0'
	$labelOffice.Name = 'labelOffice'
	$labelOffice.Size = '73, 31'
	$labelOffice.TabIndex = 11
	$labelOffice.Text = 'Office:'
	$labelOffice.UseCompatibleTextRendering = $True
	#
	# labelDescription
	#
	$labelDescription.AutoSize = $True
	$labelDescription.Location = '13, 210'
	$labelDescription.Margin = '13, 0, 13, 0'
	$labelDescription.Name = 'labelDescription'
	$labelDescription.Size = '128, 31'
	$labelDescription.TabIndex = 10
	$labelDescription.Text = 'Description:'
	$labelDescription.UseCompatibleTextRendering = $True
	#
	# textboxoffice
	#
	$textboxoffice.Location = '299, 270'
	$textboxoffice.Margin = '13, 12, 13, 12'
	$textboxoffice.Name = 'textboxoffice'
	$textboxoffice.Size = '618, 32'
	$textboxoffice.TabIndex = 5
	#
	# textboxDescription
	#
	$textboxDescription.Location = '299, 207'
	$textboxDescription.Margin = '13, 12, 13, 12'
	$textboxDescription.Name = 'textboxDescription'
	$textboxDescription.Size = '618, 32'
	$textboxDescription.TabIndex = 4
	#
	# labelFirstName
	#
	$labelFirstName.AutoSize = $True
	$labelFirstName.Location = '15, 24'
	$labelFirstName.Margin = '13, 0, 13, 0'
	$labelFirstName.Name = 'labelFirstName'
	$labelFirstName.Size = '125, 31'
	$labelFirstName.TabIndex = 1
	$labelFirstName.Text = 'First Name:'
	$labelFirstName.UseCompatibleTextRendering = $True
	#
	# textboxDisplayName
	#
	$textboxDisplayName.Location = '299, 143'
	$textboxDisplayName.Margin = '13, 12, 13, 12'
	$textboxDisplayName.Name = 'textboxDisplayName'
	$textboxDisplayName.Size = '618, 32'
	$textboxDisplayName.TabIndex = 3
	$textboxDisplayName.add_TextChanged($textboxDisplayName_TextChanged)
	#
	# textboxFirstName
	#
	$textboxFirstName.Location = '299, 18'
	$textboxFirstName.Margin = '13, 12, 13, 12'
	$textboxFirstName.Name = 'textboxFirstName'
	$textboxFirstName.Size = '368, 32'
	$textboxFirstName.TabIndex = 0
	$textboxFirstName.add_TextChanged($textboxFirstName_TextChanged)
	#
	# labelDisplayName
	#
	$labelDisplayName.AutoSize = $True
	$labelDisplayName.ForeColor = 'Firebrick'
	$labelDisplayName.Location = '13, 146'
	$labelDisplayName.Margin = '13, 0, 13, 0'
	$labelDisplayName.Name = 'labelDisplayName'
	$labelDisplayName.Size = '164, 31'
	$labelDisplayName.TabIndex = 6
	$labelDisplayName.Text = '*Display Name:'
	$labelDisplayName.UseCompatibleTextRendering = $True
	#
	# textboxInitials
	#
	$textboxInitials.Location = '798, 18'
	$textboxInitials.Margin = '13, 12, 13, 12'
	$textboxInitials.MaxLength = 6
	$textboxInitials.Name = 'textboxInitials'
	$textboxInitials.Size = '119, 32'
	$textboxInitials.TabIndex = 1
	$textboxInitials.add_TextChanged($textboxInitials_TextChanged)
	#
	# labelLastName
	#
	$labelLastName.AutoSize = $True
	$labelLastName.Location = '13, 86'
	$labelLastName.Margin = '13, 0, 13, 0'
	$labelLastName.Name = 'labelLastName'
	$labelLastName.Size = '123, 31'
	$labelLastName.TabIndex = 5
	$labelLastName.Text = 'Last Name:'
	$labelLastName.UseCompatibleTextRendering = $True
	#
	# labelInitials
	#
	$labelInitials.AutoSize = $True
	$labelInitials.Location = '693, 21'
	$labelInitials.Margin = '13, 0, 13, 0'
	$labelInitials.Name = 'labelInitials'
	$labelInitials.Size = '79, 31'
	$labelInitials.TabIndex = 3
	$labelInitials.Text = 'Initials:'
	$labelInitials.UseCompatibleTextRendering = $True
	#
	# textboxLastName
	#
	$textboxLastName.Location = '299, 80'
	$textboxLastName.Margin = '13, 12, 13, 12'
	$textboxLastName.Name = 'textboxLastName'
	$textboxLastName.Size = '618, 32'
	$textboxLastName.TabIndex = 2
	$textboxLastName.add_TextChanged($textboxLastName_TextChanged)
	#
	# tabpageAccount
	#
	$tabpageAccount.Controls.Add($labelPlaceUserInFollowing)
	$tabpageAccount.Controls.Add($comboboxOUTree)
	$tabpageAccount.Controls.Add($panel2)
	$tabpageAccount.Controls.Add($textboxSamAccount)
	$tabpageAccount.Controls.Add($textboxUPNDomain)
	$tabpageAccount.Controls.Add($labelUserLogonNamepreWind)
	$tabpageAccount.Controls.Add($comboboxDomains)
	$tabpageAccount.Controls.Add($textboxUserLogonName)
	$tabpageAccount.Controls.Add($labelUserLogonNameUPN)
	$tabpageAccount.Location = '8, 40'
	$tabpageAccount.Margin = '6, 6, 6, 6'
	$tabpageAccount.Name = 'tabpageAccount'
	$tabpageAccount.Size = '963, 864'
	$tabpageAccount.TabIndex = 2
	$tabpageAccount.Text = 'Account'
	$tabpageAccount.UseVisualStyleBackColor = $True
	#
	# labelPlaceUserInFollowing
	#
	$labelPlaceUserInFollowing.AutoSize = $True
	$labelPlaceUserInFollowing.Location = '28, 249'
	$labelPlaceUserInFollowing.Margin = '6, 0, 6, 0'
	$labelPlaceUserInFollowing.Name = 'labelPlaceUserInFollowing'
	$labelPlaceUserInFollowing.Size = '450, 31'
	$labelPlaceUserInFollowing.TabIndex = 7
	$labelPlaceUserInFollowing.Text = 'Place User in Following Organizational Unit:'
	$labelPlaceUserInFollowing.UseCompatibleTextRendering = $True
	#
	# comboboxOUTree
	#
	$comboboxOUTree.FormattingEnabled = $True
	$comboboxOUTree.Location = '28, 286'
	$comboboxOUTree.Margin = '6, 6, 6, 6'
	$comboboxOUTree.Name = 'comboboxOUTree'
	$comboboxOUTree.Size = '900, 34'
	$comboboxOUTree.Sorted = $True
	$comboboxOUTree.TabIndex = 6
	#
	# panel2
	#
	$panel2.Controls.Add($checkboxAccountIsDisabled)
	$panel2.Controls.Add($checkboxPasswordNeverExpires)
	$panel2.Controls.Add($checkboxUserCannotChangePass)
	$panel2.Controls.Add($checkboxUserMustChangePasswo)
	$panel2.BackColor = 'MenuBar'
	$panel2.BorderStyle = 'Fixed3D'
	$panel2.Location = '18, 383'
	$panel2.Margin = '6, 6, 6, 6'
	$panel2.Name = 'panel2'
	$panel2.Size = '930, 271'
	$panel2.TabIndex = 5
	#
	# checkboxAccountIsDisabled
	#
	$checkboxAccountIsDisabled.Location = '22, 196'
	$checkboxAccountIsDisabled.Margin = '6, 6, 6, 6'
	$checkboxAccountIsDisabled.Name = 'checkboxAccountIsDisabled'
	$checkboxAccountIsDisabled.Size = '886, 48'
	$checkboxAccountIsDisabled.TabIndex = 9
	$checkboxAccountIsDisabled.Text = 'Account is disabled'
	$checkboxAccountIsDisabled.UseCompatibleTextRendering = $True
	$checkboxAccountIsDisabled.UseVisualStyleBackColor = $True
	#
	# checkboxPasswordNeverExpires
	#
	$checkboxPasswordNeverExpires.Location = '22, 136'
	$checkboxPasswordNeverExpires.Margin = '6, 6, 6, 6'
	$checkboxPasswordNeverExpires.Name = 'checkboxPasswordNeverExpires'
	$checkboxPasswordNeverExpires.Size = '886, 48'
	$checkboxPasswordNeverExpires.TabIndex = 8
	$checkboxPasswordNeverExpires.Text = 'Password never expires'
	$checkboxPasswordNeverExpires.UseCompatibleTextRendering = $True
	$checkboxPasswordNeverExpires.UseVisualStyleBackColor = $True
	#
	# checkboxUserCannotChangePass
	#
	$checkboxUserCannotChangePass.Location = '22, 76'
	$checkboxUserCannotChangePass.Margin = '6, 6, 6, 6'
	$checkboxUserCannotChangePass.Name = 'checkboxUserCannotChangePass'
	$checkboxUserCannotChangePass.Size = '886, 48'
	$checkboxUserCannotChangePass.TabIndex = 7
	$checkboxUserCannotChangePass.Text = 'User cannot change password'
	$checkboxUserCannotChangePass.UseCompatibleTextRendering = $True
	$checkboxUserCannotChangePass.UseVisualStyleBackColor = $True
	#
	# checkboxUserMustChangePasswo
	#
	$checkboxUserMustChangePasswo.Location = '22, 16'
	$checkboxUserMustChangePasswo.Margin = '6, 6, 6, 6'
	$checkboxUserMustChangePasswo.Name = 'checkboxUserMustChangePasswo'
	$checkboxUserMustChangePasswo.Size = '886, 48'
	$checkboxUserMustChangePasswo.TabIndex = 6
	$checkboxUserMustChangePasswo.Text = 'User must change password at next logon'
	$checkboxUserMustChangePasswo.UseCompatibleTextRendering = $True
	$checkboxUserMustChangePasswo.UseVisualStyleBackColor = $True
	#
	# textboxSamAccount
	#
	$textboxSamAccount.Location = '507, 174'
	$textboxSamAccount.Margin = '13, 12, 13, 12'
	$textboxSamAccount.MaxLength = 20
	$textboxSamAccount.Name = 'textboxSamAccount'
	$textboxSamAccount.Size = '416, 32'
	$textboxSamAccount.TabIndex = 4
	#
	# textboxUPNDomain
	#
	$textboxUPNDomain.BackColor = 'Control'
	$textboxUPNDomain.Cursor = 'Arrow'
	$textboxUPNDomain.Location = '28, 174'
	$textboxUPNDomain.Margin = '13, 12, 13, 12'
	$textboxUPNDomain.Name = 'textboxUPNDomain'
	$textboxUPNDomain.ReadOnly = $True
	$textboxUPNDomain.Size = '433, 32'
	$textboxUPNDomain.TabIndex = 3
	#
	# labelUserLogonNamepreWind
	#
	$labelUserLogonNamepreWind.AutoSize = $True
	$labelUserLogonNamepreWind.ForeColor = 'Black'
	$labelUserLogonNamepreWind.Location = '28, 134'
	$labelUserLogonNamepreWind.Margin = '13, 0, 13, 0'
	$labelUserLogonNamepreWind.Name = 'labelUserLogonNamepreWind'
	$labelUserLogonNamepreWind.Size = '396, 31'
	$labelUserLogonNamepreWind.TabIndex = 3
	$labelUserLogonNamepreWind.Text = 'User logon name (pre-Windows 2000):'
	$labelUserLogonNamepreWind.UseCompatibleTextRendering = $True
	#
	# comboboxDomains
	#
	$comboboxDomains.DropDownStyle = 'DropDownList'
	$comboboxDomains.FormattingEnabled = $True
	$comboboxDomains.Location = '507, 60'
	$comboboxDomains.Margin = '6, 6, 6, 6'
	$comboboxDomains.Name = 'comboboxDomains'
	$comboboxDomains.Size = '416, 34'
	$comboboxDomains.TabIndex = 2
	#
	# textboxUserLogonName
	#
	$textboxUserLogonName.Location = '28, 60'
	$textboxUserLogonName.Margin = '13, 12, 13, 12'
	$textboxUserLogonName.Name = 'textboxUserLogonName'
	$textboxUserLogonName.Size = '433, 32'
	$textboxUserLogonName.TabIndex = 1
	$textboxUserLogonName.add_TextChanged($textboxUserLogonName_TextChanged)
	#
	# labelUserLogonNameUPN
	#
	$labelUserLogonNameUPN.AutoSize = $True
	$labelUserLogonNameUPN.ForeColor = 'Firebrick'
	$labelUserLogonNameUPN.Location = '28, 18'
	$labelUserLogonNameUPN.Margin = '13, 0, 13, 0'
	$labelUserLogonNameUPN.Name = 'labelUserLogonNameUPN'
	$labelUserLogonNameUPN.Size = '264, 31'
	$labelUserLogonNameUPN.TabIndex = 0
	$labelUserLogonNameUPN.Text = '*User logon name: (UPN)'
	$labelUserLogonNameUPN.UseCompatibleTextRendering = $True
	#
	# tabpageAddress
	#
	$tabpageAddress.Controls.Add($label1)
	$tabpageAddress.Controls.Add($labelZipPostalCode)
	$tabpageAddress.Controls.Add($textboxzipcode)
	$tabpageAddress.Controls.Add($textboxstate)
	$tabpageAddress.Controls.Add($labelStateprovince)
	$tabpageAddress.Controls.Add($labelcity)
	$tabpageAddress.Controls.Add($textboxcity)
	$tabpageAddress.Controls.Add($textboxPOBox)
	$tabpageAddress.Controls.Add($labelPOBox)
	$tabpageAddress.Controls.Add($textboxStreet)
	$tabpageAddress.Controls.Add($labelStreet)
	$tabpageAddress.Location = '8, 40'
	$tabpageAddress.Margin = '6, 6, 6, 6'
	$tabpageAddress.Name = 'tabpageAddress'
	$tabpageAddress.Padding = '6, 6, 6, 6'
	$tabpageAddress.Size = '963, 864'
	$tabpageAddress.TabIndex = 1
	$tabpageAddress.Text = 'Address'
	$tabpageAddress.UseVisualStyleBackColor = $True
	#
	# label1
	#
	$label1.AutoSize = $True
	$label1.Location = '-136, 572'
	$label1.Margin = '13, 0, 13, 0'
	$label1.Name = 'label1'
	$label1.Size = '69, 31'
	$label1.TabIndex = 10
	$label1.Text = 'label1'
	$label1.UseCompatibleTextRendering = $True
	#
	# labelZipPostalCode
	#
	$labelZipPostalCode.AutoSize = $True
	$labelZipPostalCode.Location = '24, 500'
	$labelZipPostalCode.Margin = '13, 0, 13, 0'
	$labelZipPostalCode.Name = 'labelZipPostalCode'
	$labelZipPostalCode.Size = '175, 31'
	$labelZipPostalCode.TabIndex = 9
	$labelZipPostalCode.Text = 'Zip/Postal Code:'
	$labelZipPostalCode.UseCompatibleTextRendering = $True
	#
	# textboxzipcode
	#
	$textboxzipcode.Location = '323, 497'
	$textboxzipcode.Margin = '13, 12, 13, 12'
	$textboxzipcode.Name = 'textboxzipcode'
	$textboxzipcode.Size = '602, 32'
	$textboxzipcode.TabIndex = 8
	#
	# textboxstate
	#
	$textboxstate.Location = '323, 418'
	$textboxstate.Margin = '13, 12, 13, 12'
	$textboxstate.Name = 'textboxstate'
	$textboxstate.Size = '602, 32'
	$textboxstate.TabIndex = 7
	#
	# labelStateprovince
	#
	$labelStateprovince.AutoSize = $True
	$labelStateprovince.Location = '24, 424'
	$labelStateprovince.Margin = '13, 0, 13, 0'
	$labelStateprovince.Name = 'labelStateprovince'
	$labelStateprovince.Size = '159, 31'
	$labelStateprovince.TabIndex = 6
	$labelStateprovince.Text = 'State/province:'
	$labelStateprovince.UseCompatibleTextRendering = $True
	#
	# labelcity
	#
	$labelcity.AutoSize = $True
	$labelcity.Location = '24, 348'
	$labelcity.Margin = '13, 0, 13, 0'
	$labelcity.Name = 'labelcity'
	$labelcity.Size = '53, 31'
	$labelcity.TabIndex = 5
	$labelcity.Text = 'City:'
	$labelcity.UseCompatibleTextRendering = $True
	#
	# textboxcity
	#
	$textboxcity.Location = '323, 345'
	$textboxcity.Margin = '13, 12, 13, 12'
	$textboxcity.Name = 'textboxcity'
	$textboxcity.Size = '602, 32'
	$textboxcity.TabIndex = 4
	#
	# textboxPOBox
	#
	$textboxPOBox.Location = '323, 272'
	$textboxPOBox.Margin = '13, 12, 13, 12'
	$textboxPOBox.MaxLength = 40
	$textboxPOBox.Name = 'textboxPOBox'
	$textboxPOBox.Size = '602, 32'
	$textboxPOBox.TabIndex = 3
	#
	# labelPOBox
	#
	$labelPOBox.AutoSize = $True
	$labelPOBox.Location = '24, 272'
	$labelPOBox.Margin = '13, 0, 13, 0'
	$labelPOBox.Name = 'labelPOBox'
	$labelPOBox.Size = '105, 31'
	$labelPOBox.TabIndex = 2
	$labelPOBox.Text = 'P.O. Box:'
	$labelPOBox.UseCompatibleTextRendering = $True
	#
	# textboxStreet
	#
	$textboxStreet.Location = '323, 30'
	$textboxStreet.Margin = '13, 12, 13, 12'
	$textboxStreet.Multiline = $True
	$textboxStreet.Name = 'textboxStreet'
	$textboxStreet.ScrollBars = 'Vertical'
	$textboxStreet.Size = '602, 212'
	$textboxStreet.TabIndex = 1
	#
	# labelStreet
	#
	$labelStreet.AutoSize = $True
	$labelStreet.Location = '24, 30'
	$labelStreet.Margin = '13, 0, 13, 0'
	$labelStreet.Name = 'labelStreet'
	$labelStreet.Size = '75, 31'
	$labelStreet.TabIndex = 0
	$labelStreet.Text = 'Street:'
	$labelStreet.UseCompatibleTextRendering = $True
	#
	# tabpageGroups
	#
	$tabpageGroups.Controls.Add($labelPleaseCheckAllGroups)
	$tabpageGroups.Controls.Add($checkedlistboxGroups)
	$tabpageGroups.Location = '8, 40'
	$tabpageGroups.Margin = '6, 6, 6, 6'
	$tabpageGroups.Name = 'tabpageGroups'
	$tabpageGroups.Size = '963, 864'
	$tabpageGroups.TabIndex = 4
	$tabpageGroups.Text = 'Groups'
	$tabpageGroups.UseVisualStyleBackColor = $True
	#
	# labelPleaseCheckAllGroups
	#
	$labelPleaseCheckAllGroups.AutoSize = $True
	$labelPleaseCheckAllGroups.Location = '15, 38'
	$labelPleaseCheckAllGroups.Margin = '13, 0, 13, 0'
	$labelPleaseCheckAllGroups.Name = 'labelPleaseCheckAllGroups'
	$labelPleaseCheckAllGroups.Size = '632, 31'
	$labelPleaseCheckAllGroups.TabIndex = 1
	$labelPleaseCheckAllGroups.Text = 'Please check all groups you want your user to be a member of'
	$labelPleaseCheckAllGroups.UseCompatibleTextRendering = $True
	#
	# checkedlistboxGroups
	#
	$checkedlistboxGroups.CheckOnClick = $True
	$checkedlistboxGroups.FormattingEnabled = $True
	$checkedlistboxGroups.Location = '13, 77'
	$checkedlistboxGroups.Margin = '13, 12, 13, 12'
	$checkedlistboxGroups.Name = 'checkedlistboxGroups'
	$checkedlistboxGroups.Size = '937, 733'
	$checkedlistboxGroups.Sorted = $True
	$checkedlistboxGroups.TabIndex = 0
	$checkedlistboxGroups.UseCompatibleTextRendering = $True
	#
	# tabpageOrganization
	#
	$tabpageOrganization.Controls.Add($textboxCompany)
	$tabpageOrganization.Controls.Add($labelCompany)
	$tabpageOrganization.Controls.Add($textboxDepartment)
	$tabpageOrganization.Controls.Add($labelDepartment)
	$tabpageOrganization.Controls.Add($textboxjobtitle)
	$tabpageOrganization.Controls.Add($labelJobTitle)
	$tabpageOrganization.Location = '8, 40'
	$tabpageOrganization.Margin = '6, 6, 6, 6'
	$tabpageOrganization.Name = 'tabpageOrganization'
	$tabpageOrganization.Size = '963, 864'
	$tabpageOrganization.TabIndex = 5
	$tabpageOrganization.Text = 'Organization'
	$tabpageOrganization.UseVisualStyleBackColor = $True
	#
	# textboxCompany
	#
	$textboxCompany.Location = '303, 192'
	$textboxCompany.Margin = '13, 12, 13, 12'
	$textboxCompany.MaxLength = 64
	$textboxCompany.Name = 'textboxCompany'
	$textboxCompany.Size = '609, 32'
	$textboxCompany.TabIndex = 5
	#
	# labelCompany
	#
	$labelCompany.AutoSize = $True
	$labelCompany.Location = '30, 198'
	$labelCompany.Margin = '13, 0, 13, 0'
	$labelCompany.Name = 'labelCompany'
	$labelCompany.Size = '111, 31'
	$labelCompany.TabIndex = 4
	$labelCompany.Text = 'Company:'
	$labelCompany.UseCompatibleTextRendering = $True
	#
	# textboxDepartment
	#
	$textboxDepartment.Location = '303, 110'
	$textboxDepartment.Margin = '13, 12, 13, 12'
	$textboxDepartment.Name = 'textboxDepartment'
	$textboxDepartment.Size = '609, 32'
	$textboxDepartment.TabIndex = 3
	#
	# labelDepartment
	#
	$labelDepartment.AutoSize = $True
	$labelDepartment.Location = '30, 116'
	$labelDepartment.Margin = '13, 0, 13, 0'
	$labelDepartment.Name = 'labelDepartment'
	$labelDepartment.Size = '132, 31'
	$labelDepartment.TabIndex = 2
	$labelDepartment.Text = 'Department:'
	$labelDepartment.UseCompatibleTextRendering = $True
	#
	# textboxjobtitle
	#
	$textboxjobtitle.Location = '303, 34'
	$textboxjobtitle.Margin = '13, 12, 13, 12'
	$textboxjobtitle.Name = 'textboxjobtitle'
	$textboxjobtitle.Size = '609, 32'
	$textboxjobtitle.TabIndex = 1
	#
	# labelJobTitle
	#
	$labelJobTitle.AutoSize = $True
	$labelJobTitle.Location = '30, 40'
	$labelJobTitle.Margin = '13, 0, 13, 0'
	$labelJobTitle.Name = 'labelJobTitle'
	$labelJobTitle.Size = '100, 31'
	$labelJobTitle.TabIndex = 0
	$labelJobTitle.Text = 'Job Title:'
	$labelJobTitle.UseCompatibleTextRendering = $True
	#
	# tabpageProfile
	#
	$tabpageProfile.Controls.Add($groupbox2)
	$tabpageProfile.Controls.Add($groupboxuserprofile)
	$tabpageProfile.Location = '8, 40'
	$tabpageProfile.Margin = '6, 6, 6, 6'
	$tabpageProfile.Name = 'tabpageProfile'
	$tabpageProfile.Size = '963, 864'
	$tabpageProfile.TabIndex = 3
	$tabpageProfile.Text = 'Profile'
	$tabpageProfile.UseVisualStyleBackColor = $True
	#
	# groupbox2
	#
	$groupbox2.Controls.Add($labelDriveLetter)
	$groupbox2.Controls.Add($textboxhomedirectory)
	$groupbox2.Controls.Add($labelTo)
	$groupbox2.Controls.Add($comboboxDriveLetter)
	$groupbox2.Location = '17, 242'
	$groupbox2.Margin = '6, 6, 6, 6'
	$groupbox2.Name = 'groupbox2'
	$groupbox2.Padding = '6, 6, 6, 6'
	$groupbox2.Size = '910, 134'
	$groupbox2.TabIndex = 1
	$groupbox2.TabStop = $False
	$groupbox2.Text = 'Home Folder:'
	$groupbox2.UseCompatibleTextRendering = $True
	#
	# labelDriveLetter
	#
	$labelDriveLetter.AutoSize = $True
	$labelDriveLetter.Location = '15, 64'
	$labelDriveLetter.Margin = '13, 0, 13, 0'
	$labelDriveLetter.Name = 'labelDriveLetter'
	$labelDriveLetter.Size = '131, 31'
	$labelDriveLetter.TabIndex = 6
	$labelDriveLetter.Text = 'Drive Letter:'
	$labelDriveLetter.UseCompatibleTextRendering = $True
	#
	# textboxhomedirectory
	#
	$textboxhomedirectory.Location = '392, 64'
	$textboxhomedirectory.Margin = '13, 12, 13, 12'
	$textboxhomedirectory.Name = 'textboxhomedirectory'
	$textboxhomedirectory.Size = '482, 32'
	$textboxhomedirectory.TabIndex = 5
	#
	# labelTo
	#
	$labelTo.AutoSize = $True
	$labelTo.Location = '325, 67'
	$labelTo.Margin = '13, 0, 13, 0'
	$labelTo.Name = 'labelTo'
	$labelTo.Size = '41, 31'
	$labelTo.TabIndex = 3
	$labelTo.Text = 'To:'
	$labelTo.UseCompatibleTextRendering = $True
	#
	# comboboxDriveLetter
	#
	$comboboxDriveLetter.DropDownStyle = 'DropDownList'
	$comboboxDriveLetter.FormattingEnabled = $True
	[void]$comboboxDriveLetter.Items.Add('')
	[void]$comboboxDriveLetter.Items.Add('D:')
	[void]$comboboxDriveLetter.Items.Add('E:')
	[void]$comboboxDriveLetter.Items.Add('F:')
	[void]$comboboxDriveLetter.Items.Add('G:')
	[void]$comboboxDriveLetter.Items.Add('H:')
	[void]$comboboxDriveLetter.Items.Add('I:')
	[void]$comboboxDriveLetter.Items.Add('J:')
	[void]$comboboxDriveLetter.Items.Add('K:')
	[void]$comboboxDriveLetter.Items.Add('L:')
	[void]$comboboxDriveLetter.Items.Add('M:')
	[void]$comboboxDriveLetter.Items.Add('N:')
	[void]$comboboxDriveLetter.Items.Add('O:')
	[void]$comboboxDriveLetter.Items.Add('P:')
	[void]$comboboxDriveLetter.Items.Add('Q:')
	[void]$comboboxDriveLetter.Items.Add('R:')
	[void]$comboboxDriveLetter.Items.Add('S:')
	[void]$comboboxDriveLetter.Items.Add('T:')
	[void]$comboboxDriveLetter.Items.Add('U:')
	[void]$comboboxDriveLetter.Items.Add('V:')
	[void]$comboboxDriveLetter.Items.Add('W:')
	[void]$comboboxDriveLetter.Items.Add('X:')
	[void]$comboboxDriveLetter.Items.Add('Y:')
	[void]$comboboxDriveLetter.Items.Add('Z:')
	$comboboxDriveLetter.Location = '165, 61'
	$comboboxDriveLetter.Margin = '6, 6, 6, 6'
	$comboboxDriveLetter.Name = 'comboboxDriveLetter'
	$comboboxDriveLetter.Size = '112, 34'
	$comboboxDriveLetter.TabIndex = 2
	#
	# groupboxuserprofile
	#
	$groupboxuserprofile.Controls.Add($textboxlogonscript)
	$groupboxuserprofile.Controls.Add($textboxprofilepath)
	$groupboxuserprofile.Controls.Add($labelLogonScript)
	$groupboxuserprofile.Controls.Add($labelProfilePath)
	$groupboxuserprofile.Location = '17, 32'
	$groupboxuserprofile.Margin = '6, 6, 6, 6'
	$groupboxuserprofile.Name = 'groupboxuserprofile'
	$groupboxuserprofile.Padding = '6, 6, 6, 6'
	$groupboxuserprofile.Size = '910, 198'
	$groupboxuserprofile.TabIndex = 0
	$groupboxuserprofile.TabStop = $False
	$groupboxuserprofile.Text = 'User Profile:'
	$groupboxuserprofile.UseCompatibleTextRendering = $True
	#
	# textboxlogonscript
	#
	$textboxlogonscript.Location = '249, 120'
	$textboxlogonscript.Margin = '13, 12, 13, 12'
	$textboxlogonscript.Name = 'textboxlogonscript'
	$textboxlogonscript.Size = '625, 32'
	$textboxlogonscript.TabIndex = 3
	#
	# textboxprofilepath
	#
	$textboxprofilepath.Location = '249, 44'
	$textboxprofilepath.Margin = '13, 12, 13, 12'
	$textboxprofilepath.Name = 'textboxprofilepath'
	$textboxprofilepath.Size = '625, 32'
	$textboxprofilepath.TabIndex = 2
	#
	# labelLogonScript
	#
	$labelLogonScript.AutoSize = $True
	$labelLogonScript.Location = '15, 126'
	$labelLogonScript.Margin = '13, 0, 13, 0'
	$labelLogonScript.Name = 'labelLogonScript'
	$labelLogonScript.Size = '141, 31'
	$labelLogonScript.TabIndex = 1
	$labelLogonScript.Text = 'Logon Script:'
	$labelLogonScript.UseCompatibleTextRendering = $True
	#
	# labelProfilePath
	#
	$labelProfilePath.AutoSize = $True
	$labelProfilePath.Location = '15, 50'
	$labelProfilePath.Margin = '13, 0, 13, 0'
	$labelProfilePath.Name = 'labelProfilePath'
	$labelProfilePath.Size = '129, 31'
	$labelProfilePath.TabIndex = 0
	$labelProfilePath.Text = 'Profile path:'
	$labelProfilePath.UseCompatibleTextRendering = $True
	#
	# tabpageattributes
	#
	$tabpageattributes.Controls.Add($labelProxyAddresses)
	$tabpageattributes.Controls.Add($textboxproxyaddress)
	$tabpageattributes.Location = '8, 40'
	$tabpageattributes.Margin = '6, 6, 6, 6'
	$tabpageattributes.Name = 'tabpageattributes'
	$tabpageattributes.Size = '963, 864'
	$tabpageattributes.TabIndex = 6
	$tabpageattributes.Text = 'Attributes'
	$tabpageattributes.UseVisualStyleBackColor = $True
	#
	# labelProxyAddresses
	#
	$labelProxyAddresses.AutoSize = $True
	$labelProxyAddresses.Location = '30, 21'
	$labelProxyAddresses.Margin = '13, 0, 13, 0'
	$labelProxyAddresses.Name = 'labelProxyAddresses'
	$labelProxyAddresses.Size = '179, 31'
	$labelProxyAddresses.TabIndex = 34
	$labelProxyAddresses.Text = 'ProxyAddresses:'
	$labelProxyAddresses.UseCompatibleTextRendering = $True
	#
	# textboxproxyaddress
	#
	$textboxproxyaddress.Location = '391, 18'
	$textboxproxyaddress.Margin = '13, 12, 13, 12'
	$textboxproxyaddress.Multiline = $True
	$textboxproxyaddress.Name = 'textboxproxyaddress'
	$textboxproxyaddress.Size = '536, 234'
	$textboxproxyaddress.TabIndex = 33
	#
	# tabpageOffice365
	#
	$tabpageOffice365.Controls.Add($groupboxNoAdSync)
	$tabpageOffice365.Controls.Add($groupboxADSync)
	$tabpageOffice365.Location = '8, 40'
	$tabpageOffice365.Margin = '6, 6, 6, 6'
	$tabpageOffice365.Name = 'tabpageOffice365'
	$tabpageOffice365.Padding = '6, 6, 6, 6'
	$tabpageOffice365.Size = '998, 958'
	$tabpageOffice365.TabIndex = 1
	$tabpageOffice365.Text = 'Office 365 User'
	$tabpageOffice365.UseVisualStyleBackColor = $True
	#
	# groupboxNoAdSync
	#
	$groupboxNoAdSync.Controls.Add($tabcontrol2)
	$groupboxNoAdSync.Location = '13, 114'
	$groupboxNoAdSync.Margin = '6, 6, 6, 6'
	$groupboxNoAdSync.Name = 'groupboxNoAdSync'
	$groupboxNoAdSync.Padding = '6, 6, 6, 6'
	$groupboxNoAdSync.Size = '973, 806'
	$groupboxNoAdSync.TabIndex = 3
	$groupboxNoAdSync.TabStop = $False
	$groupboxNoAdSync.Text = 'No ADSync'
	$groupboxNoAdSync.UseCompatibleTextRendering = $True
	#
	# tabcontrol2
	#
	$tabcontrol2.Controls.Add($tabpageO365General)
	$tabcontrol2.Controls.Add($tabpageO365Account)
	$tabcontrol2.Controls.Add($tabpageO365Address)
	$tabcontrol2.Controls.Add($tabpageO365Groups)
	$tabcontrol2.Controls.Add($tabpagesecurityGroups)
	$tabcontrol2.Controls.Add($tabpageo365shared)
	$tabcontrol2.Controls.Add($tabpageO365Attributes)
	$tabcontrol2.Location = '13, 38'
	$tabcontrol2.Margin = '6, 6, 6, 6'
	$tabcontrol2.Name = 'tabcontrol2'
	$tabcontrol2.SelectedIndex = 0
	$tabcontrol2.Size = '948, 756'
	$tabcontrol2.TabIndex = 2
	#
	# tabpageO365General
	#
	$tabpageO365General.Controls.Add($buttonConnectToOffice365)
	$tabpageO365General.Controls.Add($labelO365FirstName)
	$tabpageO365General.Controls.Add($buttonCopyOnPremUser)
	$tabpageO365General.Controls.Add($comboboxO365Licenses)
	$tabpageO365General.Controls.Add($textboxO365FirstName)
	$tabpageO365General.Controls.Add($panel3)
	$tabpageO365General.Controls.Add($labelO365License)
	$tabpageO365General.Controls.Add($labelO365LastName)
	$tabpageO365General.Controls.Add($textboxO365LastName)
	$tabpageO365General.Controls.Add($textboxO365DisplayName)
	$tabpageO365General.Controls.Add($labelO365DisplayName)
	$tabpageO365General.Location = '8, 40'
	$tabpageO365General.Margin = '6, 6, 6, 6'
	$tabpageO365General.Name = 'tabpageO365General'
	$tabpageO365General.Padding = '6, 6, 6, 6'
	$tabpageO365General.Size = '932, 708'
	$tabpageO365General.TabIndex = 0
	$tabpageO365General.Text = 'General'
	$tabpageO365General.UseVisualStyleBackColor = $True
	#
	# buttonConnectToOffice365
	#
	$buttonConnectToOffice365.ForeColor = 'Firebrick'
	$buttonConnectToOffice365.Location = '28, 614'
	$buttonConnectToOffice365.Margin = '6, 6, 6, 6'
	$buttonConnectToOffice365.Name = 'buttonConnectToOffice365'
	$buttonConnectToOffice365.Size = '275, 50'
	$buttonConnectToOffice365.TabIndex = 10
	$buttonConnectToOffice365.Text = '*Connect to Office 365'
	$buttonConnectToOffice365.UseCompatibleTextRendering = $True
	$buttonConnectToOffice365.UseVisualStyleBackColor = $True
	$buttonConnectToOffice365.add_Click($buttonConnectToOffice365_Click)
	#
	# labelO365FirstName
	#
	$labelO365FirstName.AutoSize = $True
	$labelO365FirstName.Location = '13, 18'
	$labelO365FirstName.Margin = '13, 0, 13, 0'
	$labelO365FirstName.Name = 'labelO365FirstName'
	$labelO365FirstName.Size = '125, 31'
	$labelO365FirstName.TabIndex = 9
	$labelO365FirstName.Text = 'First Name:'
	$labelO365FirstName.UseCompatibleTextRendering = $True
	#
	# buttonCopyOnPremUser
	#
	$buttonCopyOnPremUser.Location = '530, 614'
	$buttonCopyOnPremUser.Margin = '6, 6, 6, 6'
	$buttonCopyOnPremUser.Name = 'buttonCopyOnPremUser'
	$buttonCopyOnPremUser.Size = '350, 50'
	$buttonCopyOnPremUser.TabIndex = 11
	$buttonCopyOnPremUser.Text = 'Copy Attributes From AD User'
	$buttonCopyOnPremUser.UseCompatibleTextRendering = $True
	$buttonCopyOnPremUser.UseVisualStyleBackColor = $True
	$buttonCopyOnPremUser.add_Click($buttonCopyOnPremUser_Click)
	#
	# comboboxO365Licenses
	#
	$comboboxO365Licenses.DropDownStyle = 'DropDownList'
	$comboboxO365Licenses.FormattingEnabled = $True
	$comboboxO365Licenses.Location = '256, 230'
	$comboboxO365Licenses.Margin = '6, 6, 6, 6'
	$comboboxO365Licenses.Name = 'comboboxO365Licenses'
	$comboboxO365Licenses.Size = '624, 34'
	$comboboxO365Licenses.TabIndex = 3
	$tooltip1.SetToolTip($comboboxO365Licenses, 'Connect to Office 365 to display licenses. Will only display licenses with at least 1 available to assign')
	$comboboxO365Licenses.add_SelectedIndexChanged($comboboxO365Licenses_SelectedIndexChanged)
	#
	# textboxO365FirstName
	#
	$textboxO365FirstName.Location = '256, 18'
	$textboxO365FirstName.Margin = '13, 12, 13, 12'
	$textboxO365FirstName.Name = 'textboxO365FirstName'
	$textboxO365FirstName.Size = '624, 32'
	$textboxO365FirstName.TabIndex = 0
	$textboxO365FirstName.add_TextChanged($textboxO365FirstName_TextChanged)
	#
	# panel3
	#
	$panel3.Controls.Add($maskedtextboxo365password)
	$panel3.Controls.Add($buttonO365Clear)
	$panel3.Controls.Add($labelo365password)
	$panel3.Controls.Add($textboxo365confirmpassword)
	$panel3.Controls.Add($labelO365userconfirmpassword)
	$panel3.Controls.Add($buttonO365Genpassword)
	$panel3.Controls.Add($textboxo365passwordgen)
	$panel3.Controls.Add($labelO365userpassword)
	$panel3.BackColor = 'MenuBar'
	$panel3.BorderStyle = 'Fixed3D'
	$panel3.Location = '13, 308'
	$panel3.Margin = '6, 6, 6, 6'
	$panel3.Name = 'panel3'
	$panel3.Size = '892, 284'
	$panel3.TabIndex = 4
	#
	# maskedtextboxo365password
	#
	$maskedtextboxo365password.Location = '336, 97'
	$maskedtextboxo365password.Margin = '13, 12, 13, 12'
	$maskedtextboxo365password.Name = 'maskedtextboxo365password'
	$maskedtextboxo365password.Size = '529, 32'
	$maskedtextboxo365password.TabIndex = 8
	$maskedtextboxo365password.add_TextChanged($maskedtextboxo365password_TextChanged)
	#
	# buttonO365Clear
	#
	$buttonO365Clear.Location = '750, 23'
	$buttonO365Clear.Margin = '6, 6, 6, 6'
	$buttonO365Clear.Name = 'buttonO365Clear'
	$buttonO365Clear.Size = '115, 46'
	$buttonO365Clear.TabIndex = 7
	$buttonO365Clear.Text = 'Clear'
	$buttonO365Clear.UseCompatibleTextRendering = $True
	$buttonO365Clear.UseVisualStyleBackColor = $True
	$buttonO365Clear.add_Click($buttonO365Clear_Click)
	#
	# labelo365password
	#
	$labelo365password.AutoSize = $True
	$labelo365password.Location = '282, 226'
	$labelo365password.Margin = '13, 0, 13, 0'
	$labelo365password.Name = 'labelo365password'
	$labelo365password.Size = '0, 29'
	$labelo365password.TabIndex = 25
	$labelo365password.UseCompatibleTextRendering = $True
	#
	# textboxo365confirmpassword
	#
	$textboxo365confirmpassword.Location = '336, 158'
	$textboxo365confirmpassword.Margin = '13, 12, 13, 12'
	$textboxo365confirmpassword.Name = 'textboxo365confirmpassword'
	$textboxo365confirmpassword.Size = '529, 32'
	$textboxo365confirmpassword.TabIndex = 9
	$textboxo365confirmpassword.add_TextChanged($textboxo365confirmpassword_TextChanged)
	#
	# labelO365userconfirmpassword
	#
	$labelO365userconfirmpassword.AutoSize = $True
	$labelO365userconfirmpassword.ForeColor = 'Firebrick'
	$labelO365userconfirmpassword.Location = '13, 164'
	$labelO365userconfirmpassword.Margin = '13, 0, 13, 0'
	$labelO365userconfirmpassword.Name = 'labelO365userconfirmpassword'
	$labelO365userconfirmpassword.Size = '208, 31'
	$labelO365userconfirmpassword.TabIndex = 23
	$labelO365userconfirmpassword.Text = '*Confirm Password:'
	$labelO365userconfirmpassword.UseCompatibleTextRendering = $True
	#
	# buttonO365Genpassword
	#
	$buttonO365Genpassword.Location = '13, 26'
	$buttonO365Genpassword.Margin = '6, 6, 6, 6'
	$buttonO365Genpassword.Name = 'buttonO365Genpassword'
	$buttonO365Genpassword.Size = '254, 46'
	$buttonO365Genpassword.TabIndex = 5
	$buttonO365Genpassword.Text = 'Generate Password'
	$buttonO365Genpassword.UseCompatibleTextRendering = $True
	$buttonO365Genpassword.UseVisualStyleBackColor = $True
	$buttonO365Genpassword.add_Click($buttonO365Genpassword_Click)
	#
	# textboxo365passwordgen
	#
	$textboxo365passwordgen.Location = '336, 30'
	$textboxo365passwordgen.Margin = '13, 12, 13, 12'
	$textboxo365passwordgen.Name = 'textboxo365passwordgen'
	$textboxo365passwordgen.ReadOnly = $True
	$textboxo365passwordgen.Size = '395, 32'
	$textboxo365passwordgen.TabIndex = 6
	#
	# labelO365userpassword
	#
	$labelO365userpassword.AutoSize = $True
	$labelO365userpassword.ForeColor = 'Firebrick'
	$labelO365userpassword.Location = '13, 100'
	$labelO365userpassword.Margin = '13, 0, 13, 0'
	$labelO365userpassword.Name = 'labelO365userpassword'
	$labelO365userpassword.Size = '122, 31'
	$labelO365userpassword.TabIndex = 19
	$labelO365userpassword.Text = '*Password:'
	$labelO365userpassword.UseCompatibleTextRendering = $True
	#
	# labelO365License
	#
	$labelO365License.AutoSize = $True
	$labelO365License.Location = '13, 233'
	$labelO365License.Margin = '13, 0, 13, 0'
	$labelO365License.Name = 'labelO365License'
	$labelO365License.Size = '92, 31'
	$labelO365License.TabIndex = 27
	$labelO365License.Text = 'License:'
	$tooltip1.SetToolTip($labelO365License, 'Only display licenses with at least 1 available to assign')
	$labelO365License.UseCompatibleTextRendering = $True
	#
	# labelO365LastName
	#
	$labelO365LastName.AutoSize = $True
	$labelO365LastName.Location = '13, 91'
	$labelO365LastName.Margin = '13, 0, 13, 0'
	$labelO365LastName.Name = 'labelO365LastName'
	$labelO365LastName.Size = '123, 31'
	$labelO365LastName.TabIndex = 13
	$labelO365LastName.Text = 'Last Name:'
	$labelO365LastName.UseCompatibleTextRendering = $True
	#
	# textboxO365LastName
	#
	$textboxO365LastName.Location = '256, 88'
	$textboxO365LastName.Margin = '13, 12, 13, 12'
	$textboxO365LastName.Name = 'textboxO365LastName'
	$textboxO365LastName.Size = '624, 32'
	$textboxO365LastName.TabIndex = 1
	$textboxO365LastName.add_TextChanged($textboxO365LastName_TextChanged)
	#
	# textboxO365DisplayName
	#
	$textboxO365DisplayName.Location = '256, 158'
	$textboxO365DisplayName.Margin = '13, 12, 13, 12'
	$textboxO365DisplayName.MaxLength = 256
	$textboxO365DisplayName.Name = 'textboxO365DisplayName'
	$textboxO365DisplayName.Size = '624, 32'
	$textboxO365DisplayName.TabIndex = 2
	$textboxO365DisplayName.add_TextChanged($textboxO365DisplayName_TextChanged)
	#
	# labelO365DisplayName
	#
	$labelO365DisplayName.AutoSize = $True
	$labelO365DisplayName.ForeColor = 'Firebrick'
	$labelO365DisplayName.Location = '13, 161'
	$labelO365DisplayName.Margin = '13, 0, 13, 0'
	$labelO365DisplayName.Name = 'labelO365DisplayName'
	$labelO365DisplayName.Size = '164, 31'
	$labelO365DisplayName.TabIndex = 14
	$labelO365DisplayName.Text = '*Display Name:'
	$labelO365DisplayName.UseCompatibleTextRendering = $True
	#
	# tabpageO365Account
	#
	$tabpageO365Account.Controls.Add($comboboxMFA)
	$tabpageO365Account.Controls.Add($labelMultiFactorAuthentic)
	$tabpageO365Account.Controls.Add($comboboxO365Domains)
	$tabpageO365Account.Controls.Add($labelAliasEMailAddresses)
	$tabpageO365Account.Controls.Add($textboxo365proxyaddresses)
	$tabpageO365Account.Controls.Add($textboxO365EmailAddress)
	$tabpageO365Account.Controls.Add($labelEMailOnlyIfYouWantIt)
	$tabpageO365Account.Controls.Add($comboboxO365countrycode)
	$tabpageO365Account.Controls.Add($labelCountryCode)
	$tabpageO365Account.Controls.Add($panel4)
	$tabpageO365Account.Controls.Add($textboxO365UPN)
	$tabpageO365Account.Controls.Add($labelO365UserPrincipalName)
	$tabpageO365Account.Location = '8, 40'
	$tabpageO365Account.Margin = '6, 6, 6, 6'
	$tabpageO365Account.Name = 'tabpageO365Account'
	$tabpageO365Account.Padding = '6, 6, 6, 6'
	$tabpageO365Account.Size = '932, 708'
	$tabpageO365Account.TabIndex = 1
	$tabpageO365Account.Text = 'Account'
	$tabpageO365Account.UseVisualStyleBackColor = $True
	#
	# comboboxMFA
	#
	$comboboxMFA.DropDownStyle = 'DropDownList'
	$comboboxMFA.FormattingEnabled = $True
	[void]$comboboxMFA.Items.Add('False')
	[void]$comboboxMFA.Items.Add('True')
	$comboboxMFA.Location = '340, 194'
	$comboboxMFA.Margin = '6, 6, 6, 6'
	$comboboxMFA.Name = 'comboboxMFA'
	$comboboxMFA.Size = '162, 34'
	$comboboxMFA.TabIndex = 34
	#
	# labelMultiFactorAuthentic
	#
	$labelMultiFactorAuthentic.AutoSize = $True
	$labelMultiFactorAuthentic.Location = '19, 197'
	$labelMultiFactorAuthentic.Margin = '6, 0, 6, 0'
	$labelMultiFactorAuthentic.Name = 'labelMultiFactorAuthentic'
	$labelMultiFactorAuthentic.Size = '284, 31'
	$labelMultiFactorAuthentic.TabIndex = 33
	$labelMultiFactorAuthentic.Text = 'Multi-Factor Authentication:'
	$labelMultiFactorAuthentic.UseCompatibleTextRendering = $True
	#
	# comboboxO365Domains
	#
	$comboboxO365Domains.DropDownStyle = 'DropDownList'
	$comboboxO365Domains.FormattingEnabled = $True
	$comboboxO365Domains.Location = '506, 65'
	$comboboxO365Domains.Margin = '6, 6, 6, 6'
	$comboboxO365Domains.Name = 'comboboxO365Domains'
	$comboboxO365Domains.Size = '394, 34'
	$comboboxO365Domains.Sorted = $True
	$comboboxO365Domains.TabIndex = 1
	#
	# labelAliasEMailAddresses
	#
	$labelAliasEMailAddresses.AutoSize = $True
	$labelAliasEMailAddresses.Location = '19, 327'
	$labelAliasEMailAddresses.Margin = '13, 0, 13, 0'
	$labelAliasEMailAddresses.Name = 'labelAliasEMailAddresses'
	$labelAliasEMailAddresses.Size = '247, 31'
	$labelAliasEMailAddresses.TabIndex = 32
	$labelAliasEMailAddresses.Text = 'Alias E-Mail Addresses:'
	$labelAliasEMailAddresses.UseCompatibleTextRendering = $True
	#
	# textboxo365proxyaddresses
	#
	$textboxo365proxyaddresses.Location = '340, 324'
	$textboxo365proxyaddresses.Margin = '13, 12, 13, 12'
	$textboxo365proxyaddresses.Multiline = $True
	$textboxo365proxyaddresses.Name = 'textboxo365proxyaddresses'
	$textboxo365proxyaddresses.Size = '560, 135'
	$textboxo365proxyaddresses.TabIndex = 4
	#
	# textboxO365EmailAddress
	#
	$textboxO365EmailAddress.Location = '340, 258'
	$textboxO365EmailAddress.Margin = '13, 12, 13, 12'
	$textboxO365EmailAddress.Name = 'textboxO365EmailAddress'
	$textboxO365EmailAddress.Size = '560, 32'
	$textboxO365EmailAddress.TabIndex = 3
	$tooltip1.SetToolTip($textboxO365EmailAddress, 'Only enter a value if you want it different from the UPN')
	#
	# labelEMailOnlyIfYouWantIt
	#
	$labelEMailOnlyIfYouWantIt.AutoSize = $True
	$labelEMailOnlyIfYouWantIt.Location = '19, 261'
	$labelEMailOnlyIfYouWantIt.Margin = '13, 0, 13, 0'
	$labelEMailOnlyIfYouWantIt.Name = 'labelEMailOnlyIfYouWantIt'
	$labelEMailOnlyIfYouWantIt.Size = '71, 31'
	$labelEMailOnlyIfYouWantIt.TabIndex = 29
	$labelEMailOnlyIfYouWantIt.Text = 'Email:'
	$tooltip1.SetToolTip($labelEMailOnlyIfYouWantIt, 'Only enter a E-mail value if you want the users primary e-mail to be different than their User Principal Name
')
	$labelEMailOnlyIfYouWantIt.UseCompatibleTextRendering = $True
	#
	# comboboxO365countrycode
	#
	$comboboxO365countrycode.BackColor = 'Window'
	$comboboxO365countrycode.DropDownStyle = 'DropDownList'
	$comboboxO365countrycode.FormattingEnabled = $True
	[void]$comboboxO365countrycode.Items.Add('AD')
	[void]$comboboxO365countrycode.Items.Add('AE')
	[void]$comboboxO365countrycode.Items.Add('AF')
	[void]$comboboxO365countrycode.Items.Add('AG')
	[void]$comboboxO365countrycode.Items.Add('AI')
	[void]$comboboxO365countrycode.Items.Add('AL')
	[void]$comboboxO365countrycode.Items.Add('AM')
	[void]$comboboxO365countrycode.Items.Add('AO')
	[void]$comboboxO365countrycode.Items.Add('AQ')
	[void]$comboboxO365countrycode.Items.Add('AR')
	[void]$comboboxO365countrycode.Items.Add('AS')
	[void]$comboboxO365countrycode.Items.Add('AT')
	[void]$comboboxO365countrycode.Items.Add('AU')
	[void]$comboboxO365countrycode.Items.Add('AW')
	[void]$comboboxO365countrycode.Items.Add('AX')
	[void]$comboboxO365countrycode.Items.Add('AZ')
	[void]$comboboxO365countrycode.Items.Add('BA')
	[void]$comboboxO365countrycode.Items.Add('BB')
	[void]$comboboxO365countrycode.Items.Add('BD')
	[void]$comboboxO365countrycode.Items.Add('BE')
	[void]$comboboxO365countrycode.Items.Add('BF')
	[void]$comboboxO365countrycode.Items.Add('BG')
	[void]$comboboxO365countrycode.Items.Add('BH')
	[void]$comboboxO365countrycode.Items.Add('BI')
	[void]$comboboxO365countrycode.Items.Add('BJ')
	[void]$comboboxO365countrycode.Items.Add('BL')
	[void]$comboboxO365countrycode.Items.Add('BM')
	[void]$comboboxO365countrycode.Items.Add('BN')
	[void]$comboboxO365countrycode.Items.Add('BO')
	[void]$comboboxO365countrycode.Items.Add('BQ')
	[void]$comboboxO365countrycode.Items.Add('BR')
	[void]$comboboxO365countrycode.Items.Add('BS')
	[void]$comboboxO365countrycode.Items.Add('BT')
	[void]$comboboxO365countrycode.Items.Add('BV')
	[void]$comboboxO365countrycode.Items.Add('BW')
	[void]$comboboxO365countrycode.Items.Add('BY')
	[void]$comboboxO365countrycode.Items.Add('BZ')
	[void]$comboboxO365countrycode.Items.Add('CA')
	[void]$comboboxO365countrycode.Items.Add('CC')
	[void]$comboboxO365countrycode.Items.Add('CD')
	[void]$comboboxO365countrycode.Items.Add('CF')
	[void]$comboboxO365countrycode.Items.Add('CG')
	[void]$comboboxO365countrycode.Items.Add('CH')
	[void]$comboboxO365countrycode.Items.Add('CI')
	[void]$comboboxO365countrycode.Items.Add('CK')
	[void]$comboboxO365countrycode.Items.Add('CL')
	[void]$comboboxO365countrycode.Items.Add('CM')
	[void]$comboboxO365countrycode.Items.Add('CN')
	[void]$comboboxO365countrycode.Items.Add('CO')
	[void]$comboboxO365countrycode.Items.Add('CR')
	[void]$comboboxO365countrycode.Items.Add('CU')
	[void]$comboboxO365countrycode.Items.Add('CV')
	[void]$comboboxO365countrycode.Items.Add('CW')
	[void]$comboboxO365countrycode.Items.Add('CX')
	[void]$comboboxO365countrycode.Items.Add('CY')
	[void]$comboboxO365countrycode.Items.Add('CZ')
	[void]$comboboxO365countrycode.Items.Add('DE')
	[void]$comboboxO365countrycode.Items.Add('DJ')
	[void]$comboboxO365countrycode.Items.Add('DK')
	[void]$comboboxO365countrycode.Items.Add('DM')
	[void]$comboboxO365countrycode.Items.Add('DO')
	[void]$comboboxO365countrycode.Items.Add('DZ')
	[void]$comboboxO365countrycode.Items.Add('EC')
	[void]$comboboxO365countrycode.Items.Add('EE')
	[void]$comboboxO365countrycode.Items.Add('EG')
	[void]$comboboxO365countrycode.Items.Add('EH')
	[void]$comboboxO365countrycode.Items.Add('ER')
	[void]$comboboxO365countrycode.Items.Add('ES')
	[void]$comboboxO365countrycode.Items.Add('ET')
	[void]$comboboxO365countrycode.Items.Add('FI')
	[void]$comboboxO365countrycode.Items.Add('FJ')
	[void]$comboboxO365countrycode.Items.Add('FK')
	[void]$comboboxO365countrycode.Items.Add('FM')
	[void]$comboboxO365countrycode.Items.Add('FO')
	[void]$comboboxO365countrycode.Items.Add('FR')
	[void]$comboboxO365countrycode.Items.Add('GA')
	[void]$comboboxO365countrycode.Items.Add('GB')
	[void]$comboboxO365countrycode.Items.Add('GD')
	[void]$comboboxO365countrycode.Items.Add('GE')
	[void]$comboboxO365countrycode.Items.Add('GF')
	[void]$comboboxO365countrycode.Items.Add('GG')
	[void]$comboboxO365countrycode.Items.Add('GH')
	[void]$comboboxO365countrycode.Items.Add('GI')
	[void]$comboboxO365countrycode.Items.Add('GL')
	[void]$comboboxO365countrycode.Items.Add('GM')
	[void]$comboboxO365countrycode.Items.Add('GN')
	[void]$comboboxO365countrycode.Items.Add('GP')
	[void]$comboboxO365countrycode.Items.Add('GQ')
	[void]$comboboxO365countrycode.Items.Add('GR')
	[void]$comboboxO365countrycode.Items.Add('GS')
	[void]$comboboxO365countrycode.Items.Add('GT')
	[void]$comboboxO365countrycode.Items.Add('GU')
	[void]$comboboxO365countrycode.Items.Add('GW')
	[void]$comboboxO365countrycode.Items.Add('GY')
	[void]$comboboxO365countrycode.Items.Add('HK')
	[void]$comboboxO365countrycode.Items.Add('HM')
	[void]$comboboxO365countrycode.Items.Add('HN')
	[void]$comboboxO365countrycode.Items.Add('HR')
	[void]$comboboxO365countrycode.Items.Add('HT')
	[void]$comboboxO365countrycode.Items.Add('HU')
	[void]$comboboxO365countrycode.Items.Add('ID')
	[void]$comboboxO365countrycode.Items.Add('IE')
	[void]$comboboxO365countrycode.Items.Add('IL')
	[void]$comboboxO365countrycode.Items.Add('IM')
	[void]$comboboxO365countrycode.Items.Add('IN')
	[void]$comboboxO365countrycode.Items.Add('IO')
	[void]$comboboxO365countrycode.Items.Add('IQ')
	[void]$comboboxO365countrycode.Items.Add('IR')
	[void]$comboboxO365countrycode.Items.Add('IS')
	[void]$comboboxO365countrycode.Items.Add('IT')
	[void]$comboboxO365countrycode.Items.Add('JE')
	[void]$comboboxO365countrycode.Items.Add('JM')
	[void]$comboboxO365countrycode.Items.Add('JO')
	[void]$comboboxO365countrycode.Items.Add('JP')
	[void]$comboboxO365countrycode.Items.Add('KE')
	[void]$comboboxO365countrycode.Items.Add('KG')
	[void]$comboboxO365countrycode.Items.Add('KH')
	[void]$comboboxO365countrycode.Items.Add('KI')
	[void]$comboboxO365countrycode.Items.Add('KM')
	[void]$comboboxO365countrycode.Items.Add('KN')
	[void]$comboboxO365countrycode.Items.Add('KP')
	[void]$comboboxO365countrycode.Items.Add('KR')
	[void]$comboboxO365countrycode.Items.Add('KW')
	[void]$comboboxO365countrycode.Items.Add('KY')
	[void]$comboboxO365countrycode.Items.Add('KZ')
	[void]$comboboxO365countrycode.Items.Add('LA')
	[void]$comboboxO365countrycode.Items.Add('LB')
	[void]$comboboxO365countrycode.Items.Add('LC')
	[void]$comboboxO365countrycode.Items.Add('LI')
	[void]$comboboxO365countrycode.Items.Add('LK')
	[void]$comboboxO365countrycode.Items.Add('LR')
	[void]$comboboxO365countrycode.Items.Add('LS')
	[void]$comboboxO365countrycode.Items.Add('LT')
	[void]$comboboxO365countrycode.Items.Add('LU')
	[void]$comboboxO365countrycode.Items.Add('LV')
	[void]$comboboxO365countrycode.Items.Add('LY')
	[void]$comboboxO365countrycode.Items.Add('MA')
	[void]$comboboxO365countrycode.Items.Add('MC')
	[void]$comboboxO365countrycode.Items.Add('MD')
	[void]$comboboxO365countrycode.Items.Add('ME')
	[void]$comboboxO365countrycode.Items.Add('MF')
	[void]$comboboxO365countrycode.Items.Add('MG')
	[void]$comboboxO365countrycode.Items.Add('MH')
	[void]$comboboxO365countrycode.Items.Add('MK')
	[void]$comboboxO365countrycode.Items.Add('ML')
	[void]$comboboxO365countrycode.Items.Add('MM')
	[void]$comboboxO365countrycode.Items.Add('MN')
	[void]$comboboxO365countrycode.Items.Add('MO')
	[void]$comboboxO365countrycode.Items.Add('MP')
	[void]$comboboxO365countrycode.Items.Add('MQ')
	[void]$comboboxO365countrycode.Items.Add('MR')
	[void]$comboboxO365countrycode.Items.Add('MS')
	[void]$comboboxO365countrycode.Items.Add('MT')
	[void]$comboboxO365countrycode.Items.Add('MU')
	[void]$comboboxO365countrycode.Items.Add('MV')
	[void]$comboboxO365countrycode.Items.Add('MW')
	[void]$comboboxO365countrycode.Items.Add('MX')
	[void]$comboboxO365countrycode.Items.Add('MY')
	[void]$comboboxO365countrycode.Items.Add('MZ')
	[void]$comboboxO365countrycode.Items.Add('NA')
	[void]$comboboxO365countrycode.Items.Add('NC')
	[void]$comboboxO365countrycode.Items.Add('NE')
	[void]$comboboxO365countrycode.Items.Add('NF')
	[void]$comboboxO365countrycode.Items.Add('NG')
	[void]$comboboxO365countrycode.Items.Add('NI')
	[void]$comboboxO365countrycode.Items.Add('NL')
	[void]$comboboxO365countrycode.Items.Add('NO')
	[void]$comboboxO365countrycode.Items.Add('NP')
	[void]$comboboxO365countrycode.Items.Add('NR')
	[void]$comboboxO365countrycode.Items.Add('NU')
	[void]$comboboxO365countrycode.Items.Add('NZ')
	[void]$comboboxO365countrycode.Items.Add('OM')
	[void]$comboboxO365countrycode.Items.Add('PA')
	[void]$comboboxO365countrycode.Items.Add('PE')
	[void]$comboboxO365countrycode.Items.Add('PF')
	[void]$comboboxO365countrycode.Items.Add('PG')
	[void]$comboboxO365countrycode.Items.Add('PH')
	[void]$comboboxO365countrycode.Items.Add('PK')
	[void]$comboboxO365countrycode.Items.Add('PL')
	[void]$comboboxO365countrycode.Items.Add('PM')
	[void]$comboboxO365countrycode.Items.Add('PN')
	[void]$comboboxO365countrycode.Items.Add('PR')
	[void]$comboboxO365countrycode.Items.Add('PS')
	[void]$comboboxO365countrycode.Items.Add('PT')
	[void]$comboboxO365countrycode.Items.Add('PW')
	[void]$comboboxO365countrycode.Items.Add('PY')
	[void]$comboboxO365countrycode.Items.Add('QA')
	[void]$comboboxO365countrycode.Items.Add('RE')
	[void]$comboboxO365countrycode.Items.Add('RO')
	[void]$comboboxO365countrycode.Items.Add('RS')
	[void]$comboboxO365countrycode.Items.Add('RU')
	[void]$comboboxO365countrycode.Items.Add('RW')
	[void]$comboboxO365countrycode.Items.Add('SA')
	[void]$comboboxO365countrycode.Items.Add('SB')
	[void]$comboboxO365countrycode.Items.Add('SC')
	[void]$comboboxO365countrycode.Items.Add('SD')
	[void]$comboboxO365countrycode.Items.Add('SE')
	[void]$comboboxO365countrycode.Items.Add('SG')
	[void]$comboboxO365countrycode.Items.Add('SH')
	[void]$comboboxO365countrycode.Items.Add('SI')
	[void]$comboboxO365countrycode.Items.Add('SJ')
	[void]$comboboxO365countrycode.Items.Add('SK')
	[void]$comboboxO365countrycode.Items.Add('SL')
	[void]$comboboxO365countrycode.Items.Add('SM')
	[void]$comboboxO365countrycode.Items.Add('SN')
	[void]$comboboxO365countrycode.Items.Add('SO')
	[void]$comboboxO365countrycode.Items.Add('SR')
	[void]$comboboxO365countrycode.Items.Add('SS')
	[void]$comboboxO365countrycode.Items.Add('ST')
	[void]$comboboxO365countrycode.Items.Add('SV')
	[void]$comboboxO365countrycode.Items.Add('SX')
	[void]$comboboxO365countrycode.Items.Add('SY')
	[void]$comboboxO365countrycode.Items.Add('SZ')
	[void]$comboboxO365countrycode.Items.Add('TC')
	[void]$comboboxO365countrycode.Items.Add('TD')
	[void]$comboboxO365countrycode.Items.Add('TF')
	[void]$comboboxO365countrycode.Items.Add('TG')
	[void]$comboboxO365countrycode.Items.Add('TH')
	[void]$comboboxO365countrycode.Items.Add('TJ')
	[void]$comboboxO365countrycode.Items.Add('TK')
	[void]$comboboxO365countrycode.Items.Add('TL')
	[void]$comboboxO365countrycode.Items.Add('TM')
	[void]$comboboxO365countrycode.Items.Add('TN')
	[void]$comboboxO365countrycode.Items.Add('TO')
	[void]$comboboxO365countrycode.Items.Add('TR')
	[void]$comboboxO365countrycode.Items.Add('TT')
	[void]$comboboxO365countrycode.Items.Add('TV')
	[void]$comboboxO365countrycode.Items.Add('TW')
	[void]$comboboxO365countrycode.Items.Add('TZ')
	[void]$comboboxO365countrycode.Items.Add('UA')
	[void]$comboboxO365countrycode.Items.Add('UG')
	[void]$comboboxO365countrycode.Items.Add('UM')
	[void]$comboboxO365countrycode.Items.Add('US')
	[void]$comboboxO365countrycode.Items.Add('UY')
	[void]$comboboxO365countrycode.Items.Add('UZ')
	[void]$comboboxO365countrycode.Items.Add('VA')
	[void]$comboboxO365countrycode.Items.Add('VC')
	[void]$comboboxO365countrycode.Items.Add('VE')
	[void]$comboboxO365countrycode.Items.Add('VG')
	[void]$comboboxO365countrycode.Items.Add('VI')
	[void]$comboboxO365countrycode.Items.Add('VN')
	[void]$comboboxO365countrycode.Items.Add('VU')
	[void]$comboboxO365countrycode.Items.Add('WF')
	[void]$comboboxO365countrycode.Items.Add('WS')
	[void]$comboboxO365countrycode.Items.Add('YE')
	[void]$comboboxO365countrycode.Items.Add('YT')
	[void]$comboboxO365countrycode.Items.Add('ZA')
	[void]$comboboxO365countrycode.Items.Add('ZM')
	[void]$comboboxO365countrycode.Items.Add('ZW')
	$comboboxO365countrycode.Location = '340, 132'
	$comboboxO365countrycode.Margin = '6, 6, 6, 6'
	$comboboxO365countrycode.Name = 'comboboxO365countrycode'
	$comboboxO365countrycode.Size = '162, 34'
	$comboboxO365countrycode.Sorted = $True
	$comboboxO365countrycode.TabIndex = 2
	$comboboxO365countrycode.add_SelectedIndexChanged($comboboxO365countrycode_SelectedIndexChanged)
	#
	# labelCountryCode
	#
	$labelCountryCode.AutoSize = $True
	$labelCountryCode.ForeColor = 'Firebrick'
	$labelCountryCode.Location = '19, 135'
	$labelCountryCode.Margin = '13, 0, 13, 0'
	$labelCountryCode.Name = 'labelCountryCode'
	$labelCountryCode.Size = '162, 31'
	$labelCountryCode.TabIndex = 27
	$labelCountryCode.Text = '*Country Code:'
	$labelCountryCode.UseCompatibleTextRendering = $True
	#
	# panel4
	#
	$panel4.Controls.Add($checkboxBlockCred)
	$panel4.Controls.Add($checkboxO365PasswordNeverExpires)
	$panel4.Controls.Add($checkboxo365usermustchangepassword)
	$panel4.BackColor = 'MenuBar'
	$panel4.BorderStyle = 'Fixed3D'
	$panel4.Location = '13, 477'
	$panel4.Margin = '6, 6, 6, 6'
	$panel4.Name = 'panel4'
	$panel4.Size = '907, 204'
	$panel4.TabIndex = 5
	#
	# checkboxBlockCred
	#
	$checkboxBlockCred.Location = '22, 136'
	$checkboxBlockCred.Margin = '6, 6, 6, 6'
	$checkboxBlockCred.Name = 'checkboxBlockCred'
	$checkboxBlockCred.Size = '875, 48'
	$checkboxBlockCred.TabIndex = 8
	$checkboxBlockCred.Text = 'Account is disabled'
	$checkboxBlockCred.UseCompatibleTextRendering = $True
	$checkboxBlockCred.UseVisualStyleBackColor = $True
	#
	# checkboxO365PasswordNeverExpires
	#
	$checkboxO365PasswordNeverExpires.Location = '22, 76'
	$checkboxO365PasswordNeverExpires.Margin = '6, 6, 6, 6'
	$checkboxO365PasswordNeverExpires.Name = 'checkboxO365PasswordNeverExpires'
	$checkboxO365PasswordNeverExpires.Size = '875, 48'
	$checkboxO365PasswordNeverExpires.TabIndex = 7
	$checkboxO365PasswordNeverExpires.Text = 'Password never expires'
	$checkboxO365PasswordNeverExpires.UseCompatibleTextRendering = $True
	$checkboxO365PasswordNeverExpires.UseVisualStyleBackColor = $True
	#
	# checkboxo365usermustchangepassword
	#
	$checkboxo365usermustchangepassword.Location = '22, 16'
	$checkboxo365usermustchangepassword.Margin = '6, 6, 6, 6'
	$checkboxo365usermustchangepassword.Name = 'checkboxo365usermustchangepassword'
	$checkboxo365usermustchangepassword.Size = '875, 48'
	$checkboxo365usermustchangepassword.TabIndex = 6
	$checkboxo365usermustchangepassword.Text = 'User must change password at next logon'
	$checkboxo365usermustchangepassword.UseCompatibleTextRendering = $True
	$checkboxo365usermustchangepassword.UseVisualStyleBackColor = $True
	#
	# textboxO365UPN
	#
	$textboxO365UPN.Location = '19, 67'
	$textboxO365UPN.Margin = '13, 12, 13, 12'
	$textboxO365UPN.MaxLength = 113
	$textboxO365UPN.Name = 'textboxO365UPN'
	$textboxO365UPN.Size = '436, 32'
	$textboxO365UPN.TabIndex = 0
	$textboxO365UPN.add_TextChanged($textboxO365UPN_TextChanged)
	#
	# labelO365UserPrincipalName
	#
	$labelO365UserPrincipalName.AutoSize = $True
	$labelO365UserPrincipalName.ForeColor = 'Firebrick'
	$labelO365UserPrincipalName.Location = '13, 24'
	$labelO365UserPrincipalName.Margin = '13, 0, 13, 0'
	$labelO365UserPrincipalName.Name = 'labelO365UserPrincipalName'
	$labelO365UserPrincipalName.Size = '219, 31'
	$labelO365UserPrincipalName.TabIndex = 24
	$labelO365UserPrincipalName.Text = '*UserPrincipalName:'
	$labelO365UserPrincipalName.UseCompatibleTextRendering = $True
	#
	# tabpageO365Address
	#
	$tabpageO365Address.Controls.Add($label10)
	$tabpageO365Address.Controls.Add($textboxo365zip)
	$tabpageO365Address.Controls.Add($textboxo365state)
	$tabpageO365Address.Controls.Add($label11)
	$tabpageO365Address.Controls.Add($label12)
	$tabpageO365Address.Controls.Add($textboxo365city)
	$tabpageO365Address.Controls.Add($textboxO365street)
	$tabpageO365Address.Controls.Add($label14)
	$tabpageO365Address.Location = '8, 40'
	$tabpageO365Address.Margin = '6, 6, 6, 6'
	$tabpageO365Address.Name = 'tabpageO365Address'
	$tabpageO365Address.Size = '932, 708'
	$tabpageO365Address.TabIndex = 2
	$tabpageO365Address.Text = 'Address'
	$tabpageO365Address.UseVisualStyleBackColor = $True
	#
	# label10
	#
	$label10.AutoSize = $True
	$label10.Location = '26, 485'
	$label10.Margin = '13, 0, 13, 0'
	$label10.Name = 'label10'
	$label10.Size = '175, 31'
	$label10.TabIndex = 22
	$label10.Text = 'Zip/Postal Code:'
	$label10.UseCompatibleTextRendering = $True
	#
	# textboxo365zip
	#
	$textboxo365zip.Location = '370, 482'
	$textboxo365zip.Margin = '13, 12, 13, 12'
	$textboxo365zip.Name = 'textboxo365zip'
	$textboxo365zip.Size = '528, 32'
	$textboxo365zip.TabIndex = 3
	#
	# textboxo365state
	#
	$textboxo365state.Location = '370, 400'
	$textboxo365state.Margin = '13, 12, 13, 12'
	$textboxo365state.Name = 'textboxo365state'
	$textboxo365state.Size = '528, 32'
	$textboxo365state.TabIndex = 2
	#
	# label11
	#
	$label11.AutoSize = $True
	$label11.Location = '26, 403'
	$label11.Margin = '13, 0, 13, 0'
	$label11.Name = 'label11'
	$label11.Size = '159, 31'
	$label11.TabIndex = 19
	$label11.Text = 'State/province:'
	$label11.UseCompatibleTextRendering = $True
	#
	# label12
	#
	$label12.AutoSize = $True
	$label12.Location = '26, 321'
	$label12.Margin = '13, 0, 13, 0'
	$label12.Name = 'label12'
	$label12.Size = '53, 31'
	$label12.TabIndex = 18
	$label12.Text = 'City:'
	$label12.UseCompatibleTextRendering = $True
	#
	# textboxo365city
	#
	$textboxo365city.Location = '370, 318'
	$textboxo365city.Margin = '13, 12, 13, 12'
	$textboxo365city.Name = 'textboxo365city'
	$textboxo365city.Size = '528, 32'
	$textboxo365city.TabIndex = 1
	#
	# textboxO365street
	#
	$textboxO365street.Location = '370, 52'
	$textboxO365street.Margin = '13, 12, 13, 12'
	$textboxO365street.Multiline = $True
	$textboxO365street.Name = 'textboxO365street'
	$textboxO365street.ScrollBars = 'Vertical'
	$textboxO365street.Size = '528, 212'
	$textboxO365street.TabIndex = 0
	#
	# label14
	#
	$label14.AutoSize = $True
	$label14.Location = '26, 52'
	$label14.Margin = '13, 0, 13, 0'
	$label14.Name = 'label14'
	$label14.Size = '75, 31'
	$label14.TabIndex = 13
	$label14.Text = 'Street:'
	$label14.UseCompatibleTextRendering = $True
	#
	# tabpageO365Groups
	#
	$tabpageO365Groups.Controls.Add($labelO365Groups)
	$tabpageO365Groups.Controls.Add($checkedlistboxDISTROo365groups)
	$tabpageO365Groups.Location = '8, 40'
	$tabpageO365Groups.Margin = '6, 6, 6, 6'
	$tabpageO365Groups.Name = 'tabpageO365Groups'
	$tabpageO365Groups.Size = '932, 708'
	$tabpageO365Groups.TabIndex = 3
	$tabpageO365Groups.Text = 'Mail Groups'
	$tooltip1.SetToolTip($tabpageO365Groups, 'To see all Groups connect to Office 365 in the General tab. Groups is not available for AD-Synced environments')
	$tabpageO365Groups.ToolTipText = 'To see all Groups connect to Office 365 in the General tab. Groups is not available for AD-Synced environments'
	$tabpageO365Groups.UseVisualStyleBackColor = $True
	#
	# labelO365Groups
	#
	$labelO365Groups.BorderStyle = 'None'
	$labelO365Groups.Location = '6, 6'
	$labelO365Groups.Margin = '6, 6, 6, 6'
	$labelO365Groups.Multiline = $True
	$labelO365Groups.Name = 'labelO365Groups'
	$labelO365Groups.Size = '913, 63'
	$labelO365Groups.TabIndex = 0
	#
	# checkedlistboxDISTROo365groups
	#
	$checkedlistboxDISTROo365groups.CheckOnClick = $True
	$checkedlistboxDISTROo365groups.FormattingEnabled = $True
	$checkedlistboxDISTROo365groups.Location = '6, 78'
	$checkedlistboxDISTROo365groups.Margin = '13, 12, 13, 12'
	$checkedlistboxDISTROo365groups.Name = 'checkedlistboxDISTROo365groups'
	$checkedlistboxDISTROo365groups.Size = '913, 598'
	$checkedlistboxDISTROo365groups.Sorted = $True
	$checkedlistboxDISTROo365groups.TabIndex = 1
	$tooltip1.SetToolTip($checkedlistboxDISTROo365groups, 'To see all Groups connect to Office 365 in the General tab. Groups is not available for AD-Synced environments')
	$checkedlistboxDISTROo365groups.UseCompatibleTextRendering = $True
	#
	# tabpagesecurityGroups
	#
	$tabpagesecurityGroups.Controls.Add($labelSecurityGroups)
	$tabpagesecurityGroups.Controls.Add($checkedlistboxO365SecurityGroups)
	$tabpagesecurityGroups.Location = '8, 40'
	$tabpagesecurityGroups.Margin = '6, 6, 6, 6'
	$tabpagesecurityGroups.Name = 'tabpagesecurityGroups'
	$tabpagesecurityGroups.Size = '932, 708'
	$tabpagesecurityGroups.TabIndex = 6
	$tabpagesecurityGroups.Text = 'Security Groups'
	$tabpagesecurityGroups.UseVisualStyleBackColor = $True
	#
	# labelSecurityGroups
	#
	$labelSecurityGroups.BorderStyle = 'None'
	$labelSecurityGroups.Location = '10, 6'
	$labelSecurityGroups.Margin = '6, 6, 6, 6'
	$labelSecurityGroups.Multiline = $True
	$labelSecurityGroups.Name = 'labelSecurityGroups'
	$labelSecurityGroups.Size = '913, 61'
	$labelSecurityGroups.TabIndex = 0
	#
	# checkedlistboxO365SecurityGroups
	#
	$checkedlistboxO365SecurityGroups.CheckOnClick = $True
	$checkedlistboxO365SecurityGroups.FormattingEnabled = $True
	$checkedlistboxO365SecurityGroups.Location = '10, 72'
	$checkedlistboxO365SecurityGroups.Margin = '13, 12, 13, 12'
	$checkedlistboxO365SecurityGroups.Name = 'checkedlistboxO365SecurityGroups'
	$checkedlistboxO365SecurityGroups.Size = '913, 598'
	$checkedlistboxO365SecurityGroups.Sorted = $True
	$checkedlistboxO365SecurityGroups.TabIndex = 1
	$checkedlistboxO365SecurityGroups.UseCompatibleTextRendering = $True
	#
	# tabpageo365shared
	#
	$tabpageo365shared.Controls.Add($groupbox3)
	$tabpageo365shared.Controls.Add($labelsharedmailboxes)
	$tabpageo365shared.Controls.Add($checkedlistboxsharedmailboxes)
	$tabpageo365shared.Location = '8, 40'
	$tabpageo365shared.Margin = '6, 6, 6, 6'
	$tabpageo365shared.Name = 'tabpageo365shared'
	$tabpageo365shared.Size = '932, 708'
	$tabpageo365shared.TabIndex = 4
	$tabpageo365shared.Text = 'Shared Mailboxes'
	$tabpageo365shared.UseVisualStyleBackColor = $True
	#
	# groupbox3
	#
	$groupbox3.Controls.Add($labelAutomapping)
	$groupbox3.Controls.Add($comboboxsharedmailboxautomap)
	$groupbox3.Controls.Add($comboboxsharedmaiboxpermission)
	$groupbox3.Controls.Add($labelPermission)
	$groupbox3.Location = '13, 75'
	$groupbox3.Margin = '6, 6, 6, 6'
	$groupbox3.Name = 'groupbox3'
	$groupbox3.Padding = '6, 6, 6, 6'
	$groupbox3.Size = '906, 93'
	$groupbox3.TabIndex = 3
	$groupbox3.TabStop = $False
	$groupbox3.Text = 'Settings'
	$groupbox3.UseCompatibleTextRendering = $True
	#
	# labelAutomapping
	#
	$labelAutomapping.AutoSize = $True
	$labelAutomapping.Location = '572, 40'
	$labelAutomapping.Margin = '6, 0, 6, 0'
	$labelAutomapping.Name = 'labelAutomapping'
	$labelAutomapping.Size = '148, 31'
	$labelAutomapping.TabIndex = 5
	$labelAutomapping.Text = 'Automapping:'
	$labelAutomapping.UseCompatibleTextRendering = $True
	#
	# comboboxsharedmailboxautomap
	#
	$comboboxsharedmailboxautomap.DropDownStyle = 'DropDownList'
	$comboboxsharedmailboxautomap.FormattingEnabled = $True
	[void]$comboboxsharedmailboxautomap.Items.Add('True')
	[void]$comboboxsharedmailboxautomap.Items.Add('False')
	$comboboxsharedmailboxautomap.Location = '732, 37'
	$comboboxsharedmailboxautomap.Margin = '6, 6, 6, 6'
	$comboboxsharedmailboxautomap.Name = 'comboboxsharedmailboxautomap'
	$comboboxsharedmailboxautomap.Size = '162, 34'
	$comboboxsharedmailboxautomap.TabIndex = 4
	$tooltip1.SetToolTip($comboboxsharedmailboxautomap, 'Automapping will automatically add the mailbox on the users Outlook if they have the correct permission')
	#
	# comboboxsharedmaiboxpermission
	#
	$comboboxsharedmaiboxpermission.DropDownStyle = 'DropDownList'
	$comboboxsharedmaiboxpermission.FormattingEnabled = $True
	[void]$comboboxsharedmaiboxpermission.Items.Add('Full Access')
	[void]$comboboxsharedmaiboxpermission.Items.Add('Send As')
	[void]$comboboxsharedmaiboxpermission.Items.Add('Send on Behalf')
	$comboboxsharedmaiboxpermission.Location = '150, 37'
	$comboboxsharedmaiboxpermission.Margin = '6, 6, 6, 6'
	$comboboxsharedmaiboxpermission.Name = 'comboboxsharedmaiboxpermission'
	$comboboxsharedmaiboxpermission.Size = '410, 34'
	$comboboxsharedmaiboxpermission.TabIndex = 3
	$tooltip1.SetToolTip($comboboxsharedmaiboxpermission, 'Permission you want your User to have on the Shared Mailboxes')
	$comboboxsharedmaiboxpermission.add_SelectedIndexChanged($comboboxsharedmaiboxpermission_SelectedIndexChanged)
	#
	# labelPermission
	#
	$labelPermission.AutoSize = $True
	$labelPermission.Location = '12, 43'
	$labelPermission.Margin = '6, 0, 6, 0'
	$labelPermission.Name = 'labelPermission'
	$labelPermission.Size = '126, 31'
	$labelPermission.TabIndex = 2
	$labelPermission.Text = 'Permission:'
	$labelPermission.UseCompatibleTextRendering = $True
	#
	# labelsharedmailboxes
	#
	$labelsharedmailboxes.BackColor = 'Window'
	$labelsharedmailboxes.BorderStyle = 'None'
	$labelsharedmailboxes.Location = '13, 6'
	$labelsharedmailboxes.Margin = '6, 6, 6, 6'
	$labelsharedmailboxes.Multiline = $True
	$labelsharedmailboxes.Name = 'labelsharedmailboxes'
	$labelsharedmailboxes.Size = '906, 57'
	$labelsharedmailboxes.TabIndex = 0
	#
	# checkedlistboxsharedmailboxes
	#
	$checkedlistboxsharedmailboxes.CheckOnClick = $True
	$checkedlistboxsharedmailboxes.FormattingEnabled = $True
	$checkedlistboxsharedmailboxes.Location = '13, 181'
	$checkedlistboxsharedmailboxes.Margin = '13, 12, 13, 12'
	$checkedlistboxsharedmailboxes.Name = 'checkedlistboxsharedmailboxes'
	$checkedlistboxsharedmailboxes.Size = '906, 490'
	$checkedlistboxsharedmailboxes.Sorted = $True
	$checkedlistboxsharedmailboxes.TabIndex = 1
	$checkedlistboxsharedmailboxes.UseCompatibleTextRendering = $True
	#
	# tabpageO365Attributes
	#
	$tabpageO365Attributes.Controls.Add($labelHideFromGlobalAddres)
	$tabpageO365Attributes.Controls.Add($comboboxO365HidefromGAL)
	$tabpageO365Attributes.Location = '8, 40'
	$tabpageO365Attributes.Margin = '6, 6, 6, 6'
	$tabpageO365Attributes.Name = 'tabpageO365Attributes'
	$tabpageO365Attributes.Size = '932, 708'
	$tabpageO365Attributes.TabIndex = 5
	$tabpageO365Attributes.Text = 'Attributes'
	$tabpageO365Attributes.UseVisualStyleBackColor = $True
	#
	# labelHideFromGlobalAddres
	#
	$labelHideFromGlobalAddres.AutoSize = $True
	$labelHideFromGlobalAddres.Location = '28, 32'
	$labelHideFromGlobalAddres.Margin = '13, 0, 13, 0'
	$labelHideFromGlobalAddres.Name = 'labelHideFromGlobalAddres'
	$labelHideFromGlobalAddres.Size = '308, 31'
	$labelHideFromGlobalAddres.TabIndex = 37
	$labelHideFromGlobalAddres.Text = 'Hide from Global Address List'
	$labelHideFromGlobalAddres.UseCompatibleTextRendering = $True
	#
	# comboboxO365HidefromGAL
	#
	$comboboxO365HidefromGAL.DropDownStyle = 'DropDownList'
	$comboboxO365HidefromGAL.FormattingEnabled = $True
	[void]$comboboxO365HidefromGAL.Items.Add('True')
	[void]$comboboxO365HidefromGAL.Items.Add('False')
	$comboboxO365HidefromGAL.Location = '640, 29'
	$comboboxO365HidefromGAL.Margin = '6, 6, 6, 6'
	$comboboxO365HidefromGAL.Name = 'comboboxO365HidefromGAL'
	$comboboxO365HidefromGAL.Size = '258, 34'
	$comboboxO365HidefromGAL.TabIndex = 0
	#
	# groupboxADSync
	#
	$groupboxADSync.Controls.Add($checkboxRunDirSyncAfterUserC)
	$groupboxADSync.Location = '13, 12'
	$groupboxADSync.Margin = '6, 6, 6, 6'
	$groupboxADSync.Name = 'groupboxADSync'
	$groupboxADSync.Padding = '6, 6, 6, 6'
	$groupboxADSync.Size = '973, 90'
	$groupboxADSync.TabIndex = 1
	$groupboxADSync.TabStop = $False
	$groupboxADSync.Text = 'ADSync'
	$groupboxADSync.UseCompatibleTextRendering = $True
	#
	# checkboxRunDirSyncAfterUserC
	#
	$checkboxRunDirSyncAfterUserC.Location = '22, 30'
	$checkboxRunDirSyncAfterUserC.Margin = '6, 6, 6, 6'
	$checkboxRunDirSyncAfterUserC.Name = 'checkboxRunDirSyncAfterUserC'
	$checkboxRunDirSyncAfterUserC.Size = '939, 48'
	$checkboxRunDirSyncAfterUserC.TabIndex = 0
	$checkboxRunDirSyncAfterUserC.Text = 'Run DirSync After User Creation'
	$tooltip1.SetToolTip($checkboxRunDirSyncAfterUserC, 'Automatically run a full ADSync. Disabled if module is not found on this system.')
	$checkboxRunDirSyncAfterUserC.UseCompatibleTextRendering = $True
	$checkboxRunDirSyncAfterUserC.UseVisualStyleBackColor = $True
	$checkboxRunDirSyncAfterUserC.add_CheckedChanged($checkboxRunDirSyncAfterUserC_CheckedChanged)
	#
	# menustrip1
	#
	$menustrip1.ImageScalingSize = '32, 32'
	[void]$menustrip1.Items.Add($fileToolStripMenuItem)
	[void]$menustrip1.Items.Add($editToolStripMenuItem)
	[void]$menustrip1.Items.Add($helpToolStripMenuItem)
	$menustrip1.Location = '0, 0'
	$menustrip1.Name = 'menustrip1'
	$menustrip1.Padding = '13, 4, 0, 4'
	$menustrip1.Size = '1067, 44'
	$menustrip1.TabIndex = 4
	$menustrip1.Text = 'menustrip1'
	#
	# fileToolStripMenuItem
	#
	[void]$fileToolStripMenuItem.DropDownItems.Add($disconnectFromOffice365ToolStripMenuItem)
	[void]$fileToolStripMenuItem.DropDownItems.Add($toolstripseparator1)
	[void]$fileToolStripMenuItem.DropDownItems.Add($saveLogAsToolStripMenuItem)
	[void]$fileToolStripMenuItem.DropDownItems.Add($resetFormToolStripMenuItem)
	[void]$fileToolStripMenuItem.DropDownItems.Add($exitToolStripMenuItem)
	$fileToolStripMenuItem.Name = 'fileToolStripMenuItem'
	$fileToolStripMenuItem.Size = '63, 36'
	$fileToolStripMenuItem.Text = 'File'
	#
	# exitToolStripMenuItem
	#
	$exitToolStripMenuItem.Name = 'exitToolStripMenuItem'
	$exitToolStripMenuItem.Size = '405, 38'
	$exitToolStripMenuItem.Text = 'Exit'
	$exitToolStripMenuItem.add_Click($exitToolStripMenuItem_Click)
	#
	# editToolStripMenuItem
	#
	[void]$editToolStripMenuItem.DropDownItems.Add($copyAllLogToClipboardToolStripMenuItem)
	[void]$editToolStripMenuItem.DropDownItems.Add($clearLogToolStripMenuItem)
	$editToolStripMenuItem.Name = 'editToolStripMenuItem'
	$editToolStripMenuItem.Size = '66, 36'
	$editToolStripMenuItem.Text = 'Edit'
	#
	# tooltip1
	#
	#
	# copyAllLogToClipboardToolStripMenuItem
	#
	$copyAllLogToClipboardToolStripMenuItem.Name = 'copyAllLogToClipboardToolStripMenuItem'
	$copyAllLogToClipboardToolStripMenuItem.Size = '352, 38'
	$copyAllLogToClipboardToolStripMenuItem.Text = 'Copy Log to Clipboard'
	$copyAllLogToClipboardToolStripMenuItem.add_Click($copyAllLogToClipboardToolStripMenuItem_Click)
	#
	# clearLogToolStripMenuItem
	#
	$clearLogToolStripMenuItem.Name = 'clearLogToolStripMenuItem'
	$clearLogToolStripMenuItem.Size = '352, 38'
	$clearLogToolStripMenuItem.Text = 'Clear Log'
	$clearLogToolStripMenuItem.add_Click($clearLogToolStripMenuItem_Click)
	#
	# resetFormToolStripMenuItem
	#
	$resetFormToolStripMenuItem.Name = 'resetFormToolStripMenuItem'
	$resetFormToolStripMenuItem.Size = '405, 38'
	$resetFormToolStripMenuItem.Text = 'Reset Form'
	$resetFormToolStripMenuItem.add_Click($resetFormToolStripMenuItem_Click)
	#
	# disconnectFromOffice365ToolStripMenuItem
	#
	$disconnectFromOffice365ToolStripMenuItem.Name = 'disconnectFromOffice365ToolStripMenuItem'
	$disconnectFromOffice365ToolStripMenuItem.Size = '405, 38'
	$disconnectFromOffice365ToolStripMenuItem.Text = 'Disconnect from Office 365'
	$disconnectFromOffice365ToolStripMenuItem.add_Click($disconnectFromOffice365ToolStripMenuItem_Click)
	#
	# toolstripseparator1
	#
	$toolstripseparator1.Name = 'toolstripseparator1'
	$toolstripseparator1.Size = '402, 6'
	#
	# saveLogAsToolStripMenuItem
	#
	$saveLogAsToolStripMenuItem.ImageAlign = 'MiddleLeft'
	$saveLogAsToolStripMenuItem.Name = 'saveLogAsToolStripMenuItem'
	$saveLogAsToolStripMenuItem.Size = '405, 38'
	$saveLogAsToolStripMenuItem.Text = 'Save Log File As'
	$saveLogAsToolStripMenuItem.add_Click($saveLogAsToolStripMenuItem_Click)
	#
	# helpToolStripMenuItem
	#
	[void]$helpToolStripMenuItem.DropDownItems.Add($versionToolStripMenuItem)
	$helpToolStripMenuItem.Name = 'helpToolStripMenuItem'
	$helpToolStripMenuItem.Size = '76, 36'
	$helpToolStripMenuItem.Text = 'Help'
	#
	# versionToolStripMenuItem
	#
	$versionToolStripMenuItem.Name = 'versionToolStripMenuItem'
	$versionToolStripMenuItem.Size = '268, 38'
	$versionToolStripMenuItem.Text = 'Version'
	$versionToolStripMenuItem.add_Click($versionToolStripMenuItem_Click)
	$menustrip1.ResumeLayout()
	$groupboxADSync.ResumeLayout()
	$tabpageO365Attributes.ResumeLayout()
	$groupbox3.ResumeLayout()
	$tabpageo365shared.ResumeLayout()
	$tabpagesecurityGroups.ResumeLayout()
	$tabpageO365Groups.ResumeLayout()
	$tabpageO365Address.ResumeLayout()
	$panel4.ResumeLayout()
	$tabpageO365Account.ResumeLayout()
	$panel3.ResumeLayout()
	$tabpageO365General.ResumeLayout()
	$tabcontrol2.ResumeLayout()
	$groupboxNoAdSync.ResumeLayout()
	$tabpageOffice365.ResumeLayout()
	$tabpageattributes.ResumeLayout()
	$groupboxuserprofile.ResumeLayout()
	$groupbox2.ResumeLayout()
	$tabpageProfile.ResumeLayout()
	$tabpageOrganization.ResumeLayout()
	$tabpageGroups.ResumeLayout()
	$tabpageAddress.ResumeLayout()
	$panel2.ResumeLayout()
	$tabpageAccount.ResumeLayout()
	$panel1.ResumeLayout()
	$tabpageGeneral.ResumeLayout()
	$tabcontrolUserProperties.ResumeLayout()
	$tabpage1.ResumeLayout()
	$groupboxOffice365User.ResumeLayout()
	$groupboxADUser.ResumeLayout()
	$groupbox2FA.ResumeLayout()
	$groupbox1.ResumeLayout()
	$tabpageSettings.ResumeLayout()
	$tabcontrol1.ResumeLayout()
	$MainForm.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $MainForm.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$MainForm.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$MainForm.add_FormClosed($Form_Cleanup_FormClosed)
	#Store the control values when form is closing
	$MainForm.add_Closing($Form_StoreValues_Closing)
	#Show the Form
	return $MainForm.ShowDialog()

}
#endregion Source: MainForm.psf

#region Source: Globals.ps1
	#--------------------------------------------
	# Declare Global Variables and Functions here
	#--------------------------------------------
	
	
	#Sample function that provides the location of the script
	function Get-ScriptDirectory
	{
	<#
		.SYNOPSIS
			Get-ScriptDirectory returns the proper location of the script.
	
		.OUTPUTS
			System.String
		
		.NOTES
			Returns the correct path within a packaged executable.
	#>
		[OutputType([string])]
		param ()
		if ($null -ne $hostinvocation)
		{
			Split-Path $hostinvocation.MyCommand.path
		}
		else
		{
			Split-Path $script:MyInvocation.MyCommand.Path
		}
	}
	
	
	$Version = "1.0.0"
	$BuildDate = "Tuesday, July 10th, 2018"
	
	
	$Sku = @{
		"O365_BUSINESS_ESSENTIALS"		     = "Office 365 Business Essentials"
		"O365_BUSINESS_PREMIUM"			     = "Office 365 Business Premium"
		"DESKLESSPACK"					     = "Office 365 (Plan K1)"
		"DESKLESSWOFFPACK"				     = "Office 365 (Plan K2)"
		"LITEPACK"						     = "Office 365 (Plan P1)"
		"EXCHANGESTANDARD"				     = "Office 365 Exchange Online Only"
		"STANDARDPACK"					     = "Enterprise Plan E1"
		"STANDARDWOFFPACK"				     = "Office 365 (Plan E2)"
		"ENTERPRISEPACK"					 = "Enterprise Plan E3"
		"ENTERPRISEPACKLRG"				     = "Enterprise Plan E3"
		"ENTERPRISEWITHSCAL"				 = "Enterprise Plan E4"
		"STANDARDPACK_STUDENT"			     = "Office 365 (Plan A1) for Students"
		"STANDARDWOFFPACKPACK_STUDENT"	     = "Office 365 (Plan A2) for Students"
		"ENTERPRISEPACK_STUDENT"			 = "Office 365 (Plan A3) for Students"
		"ENTERPRISEWITHSCAL_STUDENT"		 = "Office 365 (Plan A4) for Students"
		"STANDARDPACK_FACULTY"			     = "Office 365 (Plan A1) for Faculty"
		"STANDARDWOFFPACKPACK_FACULTY"	     = "Office 365 (Plan A2) for Faculty"
		"ENTERPRISEPACK_FACULTY"			 = "Office 365 (Plan A3) for Faculty"
		"ENTERPRISEWITHSCAL_FACULTY"		 = "Office 365 (Plan A4) for Faculty"
		"ENTERPRISEPACK_B_PILOT"			 = "Office 365 (Enterprise Preview)"
		"STANDARD_B_PILOT"				     = "Office 365 (Small Business Preview)"
		"VISIOCLIENT"					     = "Visio Pro Online"
		"POWER_BI_ADDON"					 = "Office 365 Power BI Addon"
		"POWER_BI_INDIVIDUAL_USE"		     = "Power BI Individual User"
		"POWER_BI_STANDALONE"			     = "Power BI Stand Alone"
		"POWER_BI_STANDARD"				     = "Power-BI Standard"
		"PROJECTESSENTIALS"				     = "Project Lite"
		"PROJECTCLIENT"					     = "Project Professional"
		"PROJECTONLINE_PLAN_1"			     = "Project Online"
		"PROJECTONLINE_PLAN_2"			     = "Project Online and PRO"
		"ProjectPremium"					 = "Project Online Premium"
		"ECAL_SERVICES"					     = "ECAL"
		"EMS"							     = "Enterprise Mobility Suite"
		"RIGHTSMANAGEMENT_ADHOC"			 = "Windows Azure Rights Management"
		"MCOMEETADV"						 = "PSTN conferencing"
		"SHAREPOINTSTORAGE"				     = "SharePoint storage"
		"PLANNERSTANDALONE"				     = "Planner Standalone"
		"CRMIUR"							 = "CMRIUR"
		"BI_AZURE_P1"					     = "Power BI Reporting and Analytics"
		"INTUNE_A"						     = "Windows Intune Plan A"
		"PROJECTWORKMANAGEMENT"			     = "Office 365 Planner Preview"
		"ATP_ENTERPRISE"					 = "Exchange Online Advanced Threat Protection"
		"EQUIVIO_ANALYTICS"				     = "Office 365 Advanced eDiscovery"
		"AAD_BASIC"						     = "Azure Active Directory Basic"
		"RMS_S_ENTERPRISE"				     = "Azure Active Directory Rights Management"
		"AAD_PREMIUM"					     = "Azure Active Directory Premium"
		"MFA_PREMIUM"					     = "Azure Multi-Factor Authentication"
		"STANDARDPACK_GOV"				     = "Microsoft Office 365 (Plan G1) for Government"
		"STANDARDWOFFPACK_GOV"			     = "Microsoft Office 365 (Plan G2) for Government"
		"ENTERPRISEPACK_GOV"				 = "Microsoft Office 365 (Plan G3) for Government"
		"ENTERPRISEWITHSCAL_GOV"			 = "Microsoft Office 365 (Plan G4) for Government"
		"DESKLESSPACK_GOV"				     = "Microsoft Office 365 (Plan K1) for Government"
		"ESKLESSWOFFPACK_GOV"			     = "Microsoft Office 365 (Plan K2) for Government"
		"EXCHANGESTANDARD_GOV"			     = "Microsoft Office 365 Exchange Online (Plan 1) only for Government"
		"EXCHANGEENTERPRISE_GOV"			 = "Microsoft Office 365 Exchange Online (Plan 2) only for Government"
		"SHAREPOINTDESKLESS_GOV"			 = "SharePoint Online Kiosk"
		"EXCHANGE_S_DESKLESS_GOV"		     = "Exchange Kiosk"
		"RMS_S_ENTERPRISE_GOV"			     = "Windows Azure Active Directory Rights Management"
		"OFFICESUBSCRIPTION_GOV"			 = "Office ProPlus"
		"MCOSTANDARD_GOV"				     = "Lync Plan 2G"
		"SHAREPOINTWAC_GOV"				     = "Office Online for Government"
		"SHAREPOINTENTERPRISE_GOV"		     = "SharePoint Plan 2G"
		"EXCHANGE_S_ENTERPRISE_GOV"		     = "Exchange Plan 2G"
		"EXCHANGE_S_ARCHIVE_ADDON_GOV"	     = "Exchange Online Archiving"
		"EXCHANGE_S_DESKLESS"			     = "Exchange Online Kiosk"
		"SHAREPOINTDESKLESS"				 = "SharePoint Online Kiosk"
		"SHAREPOINTWAC"					     = "Office Online"
		"YAMMER_ENTERPRISE"				     = "Yammer for the Starship Enterprise"
		"EXCHANGE_L_STANDARD"			     = "Exchange Online (Plan 1)"
		"MCOLITE"						     = "Lync Online (Plan 1)"
		"SHAREPOINTLITE"					 = "SharePoint Online (Plan 1)"
		"OFFICE_PRO_PLUS_SUBSCRIPTION_SMBIZ" = "Office ProPlus"
		"EXCHANGE_S_STANDARD_MIDMARKET"	     = "Exchange Online (Plan 1)"
		"MCOSTANDARD_MIDMARKET"			     = "Lync Online (Plan 1)"
		"SHAREPOINTENTERPRISE_MIDMARKET"	 = "SharePoint Online (Plan 1)"
		"OFFICESUBSCRIPTION"				 = "Office ProPlus"
		"YAMMER_MIDSIZE"					 = "Yammer"
		"DYN365_ENTERPRISE_PLAN1"		     = "Dynamics 365 Customer Engagement Plan Enterprise Edition"
		"ENTERPRISEPREMIUM_NOPSTNCONF"	     = "Enterprise E5 (without Audio Conferencing)"
		"ENTERPRISEPREMIUM"				     = "Enterprise E5 (with Audio Conferencing)"
		"MCOSTANDARD"					     = "Skype for Business Online Standalone Plan 2"
		"PROJECT_MADEIRA_PREVIEW_IW_SKU"	 = "Dynamics 365 for Financials for IWs"
		"STANDARDWOFFPACK_IW_STUDENT"	     = "Office 365 Education for Students"
		"STANDARDWOFFPACK_IW_FACULTY"	     = "Office 365 Education for Faculty"
		"EOP_ENTERPRISE_FACULTY"			 = "Exchange Online Protection for Faculty"
		"EXCHANGESTANDARD_STUDENT"		     = "Exchange Online (Plan 1) for Students"
		"OFFICESUBSCRIPTION_STUDENT"		 = "Office ProPlus Student Benefit"
		"STANDARDWOFFPACK_FACULTY"		     = "Office 365 Education E1 for Faculty"
		"STANDARDWOFFPACK_STUDENT"		     = "Microsoft Office 365 (Plan A2) for Students"
		"DYN365_FINANCIALS_BUSINESS_SKU"	 = "Dynamics 365 for Financials Business Edition"
		"DYN365_FINANCIALS_TEAM_MEMBERS_SKU" = "Dynamics 365 for Team Members Business Edition"
		"FLOW_FREE"						     = "Microsoft Flow Free"
		"POWER_BI_PRO"					     = "Power BI Pro"
		"O365_BUSINESS"					     = "Office 365 Business"
		"DYN365_ENTERPRISE_SALES"		     = "Dynamics Office 365 Enterprise Sales"
		"RIGHTSMANAGEMENT"				     = "Rights Management"
		"PROJECTPROFESSIONAL"			     = "Project Professional"
		"VISIOONLINE_PLAN1"				     = "Visio Online Plan 1"
		"EXCHANGEENTERPRISE"				 = "Exchange Online Plan 2"
		"DYN365_ENTERPRISE_P1_IW"		     = "Dynamics 365 P1 Trial for Information Workers"
		"DYN365_ENTERPRISE_TEAM_MEMBERS"	 = "Dynamics 365 For Team Members Enterprise Edition"
		"CRMSTANDARD"					     = "Microsoft Dynamics CRM Online Professional"
		"EXCHANGEARCHIVE_ADDON"			     = "Exchange Online Archiving For Exchange Online"
		"EXCHANGEDESKLESS"				     = "Exchange Online Kiosk"
		"SPZA_IW"						     = "App Connect"
		"WINDOWS_STORE"					     = "Windows Store for Business"
		"MCOEV"							     = "Microsoft Phone System"
		"VIDEO_INTEROP"					     = "Polycom Skype Meeting Video Interop for Skype for Business"
		"SPE_E5"							 = "Microsoft 365 E5"
		"SPE_E3"							 = "Microsoft 365 E3"
		"ATA"							     = "Advanced Threat Analytics"
		"MCOPSTN2"						     = "Domestic and International Calling Plan"
		"FLOW_P1"						     = "Microsoft Flow Plan 1"
		"FLOW_P2"						     = "Microsoft Flow Plan 2"
	}
	
	Import-Module ActiveDirectory -ErrorAction SilentlyContinue
	Import-Module ADSync -ErrorAction SilentlyContinue
	$ADSyncModule = Get-Module | Where-Object { $_.Name -eq "ADSync" } -ErrorAction SilentlyContinue
	
	#region Get-DateSortable
	function Get-datesortable
	{
		$global:datesortable = Get-Date -Format "HH':'mm':'ss"
		return $global:datesortable
	}#endregion Get-DateSortable
	
	#region Add-Logs
	function Add-Logs
	{
		[CmdletBinding()]
		param ($text)
		Get-datesortable
		$console.Text += "[$global:datesortable] - $text
"
		Set-Alias alogs Add-Logs -Description "Add content to the TextBoxLogs"
		Set-Alias Add-Log Add-Logs -Description "Add content to the TextBoxLogs"
	}#endregion Add Logs
	
	#Sample variable that provides the location of the script
	[string]$ScriptDirectory = Get-ScriptDirectory
	
	
	
#endregion Source: Globals.ps1

#region Source: ChildForm.psf
function Show-ChildForm_psf
{
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
XAMAAB+LCAAAAAAABABlk0ePo1oQhfdI/IfWbK80JEfJ3RLBgDHBJGO8I1xyzvDrX0+/zUhTq6M6
qs05X10MGNQT7FbOG7yPb9GndfX5i/pN/PpCkY+Pi9alcVp5BZ8WUPVK+MUmaRHydVf+bvrogv3j
/1z98b+SouYJVcf9OaZpVuNY+v9haE7NCWLCN9pORmAAGjjyMb2D5kocTd80OTO7jo3QHjzbBHqe
nH2lNyc/dp8Rimx4ZZm35blc1bTmU6d6b+L+RC3wJBUgtlfvcH/JcyyVM7kQulCq91JJPJnKgyGI
LO08hhKvUFNOsfCBIv716nejgRPMZGd4lNpDYs6EwXqWbYlF+Wwh96bbVh1jZW+ZgcWXFgPFhFBc
mdkbdpEnjgssDfIA7FFk1UbuHlRtE7x3Qjo0g3EXxNFJd9LTYc4sqdX8ZLajmdHlbh+/bk68Clx6
Ou1qjIuSyV/CQysKMb4QZogiFjvvTGmaj3OqJKT2YMSjzob4OkHNNJoAai6h7TlKU8VGL/Jd2dub
X1hy4P4J/v4dPDsKIdxAN1MBiji41b4049R3YXR6L9b5RqTAxNrH8Jrmabe0uXPYLLvrnq+1O/fd
w3u/5epYddwD5GoBPaNTeVV2aXIEKEJuYNwLj7HMtCQs+7mV3sK6s7mgVVZiWD0Ri6Gg2xlzSAne
72aVWeOlSAbdWOllnLjApGQpEIQGnnMU4aboNl71KIrgnXejl1XWQLglzyBg0kaXWkiTriVq+/rM
CwVgyEXy/Lyurs/vmmV5lAsvm4A5R+ekf6EIdoAwaypF59ZHR6qOkDG+VCVAGceAhap5qoMQdxJg
F1DBlHILXWebOGzKFNHSevWN+9iQNSfyGEpXFHnMNO5QgfZDMf35ecF+4P7BnO57WPpFCvsP7Htz
wf7+pq//APYIHNhcAwAA#>
#endregion
	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$formChildForm = New-Object 'System.Windows.Forms.Form'
	$buttonOK = New-Object 'System.Windows.Forms.Button'
	$buttonCancel = New-Object 'System.Windows.Forms.Button'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	
	$formChildForm_Load={
		#TODO: Initialize Form Controls here
		
	}
	
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$formChildForm.WindowState = $InitialFormWindowState
	}
	
	$Form_StoreValues_Closing=
	{
		#Store the control values
	}

	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$formChildForm.remove_Load($formChildForm_Load)
			$formChildForm.remove_Load($Form_StateCorrection_Load)
			$formChildForm.remove_Closing($Form_StoreValues_Closing)
			$formChildForm.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$formChildForm.SuspendLayout()
	#
	# formChildForm
	#
	$formChildForm.Controls.Add($buttonOK)
	$formChildForm.Controls.Add($buttonCancel)
	$formChildForm.AutoScaleDimensions = '13, 26'
	$formChildForm.AutoScaleMode = 'Font'
	$formChildForm.ClientSize = '616, 525'
	$formChildForm.Margin = '8, 8, 8, 8'
	$formChildForm.Name = 'formChildForm'
	$formChildForm.StartPosition = 'CenterParent'
	$formChildForm.Text = 'Child Form'
	$formChildForm.add_Load($formChildForm_Load)
	#
	# buttonOK
	#
	$buttonOK.Anchor = 'Bottom, Right'
	$buttonOK.DialogResult = 'OK'
	$buttonOK.Location = '252, 454'
	$buttonOK.Margin = '6, 6, 6, 6'
	$buttonOK.Name = 'buttonOK'
	$buttonOK.Size = '162, 46'
	$buttonOK.TabIndex = 1
	$buttonOK.Text = '&OK'
	$buttonOK.UseCompatibleTextRendering = $True
	$buttonOK.UseVisualStyleBackColor = $True
	#
	# buttonCancel
	#
	$buttonCancel.Anchor = 'Bottom, Right'
	$buttonCancel.CausesValidation = $False
	$buttonCancel.DialogResult = 'Cancel'
	$buttonCancel.Location = '427, 454'
	$buttonCancel.Margin = '6, 6, 6, 6'
	$buttonCancel.Name = 'buttonCancel'
	$buttonCancel.Size = '162, 46'
	$buttonCancel.TabIndex = 0
	$buttonCancel.Text = '&Cancel'
	$buttonCancel.UseCompatibleTextRendering = $True
	$buttonCancel.UseVisualStyleBackColor = $True
	$formChildForm.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $formChildForm.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$formChildForm.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$formChildForm.add_FormClosed($Form_Cleanup_FormClosed)
	#Store the control values when form is closing
	$formChildForm.add_Closing($Form_StoreValues_Closing)
	#Show the Form
	return $formChildForm.ShowDialog()

}
#endregion Source: ChildForm.psf

#region Source: MessageBox.psf
function Show-MessageBox_psf
{
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
ywMAAB+LCAAAAAAABABlk8muoloUQOcm/sNNTUmKXiWxbkIrICCgtLMD0klz4CAIfn357pu85O3R
zs7ukpV1dLMUzhlaJfAEX59krGD35xf9m/z1vd18fR0vqCqqDjRK1WQWaLNvMxtHUGQCXH73Y37E
/9fwM6ZA1H4vksmQ+nVt+ILnxYsk8v+GwIukf39OVM07OcC9fC8dCDFFkan7gjcLAFzPsiA5nKEA
tGavdwjDPWCTnXWnt5tcseAtGxoP3hb3xnbs9B7bXGHkkFBBd3vhPf14aKO6LG/aVNXQpYhiytHZ
FRd8N4z7ITaqvdR1YdddthttfVi9XhKIQ/GbtsVGf3ovz+VBeSs7ZJnaYQ8ljUkwZ6nkgjj18n2f
hxxBRyGVXpxdUV0jzOkeGGCl7ebOvFWxU6az5rt1O9IN04gNgSYnbh7XpCoVO27bEj7cyBdIfsh4
u/auTeXxS/QmqcYv/N7vrbTqCTBtN+dMea2L5lC57pQq/rzEFGaH6RTRonQhF1lb81rS3HgkOe3E
71ZbJ0ttbRFOXoeTdQOq2gZVSRRzG8jbzUoRj8zbew38HAwZFcc7v+jiQkyHdC3sViP/4RV8eNV2
pgKJ5jGLMrxyrdYmhnFjFNXyaApnKITPNo1OJYG1n7WMBkI+4KZy1ic2rY3ZP6zYXkX58hQCeurW
l4tm3ArWQkBpHWhdV+i8gSEKDD5lnXeqCbebyXcnk89csu7XslOHuUj73eOZsNxiXOHw3BVvm3ta
eIZ7ppzO2kW4wGSwric6UA44M8BXMCcKiZcmOmw3qPBLZ2fYWhGP1c0MkiW4jPM9NB07pxVmrnHn
+kGoTePTtOJQW0Zcq1qS5mIlYpfglvAeIBMkRB1wP7/lSFJbVkFvVgn395Cm7fOLg9D3TqOaGTSR
cPf25cxC2yXQtnQOyjXGcAFALBRPwbpQuqJKxio+xHi7iVod0VcYMb3aN7Z4wAnstJAdprIMloFy
uud8EjiKBnRH+6jy54j/qPQjFT+OWZs0VTZ+4Z/KEf+vvN9/AVow933LAwAA#>
#endregion
	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$form1 = New-Object 'System.Windows.Forms.Form'
	$messageboxlabel = New-Object 'System.Windows.Forms.TextBox'
	$buttonOK = New-Object 'System.Windows.Forms.Button'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	$form1_Load={
		$messageboxlabel.Text = $InfoMessage
		$form1.Text = $InfoTitle
		
	}
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$form1.WindowState = $InitialFormWindowState
	}
	
	$Form_StoreValues_Closing=
	{
		#Store the control values
		$script:MessageBox_messageboxlabel = $messageboxlabel.Text
	}

	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$form1.remove_Load($form1_Load)
			$form1.remove_Load($Form_StateCorrection_Load)
			$form1.remove_Closing($Form_StoreValues_Closing)
			$form1.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$form1.SuspendLayout()
	#
	# form1
	#
	$form1.Controls.Add($messageboxlabel)
	$form1.Controls.Add($buttonOK)
	$form1.AcceptButton = $buttonOK
	$form1.AutoScaleDimensions = '13, 26'
	$form1.AutoScaleMode = 'Font'
	$form1.ClientSize = '873, 228'
	$form1.FormBorderStyle = 'FixedDialog'
	$form1.Margin = '13, 12, 13, 12'
	$form1.MaximizeBox = $False
	$form1.MinimizeBox = $False
	$form1.Name = 'form1'
	$form1.StartPosition = 'CenterScreen'
	$form1.Text = 'Form'
	$form1.add_Load($form1_Load)
	#
	# messageboxlabel
	#
	$messageboxlabel.BackColor = 'Menu'
	$messageboxlabel.BorderStyle = 'None'
	$messageboxlabel.Location = '28, 26'
	$messageboxlabel.Margin = '13, 12, 13, 12'
	$messageboxlabel.Multiline = $True
	$messageboxlabel.Name = 'messageboxlabel'
	$messageboxlabel.Size = '819, 114'
	$messageboxlabel.TabIndex = 1
	#
	# buttonOK
	#
	$buttonOK.Anchor = 'Bottom, Right'
	$buttonOK.DialogResult = 'OK'
	$buttonOK.Location = '685, 158'
	$buttonOK.Margin = '6, 6, 6, 6'
	$buttonOK.Name = 'buttonOK'
	$buttonOK.Size = '162, 46'
	$buttonOK.TabIndex = 0
	$buttonOK.Text = '&OK'
	$buttonOK.UseCompatibleTextRendering = $True
	$buttonOK.UseVisualStyleBackColor = $True
	$form1.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $form1.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$form1.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$form1.add_FormClosed($Form_Cleanup_FormClosed)
	#Store the control values when form is closing
	$form1.add_Closing($Form_StoreValues_Closing)
	#Show the Form
	return $form1.ShowDialog()

}
#endregion Source: MessageBox.psf

#Start the application
Main ($CommandLine)
