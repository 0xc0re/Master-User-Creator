#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: 46747728-ffe8-444b-ac66-f10472371add
# Source File: C:\Users\brw18\OneDrive - bwya77\SurfaceBook\Documents\GitHub\AD-Master-User-Creator\NewADUser.psproj
#------------------------------------------------------------------------
#region Project Recovery Data (DO NOT MODIFY)
<#RecoveryData:
9QIAAB+LCAAAAAAABACdUl1PwjAUfSfhPyx9NBljuDASRxORzPAgGoa+mrLdsWnXLm3Hh7/ebh2I
QaLx5banPT3nfjRYQMw3IPZTogjudiwreBL8DWJlRXsWZ4Kz/AOSMQoJlYCawzCnCsQYXfVK6d7U
sTBLYhZ3V9BmkzZR6mhOMqBlT+0Uaoy01QsImXOGB71+4BxAe6ddYDbF3tD3fH8wstMURrbneSub
xMOhnbp9zx9c+y5JksBpye3TtoLlvgSshU/hQZzTRNtZzqmbbEELrUmVU115H+FIEaGqsi7GeF1i
WgtIQQCLIaxYrHQ5YxRlfGs/kJyFXBSvuisIH1Ddo18Eo4yIuv9LUcGP8jO24e9g31O+IlTLuwib
vaxH8c907zLN+Mr3CP+Q8MUOgJRkDRO+a3twxGeiBphxHMdn0KPI1zkjtCbMSQF4Dtvb6bMEoVVK
zQycM0q3EzjfvvkneZV9wPUCAAA=#>
#endregion
<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2018 v5.5.153
     Generated on:       7/10/2018 2:23 PM
     Generated by:       brw18
    --------------------------------------------------------------------------------
    .DESCRIPTION
        Script generated by PowerShell Studio 2018
#>



#region Source: Startup.pss
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
YQAAAB+LCAAAAAAABACzCUpNzi9LLap0SSxJVAAyijPz82yVjPUMlex4uRQUbPyLMtMz8xJz3DJz
Uv0Sc1PtgksSi0pKC/QKiott9DFkebls9JGNtAMAoyFkEGEAAAA=#>
#endregion
#----------------------------------------------
#region Import Assemblies
#----------------------------------------------
#endregion Import Assemblies

#Define a Param block to use custom parameters in the project
#Param ($CustomParameter)

function Main {
<#
    .SYNOPSIS
        The Main function starts the project application.
    
    .PARAMETER Commandline
        $Commandline contains the complete argument string passed to the script packager executable.
    
    .NOTES
        Use this function to initialize your script and to call GUI forms.
		
    .NOTES
        To get the console output in the Packager (Forms Engine) use: 
		$ConsoleOutput (Type: System.Collections.ArrayList)
#>
	Param ([String]$Commandline)
		
	#--------------------------------------------------------------------------
	#TODO: Add initialization script here (Load modules and check requirements)
	
	
	#--------------------------------------------------------------------------
	
	if((Show-MainForm_psf) -eq 'OK')
	{
		
	}
	
	$script:ExitCode = 0 #Set the exit code for the Packager
}



#endregion Source: Startup.pss

#region Source: MainForm.psf
function Show-MainForm_psf
{
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
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
v4Lp4GMY//c/aAK+DBeNAAA=#>
#endregion
	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$MainForm = New-Object 'System.Windows.Forms.Form'
	$console = New-Object 'System.Windows.Forms.TextBox'
	$buttonExit = New-Object 'System.Windows.Forms.Button'
	$buttonCreateUser = New-Object 'System.Windows.Forms.Button'
	$tabcontrol1 = New-Object 'System.Windows.Forms.TabControl'
	$tabpageSettings = New-Object 'System.Windows.Forms.TabPage'
	$groupbox1 = New-Object 'System.Windows.Forms.GroupBox'
	$label100 = New-Object 'System.Windows.Forms.Label'
	$linklabelBradWyatt = New-Object 'System.Windows.Forms.LinkLabel'
	$linklabelGitHubProject = New-Object 'System.Windows.Forms.LinkLabel'
	$labelAuthor = New-Object 'System.Windows.Forms.Label'
	$labelVersion = New-Object 'System.Windows.Forms.Label'
	$groupbox2FA = New-Object 'System.Windows.Forms.GroupBox'
	$radiobuttonEnableMFA = New-Object 'System.Windows.Forms.RadioButton'
	$radiobuttonDisableMFA = New-Object 'System.Windows.Forms.RadioButton'
	$groupboxADUser = New-Object 'System.Windows.Forms.GroupBox'
	$checkboxCreateActiveDirector = New-Object 'System.Windows.Forms.CheckBox'
	$groupboxOffice365User = New-Object 'System.Windows.Forms.GroupBox'
	$checkboxconfigo365user = New-Object 'System.Windows.Forms.CheckBox'
	$tabpage1 = New-Object 'System.Windows.Forms.TabPage'
	$tabcontrolUserProperties = New-Object 'System.Windows.Forms.TabControl'
	$tabpageGeneral = New-Object 'System.Windows.Forms.TabPage'
	$panel1 = New-Object 'System.Windows.Forms.Panel'
	$maskedtextboxpassword = New-Object 'System.Windows.Forms.TextBox'
	$buttonClear = New-Object 'System.Windows.Forms.Button'
	$labelpasswordconfirmmessage = New-Object 'System.Windows.Forms.Label'
	$textboxConfirmPassword = New-Object 'System.Windows.Forms.TextBox'
	$labelConfirmPassword = New-Object 'System.Windows.Forms.Label'
	$buttonGeneratePassword = New-Object 'System.Windows.Forms.Button'
	$textboxPasswordGen = New-Object 'System.Windows.Forms.TextBox'
	$labelPassword = New-Object 'System.Windows.Forms.Label'
	$labelWebPage = New-Object 'System.Windows.Forms.Label'
	$labelEMail = New-Object 'System.Windows.Forms.Label'
	$labelTelephoneNumber = New-Object 'System.Windows.Forms.Label'
	$textboxWebPage = New-Object 'System.Windows.Forms.TextBox'
	$textboxEmail = New-Object 'System.Windows.Forms.TextBox'
	$textboxTelephone = New-Object 'System.Windows.Forms.TextBox'
	$labelOffice = New-Object 'System.Windows.Forms.Label'
	$labelDescription = New-Object 'System.Windows.Forms.Label'
	$textboxoffice = New-Object 'System.Windows.Forms.TextBox'
	$textboxDescription = New-Object 'System.Windows.Forms.TextBox'
	$labelFirstName = New-Object 'System.Windows.Forms.Label'
	$textboxDisplayName = New-Object 'System.Windows.Forms.TextBox'
	$textboxFirstName = New-Object 'System.Windows.Forms.TextBox'
	$labelDisplayName = New-Object 'System.Windows.Forms.Label'
	$textboxInitials = New-Object 'System.Windows.Forms.TextBox'
	$labelLastName = New-Object 'System.Windows.Forms.Label'
	$labelInitials = New-Object 'System.Windows.Forms.Label'
	$textboxLastName = New-Object 'System.Windows.Forms.TextBox'
	$tabpageAccount = New-Object 'System.Windows.Forms.TabPage'
	$labelPlaceUserInFollowing = New-Object 'System.Windows.Forms.Label'
	$comboboxOUTree = New-Object 'System.Windows.Forms.ComboBox'
	$panel2 = New-Object 'System.Windows.Forms.Panel'
	$checkboxAccountIsDisabled = New-Object 'System.Windows.Forms.CheckBox'
	$checkboxPasswordNeverExpires = New-Object 'System.Windows.Forms.CheckBox'
	$checkboxUserCannotChangePass = New-Object 'System.Windows.Forms.CheckBox'
	$checkboxUserMustChangePasswo = New-Object 'System.Windows.Forms.CheckBox'
	$textboxSamAccount = New-Object 'System.Windows.Forms.TextBox'
	$textboxUPNDomain = New-Object 'System.Windows.Forms.TextBox'
	$labelUserLogonNamepreWind = New-Object 'System.Windows.Forms.Label'
	$comboboxDomains = New-Object 'System.Windows.Forms.ComboBox'
	$textboxUserLogonName = New-Object 'System.Windows.Forms.TextBox'
	$labelUserLogonNameUPN = New-Object 'System.Windows.Forms.Label'
	$tabpageAddress = New-Object 'System.Windows.Forms.TabPage'
	$label1 = New-Object 'System.Windows.Forms.Label'
	$labelZipPostalCode = New-Object 'System.Windows.Forms.Label'
	$textboxzipcode = New-Object 'System.Windows.Forms.TextBox'
	$textboxstate = New-Object 'System.Windows.Forms.TextBox'
	$labelStateprovince = New-Object 'System.Windows.Forms.Label'
	$labelcity = New-Object 'System.Windows.Forms.Label'
	$textboxcity = New-Object 'System.Windows.Forms.TextBox'
	$textboxPOBox = New-Object 'System.Windows.Forms.TextBox'
	$labelPOBox = New-Object 'System.Windows.Forms.Label'
	$textboxStreet = New-Object 'System.Windows.Forms.TextBox'
	$labelStreet = New-Object 'System.Windows.Forms.Label'
	$tabpageGroups = New-Object 'System.Windows.Forms.TabPage'
	$labelPleaseCheckAllGroups = New-Object 'System.Windows.Forms.Label'
	$checkedlistboxGroups = New-Object 'System.Windows.Forms.CheckedListBox'
	$tabpageOrganization = New-Object 'System.Windows.Forms.TabPage'
	$textboxCompany = New-Object 'System.Windows.Forms.TextBox'
	$labelCompany = New-Object 'System.Windows.Forms.Label'
	$textboxDepartment = New-Object 'System.Windows.Forms.TextBox'
	$labelDepartment = New-Object 'System.Windows.Forms.Label'
	$textboxjobtitle = New-Object 'System.Windows.Forms.TextBox'
	$labelJobTitle = New-Object 'System.Windows.Forms.Label'
	$tabpageProfile = New-Object 'System.Windows.Forms.TabPage'
	$groupbox2 = New-Object 'System.Windows.Forms.GroupBox'
	$labelDriveLetter = New-Object 'System.Windows.Forms.Label'
	$textboxhomedirectory = New-Object 'System.Windows.Forms.TextBox'
	$labelTo = New-Object 'System.Windows.Forms.Label'
	$comboboxDriveLetter = New-Object 'System.Windows.Forms.ComboBox'
	$groupboxuserprofile = New-Object 'System.Windows.Forms.GroupBox'
	$textboxlogonscript = New-Object 'System.Windows.Forms.TextBox'
	$textboxprofilepath = New-Object 'System.Windows.Forms.TextBox'
	$labelLogonScript = New-Object 'System.Windows.Forms.Label'
	$labelProfilePath = New-Object 'System.Windows.Forms.Label'
	$tabpageattributes = New-Object 'System.Windows.Forms.TabPage'
	$labelProxyAddresses = New-Object 'System.Windows.Forms.Label'
	$textboxproxyaddress = New-Object 'System.Windows.Forms.TextBox'
	$tabpageOffice365 = New-Object 'System.Windows.Forms.TabPage'
	$groupboxNoAdSync = New-Object 'System.Windows.Forms.GroupBox'
	$tabcontrol2 = New-Object 'System.Windows.Forms.TabControl'
	$tabpageO365General = New-Object 'System.Windows.Forms.TabPage'
	$buttonConnectToOffice365 = New-Object 'System.Windows.Forms.Button'
	$labelO365FirstName = New-Object 'System.Windows.Forms.Label'
	$buttonCopyOnPremUser = New-Object 'System.Windows.Forms.Button'
	$comboboxO365Licenses = New-Object 'System.Windows.Forms.ComboBox'
	$textboxO365FirstName = New-Object 'System.Windows.Forms.TextBox'
	$panel3 = New-Object 'System.Windows.Forms.Panel'
	$maskedtextboxo365password = New-Object 'System.Windows.Forms.TextBox'
	$buttonO365Clear = New-Object 'System.Windows.Forms.Button'
	$labelo365password = New-Object 'System.Windows.Forms.Label'
	$textboxo365confirmpassword = New-Object 'System.Windows.Forms.TextBox'
	$labelO365userconfirmpassword = New-Object 'System.Windows.Forms.Label'
	$buttonO365Genpassword = New-Object 'System.Windows.Forms.Button'
	$textboxo365passwordgen = New-Object 'System.Windows.Forms.TextBox'
	$labelO365userpassword = New-Object 'System.Windows.Forms.Label'
	$labelO365License = New-Object 'System.Windows.Forms.Label'
	$labelO365LastName = New-Object 'System.Windows.Forms.Label'
	$textboxO365LastName = New-Object 'System.Windows.Forms.TextBox'
	$textboxO365DisplayName = New-Object 'System.Windows.Forms.TextBox'
	$labelO365DisplayName = New-Object 'System.Windows.Forms.Label'
	$tabpageO365Account = New-Object 'System.Windows.Forms.TabPage'
	$comboboxMFA = New-Object 'System.Windows.Forms.ComboBox'
	$labelMultiFactorAuthentic = New-Object 'System.Windows.Forms.Label'
	$comboboxO365Domains = New-Object 'System.Windows.Forms.ComboBox'
	$labelAliasEMailAddresses = New-Object 'System.Windows.Forms.Label'
	$textboxo365proxyaddresses = New-Object 'System.Windows.Forms.TextBox'
	$textboxO365EmailAddress = New-Object 'System.Windows.Forms.TextBox'
	$labelEMailOnlyIfYouWantIt = New-Object 'System.Windows.Forms.Label'
	$comboboxO365countrycode = New-Object 'System.Windows.Forms.ComboBox'
	$labelCountryCode = New-Object 'System.Windows.Forms.Label'
	$panel4 = New-Object 'System.Windows.Forms.Panel'
	$checkboxBlockCred = New-Object 'System.Windows.Forms.CheckBox'
	$checkboxO365PasswordNeverExpires = New-Object 'System.Windows.Forms.CheckBox'
	$checkboxo365usermustchangepassword = New-Object 'System.Windows.Forms.CheckBox'
	$textboxO365UPN = New-Object 'System.Windows.Forms.TextBox'
	$labelO365UserPrincipalName = New-Object 'System.Windows.Forms.Label'
	$tabpageO365Address = New-Object 'System.Windows.Forms.TabPage'
	$label10 = New-Object 'System.Windows.Forms.Label'
	$textboxo365zip = New-Object 'System.Windows.Forms.TextBox'
	$textboxo365state = New-Object 'System.Windows.Forms.TextBox'
	$label11 = New-Object 'System.Windows.Forms.Label'
	$label12 = New-Object 'System.Windows.Forms.Label'
	$textboxo365city = New-Object 'System.Windows.Forms.TextBox'
	$textboxO365street = New-Object 'System.Windows.Forms.TextBox'
	$label14 = New-Object 'System.Windows.Forms.Label'
	$tabpageO365Groups = New-Object 'System.Windows.Forms.TabPage'
	$labelO365Groups = New-Object 'System.Windows.Forms.TextBox'
	$checkedlistboxDISTROo365groups = New-Object 'System.Windows.Forms.CheckedListBox'
	$tabpagesecurityGroups = New-Object 'System.Windows.Forms.TabPage'
	$labelSecurityGroups = New-Object 'System.Windows.Forms.TextBox'
	$checkedlistboxO365SecurityGroups = New-Object 'System.Windows.Forms.CheckedListBox'
	$tabpageo365shared = New-Object 'System.Windows.Forms.TabPage'
	$groupbox3 = New-Object 'System.Windows.Forms.GroupBox'
	$labelAutomapping = New-Object 'System.Windows.Forms.Label'
	$comboboxsharedmailboxautomap = New-Object 'System.Windows.Forms.ComboBox'
	$comboboxsharedmaiboxpermission = New-Object 'System.Windows.Forms.ComboBox'
	$labelPermission = New-Object 'System.Windows.Forms.Label'
	$labelsharedmailboxes = New-Object 'System.Windows.Forms.TextBox'
	$checkedlistboxsharedmailboxes = New-Object 'System.Windows.Forms.CheckedListBox'
	$tabpageO365Attributes = New-Object 'System.Windows.Forms.TabPage'
	$labelHideFromGlobalAddres = New-Object 'System.Windows.Forms.Label'
	$comboboxO365HidefromGAL = New-Object 'System.Windows.Forms.ComboBox'
	$groupboxADSync = New-Object 'System.Windows.Forms.GroupBox'
	$checkboxRunDirSyncAfterUserC = New-Object 'System.Windows.Forms.CheckBox'
	$menustrip1 = New-Object 'System.Windows.Forms.MenuStrip'
	$fileToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$exitToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$editToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$tooltip1 = New-Object 'System.Windows.Forms.ToolTip'
	$copyAllLogToClipboardToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$clearLogToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$resetFormToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$disconnectFromOffice365ToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$toolstripseparator1 = New-Object 'System.Windows.Forms.ToolStripSeparator'
	$saveLogAsToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	#region Control Helper Functions
	function Update-ListBox
	{
	<#
		.SYNOPSIS
			This functions helps you load items into a ListBox or CheckedListBox.
		
		.DESCRIPTION
			Use this function to dynamically load items into the ListBox control.
		
		.PARAMETER ListBox
			The ListBox control you want to add items to.
		
		.PARAMETER Items
			The object or objects you wish to load into the ListBox's Items collection.
		
		.PARAMETER DisplayMember
			Indicates the property to display for the items in this control.
		
		.PARAMETER Append
			Adds the item(s) to the ListBox without clearing the Items collection.
		
		.EXAMPLE
			Update-ListBox $ListBox1 "Red", "White", "Blue"
		
		.EXAMPLE
			Update-ListBox $listBox1 "Red" -Append
			Update-ListBox $listBox1 "White" -Append
			Update-ListBox $listBox1 "Blue" -Append
		
		.EXAMPLE
			Update-ListBox $listBox1 (Get-Process) "ProcessName"
		
		.NOTES
			Additional information about the function.
	#>
		
		param
		(
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			[System.Windows.Forms.ListBox]$ListBox,
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			$Items,
			[Parameter(Mandatory = $false)]
			[string]$DisplayMember,
			[switch]$Append
		)
		
		if (-not $Append)
		{
			$listBox.Items.Clear()
		}
		
		if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection])
		{
			$listBox.Items.AddRange($Items)
		}
		elseif ($Items -is [Array])
		{
			$listBox.BeginUpdate()
			foreach ($obj in $Items)
			{
				$listBox.Items.Add($obj)
			}
			$listBox.EndUpdate()
		}
		else
		{
			$listBox.Items.Add($Items)
		}
		
		$listBox.DisplayMember = $DisplayMember
	}
	
	function Update-ComboBox
	{
	<#
		.SYNOPSIS
			This functions helps you load items into a ComboBox.
		
		.DESCRIPTION
			Use this function to dynamically load items into the ComboBox control.
		
		.PARAMETER ComboBox
			The ComboBox control you want to add items to.
		
		.PARAMETER Items
			The object or objects you wish to load into the ComboBox's Items collection.
		
		.PARAMETER DisplayMember
			Indicates the property to display for the items in this control.
		
		.PARAMETER Append
			Adds the item(s) to the ComboBox without clearing the Items collection.
		
		.EXAMPLE
			Update-ComboBox $combobox1 "Red", "White", "Blue"
		
		.EXAMPLE
			Update-ComboBox $combobox1 "Red" -Append
			Update-ComboBox $combobox1 "White" -Append
			Update-ComboBox $combobox1 "Blue" -Append
		
		.EXAMPLE
			Update-ComboBox $combobox1 (Get-Process) "ProcessName"
		
		.NOTES
			Additional information about the function.
	#>
		
		param
		(
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			[System.Windows.Forms.ComboBox]$ComboBox,
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			$Items,
			[Parameter(Mandatory = $false)]
			[string]$DisplayMember,
			[switch]$Append
		)
		
		if (-not $Append)
		{
			$ComboBox.Items.Clear()
		}
		
		if ($Items -is [Object[]])
		{
			$ComboBox.Items.AddRange($Items)
		}
		elseif ($Items -is [System.Collections.IEnumerable])
		{
			$ComboBox.BeginUpdate()
			foreach ($obj in $Items)
			{
				$ComboBox.Items.Add($obj)
			}
			$ComboBox.EndUpdate()
		}
		else
		{
			$ComboBox.Items.Add($Items)
		}
		
		$ComboBox.DisplayMember = $DisplayMember
	}
	#endregion
	$MainForm_Load={
		$maskedtextboxpassword.UseSystemPasswordChar = $true
		$textboxConfirmPassword.UseSystemPasswordChar = $true
		$textboxo365confirmpassword.UseSystemPasswordChar = $true
		$maskedtextboxo365password.UseSystemPasswordChar = $true
		
		$comboboxO365HidefromGAL.SelectedIndex = 1
	
		$groupboxNoAdSync.Enabled = $false
		$groupboxADSync.Enabled = $False
		
		#Disable the Office 365 license drop down until we connect to MSOnline
		$comboboxO365Licenses.Enabled = $False
		
		$groupboxNoAdSync.Enabled = $false
		$tabcontrolUserProperties.Enabled = $false
		
		$radiobuttonDisableMFA.Checked = $true
		
		$buttonCreateUser.Enabled = $false
		
		$labelO365Groups.Text = "To add your user to a Mail Enabled Group, please connect to Office 365"
		$labelsharedmailboxes.text = "To grant your user permissions on a Shared Mailbox, please connect to Office 365"
		$labelSecurityGroups.Text = "To add your user to a Security Group, please connect to Office 365"
		
		
		$checkedlistboxDISTROo365groups.Enabled = $false
		$checkedlistboxsharedmailboxes.Enabled = $false
		
		$disconnectFromOffice365ToolStripMenuItem.Enabled = $false
		
		Update-ComboBox -ComboBox $comboboxO365Domains -Items "Please connect to Office 365"
		
		$comboboxsharedmaiboxpermission.SelectedIndex = 0
		$comboboxsharedmailboxautomap.SelectedIndex = 0
		
		$comboboxsharedmaiboxpermission.Enabled = $false
		$comboboxsharedmailboxautomap.Enabled = $false
		
		$Global:AD_Pre_Req = 0
		$Global:O365_Pre_Req = 0
		
		$comboboxMFA.SelectedIndex = 0
		
		$comboboxO365countrycode.SelectedItem = "US"
		
	}
	
	$buttonCreateUser_Click = {
		#If only an AD User is being made
		add-logs -text 'LOG: Checking to see what is being created'
		If (($checkboxCreateActiveDirector.Checked -eq $True) -and ($checkboxconfigo365user.Checked -eq $false))
		{
			add-logs -text 'LOG: Only an Active Directory user is being created'
			add-logs -text 'LOG: Checking all required parameters for data...'
			If (($checkboxUserCannotChangePass.Checked -eq $true) -and ($checkboxUserMustChangePasswo.Checked -eq $true))
			{
				add-logs -text 'WARN: You cannot check both User Must Change Password at Next Logon and User Cannot Change Password for the same user.'
				$InfoMessage = "You cannot check both User Must Change Password at Next Logon and User Cannot Change Password for the same user."
				$InfoTitle = "Warning"
				Show-MessageBox_psf
			}
			ElseIf (($checkboxPasswordNeverExpires.Checked -eq $true) -and ($checkboxUserMustChangePasswo.Checked -eq $true))
			{
				add-logs -text 'WARN: You have selected "Password never Expires". and "User must change password at next logon". They will be unable to change their password'
				$InfoMessage = 'You have selected "Password never Expires". and "User must change password at next logon". They will be unable to change their password'
				$InfoTitle = "Warning"
				Show-MessageBox_psf
			}
			Else
			{
				add-logs -text 'LOG: All required parameters are valid'
				Try
				{
					add-logs -text 'LOG: Converting password to SecureString'
					add-logs -text 'CMD: ConvertTo-SecureString -String $textboxConfirmPassword.Text'
					$PasswordSecureString = $textboxConfirmPassword.Text | ConvertTo-SecureString -AsPlainText -Force
					#Get disable account boolean
					add-logs -text 'LOG: Checking if account is disabled or enabled'
					$disabledaccount = ($checkboxAccountIsDisabled.checked)
					#If account should be disabled
					If ($disabledaccount -eq $true)
					{
						add-logs -text 'LOG: Account is disabled'
						add-logs -text 'LOG: Creating user'
						New-ADUser -Name ($textboxDisplayName.Text) -GivenName ($textboxFirstName.Text) -Surname ($textboxLastName.Text) -Initials ($textboxInitials.Text) -DisplayName ($textboxDisplayName.Text) -SamAccountName ($textboxSamAccount.text) -UserPrincipalName (($textboxUserLogonName.Text) + ($comboboxDomains.SelectedItem)) -EmailAddress ($textboxEmail.Text) -Description ($textboxDescription.Text) -Office ($textboxoffice.text) -OfficePhone ($textboxTelephone.text) -HomePage ($textboxWebPage.text) -StreetAddress ($textboxStreet.text) -State ($textboxstate.text) -PostalCode ($textboxzipcode.Text) -City ($textboxcity.text) -Title ($textboxjobtitle.text) -Department ($textboxDepartment.text) -Company ($textboxCompany.text) -POBox ($textboxPOBox.text) -ProfilePath ($textboxprofilepath.text) -ScriptPath ($textboxlogonscript.text) -PasswordNeverExpires ($checkboxPasswordNeverExpires.Checked) -Enabled $false -CannotChangePassword ($checkboxUserCannotChangePass.checked) -ChangePasswordAtLogon ($checkboxUserMustChangePasswo.Checked) -AccountPassword $PasswordSecureString -HomeDrive $comboboxDriveLetter.SelectedItem -HomeDirectory $textboxhomedirectory.Text
						$User = Get-ADUser -Filter * | Where-Object { ($_.Name -eq $textboxDisplayName.text) -and ($_.UserPrincipalName -eq (($textboxUserLogonName.Text) + ($comboboxDomains.SelectedItem))) }
						add-logs -text "LOG: User has been created"
						
						add-logs -text 'LOG: Checking if user is being put in an specific OU'
						If ($comboboxOUTree.SelectedItem -ne $null)
						{
							
							add-logs -text 'LOG: Specific OU specified, moving user'
							$CanocicalName = $comboboxOUTree.SelectedItem
							add-logs -text "CMD: `$OUTOMove = (Get-ADOrganizationalUnit -Filter * -Properties CanonicalName | Where-Object { `$_.CanonicalName -eq $CanocicalName }).DistinguishedName"
							$OUTOMove = (Get-ADOrganizationalUnit -Filter * -Properties CanonicalName | Where-Object { $_.CanonicalName -eq $CanocicalName }).DistinguishedName
							add-logs -text "CMD: `$User | Move-ADObject -TargetPath $OUTOMove"
							$User | Move-ADObject -TargetPath $OUTOMove
							add-logs -text 'LOG: Done'
						}
						Else
						{
							add-logs -text 'LOG: No OU Specified, skipping'
						}
						
						$Proxys = @()
						add-logs -text "LOG: Getting user proxy addresses to set"
						$Proxys += $textboxproxyaddress.Lines
						If ($Proxys -ne $Null)
						{
							foreach ($Proxy in $Proxys)
							{
								add-logs -text "LOG: Adding proxy addresses"
								add-logs -text "LOG: Getting user proxy addresses to set"
								add-logs -text "CMD: Set-ADUser $User -Add @{ proxyAddresses = $Proxy }"
								Set-ADUser $User -Add @{ proxyAddresses = $Proxy }
							}
						}
						Else
						{
							add-logs -text "LOG: No proxys were found to add"
						}
						add-logs -text "LOG: Done with Proxys"
						
						#Find if user should be added to any groups
						add-logs -text 'LOG: Getting checked groups'
						$groups = $checkedlistboxGroups.CheckedItems
						If ($groups -ne $null)
						{
							add-logs -text 'LOG: Groups found'
							foreach ($group in $groups)
							{
								add-logs -text "LOG: Adding $User to $Group"
								add-logs -text "CMD: Add-ADGroupMember -Identity $Group -Members $User"
								Add-ADGroupMember -Identity $Group -Members $User
							}
						}
						Else
						{
							add-logs -text 'LOG: No Groups checked'
						}
					}
					Else
					{
						add-logs -text 'LOG: Account is enabled'
						add-logs -text 'LOG: Creating user'
						New-ADUser -Name ($textboxDisplayName.Text) -GivenName ($textboxFirstName.Text) -Surname ($textboxLastName.Text) -Initials ($textboxInitials.Text) -DisplayName ($textboxDisplayName.Text) -SamAccountName ($textboxSamAccount.text) -UserPrincipalName (($textboxUserLogonName.Text) + ($comboboxDomains.SelectedItem)) -EmailAddress ($textboxEmail.Text) -Description ($textboxDescription.Text) -Office ($textboxoffice.text) -OfficePhone ($textboxTelephone.text) -HomePage ($textboxWebPage.text) -StreetAddress ($textboxStreet.text) -State ($textboxstate.text) -PostalCode ($textboxzipcode.Text) -City ($textboxcity.text) -Title ($textboxjobtitle.text) -Department ($textboxDepartment.text) -Company ($textboxCompany.text) -POBox ($textboxPOBox.text) -ProfilePath ($textboxprofilepath.text) -ScriptPath ($textboxlogonscript.text) -PasswordNeverExpires ($checkboxPasswordNeverExpires.Checked) -Enabled $true -CannotChangePassword ($checkboxUserCannotChangePass.checked) -ChangePasswordAtLogon ($checkboxUserMustChangePasswo.Checked) -AccountPassword $PasswordSecureString -HomeDrive $comboboxDriveLetter.SelectedItem -HomeDirectory $textboxhomedirectory.Text
						$User = Get-ADUser -Filter * | Where-Object { ($_.Name -eq $textboxDisplayName.text) -and ($_.UserPrincipalName -eq (($textboxUserLogonName.Text) + ($comboboxDomains.SelectedItem))) }
						add-logs -text "LOG: User has been created"
						
						add-logs -text 'LOG: Checking if user is being put in an specific OU'
						If ($comboboxOUTree.SelectedItem -ne $null)
						{
							
							add-logs -text 'LOG: Specific OU specified, moving user'
							$CanocicalName = $comboboxOUTree.SelectedItem
							add-logs -text "CMD: `$OUTOMove = (Get-ADOrganizationalUnit -Filter * -Properties CanonicalName | Where-Object { `$_.CanonicalName -eq $CanocicalName }).DistinguishedName"
							$OUTOMove = (Get-ADOrganizationalUnit -Filter * -Properties CanonicalName | Where-Object { $_.CanonicalName -eq $CanocicalName }).DistinguishedName
							add-logs -text "CMD: `$User | Move-ADObject -TargetPath $OUTOMove"
							$User | Move-ADObject -TargetPath $OUTOMove
							add-logs -text 'LOG: Done'
						}
						Else
						{
							add-logs -text 'LOG: No OU Specified, skipping'
						}
						
						$Proxys = @()
						add-logs -text "LOG: Getting user proxy addresses to set"
						$Proxys += $textboxproxyaddress.Lines
						If ($Proxys -ne $Null)
						{
							foreach ($Proxy in $Proxys)
							{
								add-logs -text "LOG: Adding proxy addresses"
								add-logs -text "LOG: Getting user proxy addresses to set"
								add-logs -text "CMD: Set-ADUser $User -Add @{ proxyAddresses = $Proxy }"
								Set-ADUser $User -Add @{ proxyAddresses = $Proxy }
							}
						}
						Else
						{
							add-logs -text "LOG: No proxys were found to add"
						}
						add-logs -text "LOG: Done with Proxys"
						
						#Find if user should be added to any groups
						add-logs -text 'LOG: Getting checked groups'
						$groups = $checkedlistboxGroups.CheckedItems
						If ($groups -ne $null)
						{
							add-logs -text 'LOG: Groups found'
							foreach ($group in $groups)
							{
								add-logs -text "LOG: Adding $User to $Group"
								add-logs -text "CMD: Add-ADGroupMember -Identity $Group -Members $User"
								Add-ADGroupMember -Identity $Group -Members $User
							}
						}
						Else
						{
							add-logs -text 'LOG: No Groups checked'
						}
						Add-Logs -text 'LOG: Done with Groups'
					}
				}
				Catch
				{
					add-logs -text "WARN: $_"
					Add-Type -AssemblyName System.Windows.Forms
					[System.Windows.Forms.MessageBox]::Show($_, 'Warning', 'OK', 'Warning')
				}
			}
		}
		#If only Office 365 user is being created 
		ElseIf (($checkboxCreateActiveDirector.Checked -eq $false) -and ($checkboxconfigo365user.Checked -eq $true))
		{
			add-logs -text 'LOG: Only an Office 365 User is being created'
			add-logs -text 'LOG: Checking DirSync option'
			#If DirSync is enabled
			If ($checkboxRunDirSyncAfterUserC.CheckState -eq 'Checked')
			{
				add-logs -text 'LOG: DirSync Enabled'
				add-logs -text 'LOG: Running DirSync'
				add-logs -text 'CMD: Start-ADSyncSyncCycle'
				Start-ADSyncSyncCycle
				add-logs -text 'LOG: Done'
			}
			#If DirSync is not enabled
			Else
			{
				add-logs -text "LOG: User is not being AD-Synced"
				add-logs -text 'LOG: Checking all required parameters for data...'
				If (($checkboxO365PasswordNeverExpires.Checked -eq $true) -and ($checkboxo365usermustchangepassword.Checked -eq $true))
				{
					add-logs -text 'WARN: You have selected "Password never Expires". and "User must change password at next logon". They will be unable to change their password'
					$InfoMessage = 'You have selected "Password never Expires". and "User must change password at next logon". They will be unable to change their password'
					$InfoTitle = "Warning"
					Show-MessageBox_psf
				}
				Else
				{
					add-logs -text 'LOG: All required parameters are valid'
					
					#Check to see if the user is being enabled upon creation or disabled
					
					#User is going to be disabled
					add-logs -text 'LOG: Checking enabled status of user'
					If ($checkboxBlockCred.Checked -eq $true)
					{
						#If user is going to be disabled
						add-logs -text 'LOG: User is Disabled'
						add-logs -text 'LOG: Creating user'
						If (($comboboxO365Licenses.SelectedItem -ne $null) -and ($comboboxO365countrycode.SelectedItem -eq $null))
						{
							add-logs -text 'WARN: You must assign a country code to your user if you are assigning a license'
							$InfoMessage = 'You must assign a country code to your user if you are assigning a license'
							$InfoTitle = "Warning"
							Show-MessageBox_psf
						}
						Else
						{
							If ($comboboxO365Licenses.SelectedItem -ne $null)
							{
								$Lookup = @()
								Add-Logs -text "LOG: Getting License selected for user"
								$License = $comboboxO365Licenses.SelectedItem
								Add-Logs -text "LOG: Getting AccountSKU Domain"
								$LicenseDomain = ((((Get-MsolAccountSku).AccountSkuID) -split ":" | Select-Object -First 1) + ":").Trim()
								Add-Logs -text "LOG: Looking up SKU for license"
								$Lookup += $Sku.Keys | Where-Object { $Sku["$_"] -eq "$license" }
								If ((($Lookup | Measure-Object -Character).Characters) -lt 1)
								{
									Add-Logs -text "LOG: No SKU found during lookup"
									$BackSKU = "$LicenseDomain$License"
									Add-Logs -text "LOG: Checking if $BackSKU is already SKU"
									$CheckSku = Get-MSOLAccountSku | Where-Object { $_.AccountSKuID -like "*$BackSKU*" } | Select-Object -ExpandProperty AccountSkuID
									If ($CheckSku -ne $Null)
									{
										Add-Logs -text "LOG: Assigning $BackSKU to User"
										$licenseforuser = $CheckSku
									}
									Else
									{
										Add-Logs -text "WARN: Uknown license, could not assign $BackSKU"
										$ReLic = (((Get-MsolAccountSku).AccountSkuID) | Select-Object -First 1)
										Add-Logs -text "WARN: Assigning $ReLic to user instead"
										$licenseforuser = (((Get-MsolAccountSku).AccountSkuID) | Select-Object -First 1)
									}
									
								}
								Else
								{
									Add-Logs -text "LOG: Found the SKU for the license"
									Foreach ($Item in $Lookup)
									{
										Add-Logs -text "LOG: Checking License $Item"
										$BackSKU = "$LicenseDomain$Item"
										Add-Logs -text "LOG: Looking up $BackSKU in tenant"
										Add-Logs -text "LOG: Verifying $BackSKU in tenant"
										$CheckSku = Get-MSOLAccountSku | Where-Object { $_.AccountSKuID -like "*$BackSKU*" } | Select-Object -ExpandProperty AccountSkuID
										If ($CheckSku -ne $Null)
										{
											Add-Logs -text "LOG: License Found, assigning $CheckSku to user"
											$licenseforuser = $CheckSku
										}
										Else
										{
											Add-Logs -text "WARN: $BackSKU was not found in tenant"
										}
									}
								}
							}
							
							
							$User = New-MsolUser -FirstName $textboxO365FirstName.Text -LastName $textboxO365LastName.Text -DisplayName $textboxO365DisplayName.Text -LicenseAssignment $licenseforuser -Password $textboxo365confirmpassword.text -UserPrincipalName (($textboxO365UPN.Text) + ($comboboxO365Domains.SelectedItem)) -UsageLocation $comboboxO365countrycode.SelectedItem -ForceChangePassword ($checkboxo365usermustchangepassword.Checked) -PasswordNeverExpires ($checkboxPasswordNeverExpires.checked) -BlockCredential $true -StreetAddress $textboxO365street.Text -City $textboxo365city.Text -State $textboxo365state.Text -PostalCode $textboxo365zip.Text
							add-logs -text 'LOG: Done'
							
							#Find if user should be added to any Security groups
							add-logs -text 'LOG: Getting checked Security groups'
							$groups = $checkedlistboxO365SecurityGroups.CheckedItems
							If ($groups -ne $null)
							{
								add-logs -text 'LOG: Security Groups found'
								$DN = ($User).DisplayName
								foreach ($group in $groups)
								{
									add-logs -text "LOG: Adding $DN to $Group"
									$GroupGuid = ((get-msolgroup | where-object { $_.displayname -eq $Group }).ObjectID).GUID
									$UserGUID = (($User).ObjectID).GUID
									add-logs -text "CMD: Add-MsolGroupMember -Identity $GroupGuid -Members $UserGUID"
									Add-MsolGroupMember -GroupObjectId $GroupGuid -GroupMemberObjectId $UserGUID
								}
							}
							Else
							{
								add-logs -text 'LOG: No Security Groups checked'
							}
							Add-Logs -text 'LOG: Done with Security Groups'
							
							#Check user licenses, if licensed create and wait for mailbox
							Add-Logs -text 'LOG: Checking if license was applied to the user'
							If ($comboboxO365Licenses.SelectedItem -ne $Null)
							{
								Add-Logs -text 'LOG: License is applied to the new user'
								Do
								{
									Add-Logs -text 'LOG: Pausing for 30 seconds for mailbox to be created'
									Start-Sleep -Seconds 10
									Add-Logs -text 'LOG: 20 seconds reamining'
									Start-Sleep -Seconds 10
									Add-Logs -text 'LOG: 10 seconds reamining'
									Start-Sleep -Seconds 10
									Add-Logs -text 'LOG: Done'
									
									Add-Logs -text 'LOG: Checking to see if the mailbox has been created, if mailbox is not present will wait another 30 seconds'
								}
								Until ((Get-Mailbox | Where-Object { $_.DisplayName -eq $textboxO365DisplayName.text }) -ne $null)
								
								add-logs -text 'LOG: Checking E-Mail address field for entered data'
								If ($textboxO365EmailAddress.Text -like "*@*")
								{
									add-logs -text 'LOG: Verifying that E-Mail value is not the same as UPN'
									If ($textboxO365EmailAddress.Text -ne (($textboxO365UPN.Text) + ($comboboxO365Domains.SelectedItem)))
									{
										add-logs -text 'LOG: Email is different from UPN, proceeding.'
										
										Try
										{
											$PrimEmail = $textboxO365EmailAddress.Text
											add-logs -text "LOG: Setting primary E-Mail to $PrimEmail"
											$Mailbox = Get-Mailbox | Where-Object { $_.DisplayName -eq $textboxO365DisplayName.text }
											$DN = $Mailbox.DisplayName
											add-logs -text "CMD: Set-Mailbox -Identity $DN -WindowsEmailAddress $PrimEmail"
											Set-Mailbox -Identity $DN -WindowsEmailAddress $PrimEmail
											add-logs -text "LOG: Done"
										}
										Catch
										{
											add-logs -text "WARN: $_"
											Add-Type -AssemblyName System.Windows.Forms
											[System.Windows.Forms.MessageBox]::Show($_, 'Warning', 'OK', 'Warning')
										}
									}
									Else
									{
										add-logs -text "LOG: E-Mail entered is the same as UPN, skipping."
									}
									
								}
								Else
								{
									add-logs -text "LOG: No E-Mail entered"
								}
								
								#Add any email aliases
								add-logs -text 'LOG: Checking Alias Addresses field for entered data'
								If ($textboxo365proxyaddresses.Text -ne $null)
								{
									add-logs -text 'LOG: Found Alias Addresses to add'
									$Proxys = $textboxo365proxyaddresses.Lines
									$Mailbox = Get-Mailbox | Where-Object { $_.DisplayName -eq $textboxO365DisplayName.text }
									$DN = $Mailbox.DisplayName
									foreach ($Proxy in $Proxys)
									{
										add-logs -text "LOG: Adding $Proxy for $DN"
										Set-Mailbox $Mailbox.DisplayName -EmailAddresses @{ add = "$Proxy" }
										add-logs -text 'LOG: Done'
									}
								}
								Else
								{
									add-logs -text 'LOG: No Alias Addresses found'
								}
								add-logs -text 'LOG: Done with Alias Addresses'
								
								#Find if user should be added to any mail groups
								add-logs -text 'LOG: Getting checked mail groups'
								$groups = $checkedlistboxDISTROo365groups.CheckedItems
								If ($groups -ne $null)
								{
									add-logs -text 'LOG: Mail Groups found'
									$User = Get-MSOLUser | Where-Object { $_.Displayname -eq $textboxO365DisplayName.text }
									$DN = ($User).DisplayName
									foreach ($group in $groups)
									{
										add-logs -text "LOG: Adding $DN to $Group"
										add-logs -text "CMD: Add-DistributionGroupMember -Identity $Group -Member $DN"
										Try
										{
											Add-DistributionGroupMember -Identity "$Group" -Member ($User).DisplayName
										}
										Catch
										{
											add-logs -text "WARN: $_"
											Add-Type -AssemblyName System.Windows.Forms
											[System.Windows.Forms.MessageBox]::Show($_, 'Warning', 'OK', 'Warning')
										}
									}
								}
								Else
								{
									add-logs -text 'LOG: No Mail Groups checked'
								}
								Add-Logs -text 'LOG: Done with Mail Groups'
								
								#Shared Mailboxes
								Add-Logs -text 'LOG: Checking if there are Share Mailboxes checked'
								$SharedMailboxes = $checkedlistboxsharedmailboxes.CheckedItems
								#If there are shared mailboxes to add the user to (full access rights)
								If ($SharedMailboxes -ne $null)
								{
									$User = Get-MSOLUser | Where-Object { $_.Displayname -eq $textboxO365DisplayName.text }
									$DN = ($User).DisplayName
									If ($comboboxsharedmaiboxpermission.SelectedItem -eq "Full Access")
									{
										foreach ($SharedMailbox in $SharedMailboxes)
										{
											$Automap = $comboboxsharedmailboxautomap.Text
											Add-Logs -text "LOG: Adding $DN Full Access to $SharedMailbox with Automapping set to $Automap"
											Add-Logs -text "CMD: Add-MailboxPermission $SharedMailbox -User $DN -AccessRights FullAccess -AutoMapping:$Automap"
											Add-MailboxPermission $SharedMailbox -User ($User).DisplayName -AccessRights FullAccess -AutoMapping:$Automap
										}
									}
									ElseIf ($comboboxsharedmaiboxpermission.SelectedItem -eq "Send As")
									{
										foreach ($SharedMailbox in $SharedMailboxes)
										{
											Add-Logs -text "LOG: Assigning $DN Send-As permission on $SharedMailbox"
											Add-Logs -text 'CMD: Add-RecipientPermission -Identity $SharedMailbox -Trustee ($User).DisplayName -AccessRights SendAs'
											Add-RecipientPermission -Identity $SharedMailbox -Trustee ($User).DisplayName -AccessRights SendAs -Confirm:$False
											Add-Logs -text "LOG: Done"
										}
										
									}
									Else
									{
										foreach ($SharedMailbox in $SharedMailboxes)
										{
											#$Mailbox = Get-Mailbox | Where-Object { $_.DisplayName -eq $textboxO365DisplayName.text }
											Add-Logs -text "LOG: Granting $DN to Send on Behalf of $SharedMailbox"
											Add-Logs -text "CMD: Set-Mailbox $SharedMailbox -GrantSendOnBehalfTo $DN"
											Set-Mailbox $SharedMailbox -GrantSendOnBehalfTo ($User).DisplayName
											Add-Logs -text 'LOG: Done'
										}
									}
								}
								Else
								{
									Add-Logs -text 'LOG: No Shared Mailboxes selected'
								}
								Add-Logs -text 'LOG: Done with Shared Mailboxes'
								
								Add-Logs -text 'LOG: Checking if Hide from global address list is set to True'
								#Hide from GAL
								If ($comboboxO365HidefromGAL.SelectedItem -eq $True)
								{
									Add-Logs -text 'LOG: Hide from global address list is set to True'
									Add-Logs -text 'LOG: Hiding mailbox from global address list'
									$Mailbox = Get-Mailbox | Where-Object { $_.DisplayName -eq $textboxO365DisplayName.text }
									If ($null -ne $mailbox)
									{
										Set-Mailbox -Identity ($Mailbox).DisplayName -HiddenFromAddressListsEnabled $true
									}
									Else
									{
										Add-Logs -text 'WARN: User does not have a mailbox and cannot be hidden from GAL. Please verify the user has a valid license with a mailbox'
										$InfoMessage = "User does not have a mailbox and cannot be hidden from GAL. Please verify the user has a valid license with a mailbox"
										$InfoTitle = "Warning"
										Show-MessageBox_psf
									}
								}
								Else
								{
									Add-Logs -text 'LOG: Hide from global address list is set to False'
								}
							}
							Else
							{
								Add-Logs -text 'LOG: No license is being added for the new user'
								Add-Logs -text 'LOG: Skipping Mail Groups as user is not licensed'
								Add-Logs -text 'LOG: Skipping Shared Mailboxes as user is not licensed'
								Add-Logs -text 'LOG: Skipping Hide from Global Address List as user is not licensed'
							}
							
							#If MFA is set to TRUE then enable MFA for the user
							Add-Logs -text 'LOG: Checking MFA status for the user'
							If ($comboboxMFA.Selecteditem -eq "True")
							{
								$UserMFA = ($User).UserPrincipalName
								Add-Logs -text 'LOG: MFA for the user set to TRUE, enabling MFA'
								Add-Logs -text "CMD: `$Auth = New-Object -TypeName Microsoft.Online.Administration.StrongAuthenticationRequirement"
								$Auth = New-Object -TypeName Microsoft.Online.Administration.StrongAuthenticationRequirement
								Add-Logs -text 'CMD: $Auth.RelyingParty = "*"'
								$Auth.RelyingParty = "*"
								Add-Logs -text 'CMD: $MFA = @($Auth)'
								$MFA = @($Auth)
								Add-Logs -text "CMD: Set-MsolUser -UserPrincipalName $UserMFA -StrongAuthenticationRequirements $MFA"
								Set-MsolUser -UserPrincipalName $UserMFA -StrongAuthenticationRequirements $MFA
								Add-Logs -text 'LOG: Done'
							}
							Else
							{
								Add-Logs -text 'LOG: MFA is set to False'
							}
							Add-Logs -text 'LOG: Done'
						}
					}
					Else
					{
						#User is going to be enabled upon creation
						add-logs -text 'LOG: User is Enabled'
						add-logs -text 'LOG: Creating user'
						If (($comboboxO365Licenses.SelectedItem -ne $null) -and ($comboboxO365countrycode.SelectedItem -eq $null))
						{
							add-logs -text 'WARN: You must assign a country code to your user if you are assigning a license'
							$InfoMessage = 'You must assign a country code to your user if you are assigning a license'
							$InfoTitle = "Warning"
							Show-MessageBox_psf
						}
						Else
						{
							If ($comboboxO365Licenses.SelectedItem -ne $null)
							{
								$Lookup = @()
								Add-Logs -text "LOG: Getting License selected for user"
								$License = $comboboxO365Licenses.SelectedItem
								Add-Logs -text "LOG: Getting AccountSKU Domain"
								$LicenseDomain = ((((Get-MsolAccountSku).AccountSkuID) -split ":" | Select-Object -First 1) + ":").Trim()
								Add-Logs -text "LOG: Looking up SKU for license"
								$Lookup += $Sku.Keys | Where-Object { $Sku["$_"] -eq "$license" }
								If ((($Lookup | Measure-Object -Character).Characters) -lt 1)
								{
									Add-Logs -text "LOG: No SKU found during lookup"
									$BackSKU = "$LicenseDomain$License"
									Add-Logs -text "LOG: Checking if $BackSKU is already SKU"
									$CheckSku = Get-MSOLAccountSku | Where-Object { $_.AccountSKuID -like "*$BackSKU*" } | Select-Object -ExpandProperty AccountSkuID
									If ($CheckSku -ne $Null)
									{
										Add-Logs -text "LOG: Assigning $BackSKU to User"
										$licenseforuser = $CheckSku
									}
									Else
									{
										Add-Logs -text "WARN: Uknown license, could not assign $BackSKU"
										$ReLic = (((Get-MsolAccountSku).AccountSkuID) | Select-Object -First 1)
										Add-Logs -text "WARN: Assigning $ReLic to user instead"
										$licenseforuser = (((Get-MsolAccountSku).AccountSkuID) | Select-Object -First 1)
									}
									
								}
								Else
								{
									Add-Logs -text "LOG: Found the SKU for the license"
									Foreach ($Item in $Lookup)
									{
										Add-Logs -text "LOG: Checking License $Item"
										$BackSKU = "$LicenseDomain$Item"
										Add-Logs -text "LOG: Looking up $BackSKU in tenant"
										Add-Logs -text "LOG: Verifying $BackSKU in tenant"
										$CheckSku = Get-MSOLAccountSku | Where-Object { $_.AccountSKuID -like "*$BackSKU*" } | Select-Object -ExpandProperty AccountSkuID
										If ($CheckSku -ne $Null)
										{
											Add-Logs -text "LOG: License Found, assigning $CheckSku to user"
											$licenseforuser = $CheckSku
										}
										Else
										{
											Add-Logs -text "WARN: $BackSKU was not found in tenant"
										}
									}
								}
							}
							
							$User = New-MsolUser -FirstName $textboxO365FirstName.Text -LastName $textboxO365LastName.Text -DisplayName $textboxO365DisplayName.Text -LicenseAssignment $licenseforuser -Password $textboxo365confirmpassword.text -UserPrincipalName (($textboxO365UPN.Text) + ($comboboxO365Domains.SelectedItem)) -UsageLocation $comboboxO365countrycode.SelectedItem -ForceChangePassword ($checkboxo365usermustchangepassword.Checked) -PasswordNeverExpires ($checkboxPasswordNeverExpires.checked) -BlockCredential $false -StreetAddress $textboxO365street.text -City $textboxo365city.Text -State $textboxo365state.Text -PostalCode $textboxo365zip.Text
	
							#Find if user should be added to any Security groups
							add-logs -text 'LOG: Getting checked Security groups'
							$groups = $checkedlistboxO365SecurityGroups.CheckedItems
							If ($groups -ne $null)
							{
								add-logs -text 'LOG: Security Groups found'
								$DN = ($User).DisplayName
								foreach ($group in $groups)
								{
									add-logs -text "LOG: Adding $DN to $Group"
									$GroupGuid = ((get-msolgroup | where-object { $_.displayname -eq $Group }).ObjectID).GUID
									$UserGUID = (($User).ObjectID).GUID
									add-logs -text "CMD: Add-MsolGroupMember -Identity $GroupGuid -Members $UserGUID"
									Add-MsolGroupMember -GroupObjectId $GroupGuid -GroupMemberObjectId $UserGUID
								}
							}
							Else
							{
								add-logs -text 'LOG: No Security Groups checked'
							}
							Add-Logs -text 'LOG: Done with Security Groups'
							
							#Check user licenses, if licensed create and wait for mailbox
							Add-Logs -text 'LOG: Checking if license was applied to the user'
							If ($comboboxO365Licenses.SelectedItem -ne $Null)
							{
								Add-Logs -text 'LOG: License is applied to the new user'
								Do
								{
									Add-Logs -text 'LOG: Pausing for 30 seconds for mailbox to be created'
									Start-Sleep -Seconds 10
									Add-Logs -text 'LOG: 20 seconds reamining'
									Start-Sleep -Seconds 10
									Add-Logs -text 'LOG: 10 seconds reamining'
									Start-Sleep -Seconds 10
									Add-Logs -text 'LOG: Done'
									
									Add-Logs -text 'LOG: Checking to see if the mailbox has been created, if mailbox is not present will wait another 30 seconds'
								}
								Until ((Get-Mailbox | Where-Object { $_.DisplayName -eq $textboxO365DisplayName.text }) -ne $null)
								
								add-logs -text 'LOG: Checking E-Mail address field for entered data'
								If ($textboxO365EmailAddress.Text -like "*@*")
								{
									add-logs -text 'LOG: Verifying that E-Mail value is not the same as UPN'
									If ($textboxO365EmailAddress.Text -ne (($textboxO365UPN.Text) + ($comboboxO365Domains.SelectedItem)))
									{
										add-logs -text 'LOG: Email is different from UPN, proceeding.'
										
										Try
										{
											$PrimEmail = $textboxO365EmailAddress.Text
											add-logs -text "LOG: Setting primary E-Mail to $PrimEmail"
											$Mailbox = Get-Mailbox | Where-Object { $_.DisplayName -eq $textboxO365DisplayName.text }
											$DN = $Mailbox.DisplayName
											add-logs -text "CMD: Set-Mailbox -Identity $DN -WindowsEmailAddress $PrimEmail"
											Set-Mailbox -Identity $DN -WindowsEmailAddress $PrimEmail
											add-logs -text "LOG: Done"
										}
										Catch
										{
											add-logs -text "WARN: $_"
											Add-Type -AssemblyName System.Windows.Forms
											[System.Windows.Forms.MessageBox]::Show($_, 'Warning', 'OK', 'Warning')
										}
									}
									Else
									{
										add-logs -text "LOG: E-Mail entered is the same as UPN, skipping."
									}
									
								}
								Else
								{
									add-logs -text "LOG: No E-Mail entered"
								}
								
								#Add any email aliases
								add-logs -text 'LOG: Checking Alias Addresses field for entered data'
								If ($textboxo365proxyaddresses.Text -ne $null)
								{
									add-logs -text 'LOG: Found Alias Addresses to add'
									$Proxys = $textboxo365proxyaddresses.Lines
									$Mailbox = Get-Mailbox | Where-Object { $_.DisplayName -eq $textboxO365DisplayName.text }
									$DN = $Mailbox.DisplayName
									foreach ($Proxy in $Proxys)
									{
										add-logs -text "LOG: Adding $Proxy for $DN"
										Set-Mailbox $Mailbox.DisplayName -EmailAddresses @{ add = "$Proxy" }
										add-logs -text 'LOG: Done'
									}
								}
								Else
								{
									add-logs -text 'LOG: No Alias Addresses found'
								}
								add-logs -text 'LOG: Done with Alias Addresses'
								
								#Find if user should be added to any mail groups
								add-logs -text 'LOG: Getting checked mail groups'
								$groups = $checkedlistboxDISTROo365groups.CheckedItems
								If ($groups -ne $null)
								{
									add-logs -text 'LOG: Mail Groups found'
									$User = Get-MSOLUser | Where-Object { $_.Displayname -eq $textboxO365DisplayName.text }
									$DN = ($User).DisplayName
									foreach ($group in $groups)
									{
										add-logs -text "LOG: Adding $DN to $Group"
										add-logs -text "CMD: Add-DistributionGroupMember -Identity $Group -Member $DN"
										Try
										{
											Add-DistributionGroupMember -Identity "$Group" -Member ($User).DisplayName
										}
										Catch
										{
											add-logs -text "WARN: $_"
											Add-Type -AssemblyName System.Windows.Forms
											[System.Windows.Forms.MessageBox]::Show($_, 'Warning', 'OK', 'Warning')
										}
									}
								}
								Else
								{
									add-logs -text 'LOG: No Mail Groups checked'
								}
								Add-Logs -text 'LOG: Done with Mail Groups'
								
								#Shared Mailboxes
								Add-Logs -text 'LOG: Checking if there are Share Mailboxes checked'
								$SharedMailboxes = $checkedlistboxsharedmailboxes.CheckedItems
								#If there are shared mailboxes to add the user to (full access rights)
								If ($SharedMailboxes -ne $null)
								{
									$User = Get-MSOLUser | Where-Object { $_.Displayname -eq $textboxO365DisplayName.text }
									$DN = ($User).DisplayName
									If ($comboboxsharedmaiboxpermission.SelectedItem -eq "Full Access")
									{
										foreach ($SharedMailbox in $SharedMailboxes)
										{
											$Automap = $comboboxsharedmailboxautomap.Text
											Add-Logs -text "LOG: Adding $DN Full Access to $SharedMailbox with Automapping set to $Automap"
											Add-Logs -text "CMD: Add-MailboxPermission $SharedMailbox -User $DN -AccessRights FullAccess -AutoMapping:$Automap"
											Add-MailboxPermission $SharedMailbox -User ($User).DisplayName -AccessRights FullAccess -AutoMapping:$Automap
										}
									}
									ElseIf ($comboboxsharedmaiboxpermission.SelectedItem -eq "Send As")
									{
										foreach ($SharedMailbox in $SharedMailboxes)
										{
											Add-Logs -text "LOG: Assigning $DN Send-As permission on $SharedMailbox"
											Add-Logs -text 'CMD: Add-RecipientPermission -Identity $SharedMailbox -Trustee ($User).DisplayName -AccessRights SendAs'
											Add-RecipientPermission -Identity $SharedMailbox -Trustee ($User).DisplayName -AccessRights SendAs -Confirm:$False
											Add-Logs -text "LOG: Done"
										}
										
									}
									Else
									{
										foreach ($SharedMailbox in $SharedMailboxes)
										{
											#$Mailbox = Get-Mailbox | Where-Object { $_.DisplayName -eq $textboxO365DisplayName.text }
											Add-Logs -text "LOG: Granting $DN to Send on Behalf of $SharedMailbox"
											Add-Logs -text "CMD: Set-Mailbox $SharedMailbox -GrantSendOnBehalfTo $DN"
											Set-Mailbox $SharedMailbox -GrantSendOnBehalfTo ($User).DisplayName
											Add-Logs -text 'LOG: Done'
										}
									}
								}
								Else
								{
									Add-Logs -text 'LOG: No Shared Mailboxes selected'
								}
								Add-Logs -text 'LOG: Done with Shared Mailboxes'
								
								Add-Logs -text 'LOG: Checking if Hide from global address list is set to True'
								#Hide from GAL
								If ($comboboxO365HidefromGAL.SelectedItem -eq $True)
								{
									Add-Logs -text 'LOG: Hide from global address list is set to True'
									Add-Logs -text 'LOG: Hiding mailbox from global address list'
									$Mailbox = Get-Mailbox | Where-Object { $_.DisplayName -eq $textboxO365DisplayName.text }
									If ($null -ne $mailbox)
									{
										Set-Mailbox -Identity ($Mailbox).DisplayName -HiddenFromAddressListsEnabled $true
									}
									Else
									{
										Add-Logs -text 'WARN: User does not have a mailbox and cannot be hidden from GAL. Please verify the user has a valid license with a mailbox'
										$InfoMessage = "User does not have a mailbox and cannot be hidden from GAL. Please verify the user has a valid license with a mailbox"
										$InfoTitle = "Warning"
										Show-MessageBox_psf
									}
								}
								Else
								{
									Add-Logs -text 'LOG: Hide from global address list is set to False'
								}
							}
							Else
							{
								Add-Logs -text 'LOG: No license is being added for the new user'
								Add-Logs -text 'LOG: Skipping Mail Groups as user is not licensed'
								Add-Logs -text 'LOG: Skipping Shared Mailboxes as user is not licensed'
								Add-Logs -text 'LOG: Skipping Hide from Global Address List as user is not licensed'
							}
							
							#If MFA is set to TRUE then enable MFA for the user
							Add-Logs -text 'LOG: Checking MFA status for the user'
							If ($comboboxMFA.Selecteditem -eq "True")
							{
								$UserMFA = ($User).UserPrincipalName
								Add-Logs -text 'LOG: MFA for the user set to TRUE, enabling MFA'
								Add-Logs -text "CMD: `$Auth = New-Object -TypeName Microsoft.Online.Administration.StrongAuthenticationRequirement"
								$Auth = New-Object -TypeName Microsoft.Online.Administration.StrongAuthenticationRequirement
								Add-Logs -text 'CMD: $Auth.RelyingParty = "*"'
								$Auth.RelyingParty = "*"
								Add-Logs -text 'CMD: $MFA = @($Auth)'
								$MFA = @($Auth)
								Add-Logs -text "CMD: Set-MsolUser -UserPrincipalName $UserMFA -StrongAuthenticationRequirements $MFA"
								Set-MsolUser -UserPrincipalName $UserMFA -StrongAuthenticationRequirements $MFA
								Add-Logs -text 'LOG: Done'
							}
							Else
							{
								Add-Logs -text 'LOG: MFA is set to False'
							}
							Add-Logs -text 'LOG: Done'
						}
					}
				}
			}
		}
		ElseIf (($checkboxCreateActiveDirector.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $true))
		{
			add-logs -text 'LOG: Both an Office 365 User and Active Director User is being created'
		}
		Else
		{
			add-logs -text 'WARN: Nothing is being created!'
		}
	}
	
	
	
	
	$labelFirstName_Click={
		
	}
	
	
	
	$textboxDisplayName_TextChanged = {
		If ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0)
		{
			$labelDisplayName.Text = "Display Name:"
			$labelDisplayName.ForeColor = 'Black'
		}
		ElseIf ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -lt 1)
		{
			$labelDisplayName.Text = "*Display Name:"
			$labelDisplayName.ForeColor = 'Firebrick'
		}
		
		If (($checkboxCreateActiveDirector.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $false) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		ElseIf (($checkboxCreateActiveDirector.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		ElseIf (($checkboxCreateActiveDirector.Checked -eq $false) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		Else
		{
			$buttonCreateUser.Enabled = $False
		}
	}
	
	$textboxLastName_TextChanged = {
		If ((($textboxInitials.text | Measure-Object -Character).Characters) -lt 1)
		{
			$textboxDisplayName.Text = $textboxFirstName.Text + " " + $textboxLastName.Text
		}
		Else
		{
			$textboxDisplayName.Text = $textboxFirstName.Text + " " + $textboxInitials.Text + "." + " " + $textboxLastName.Text
		}
	}
	
	$textboxFirstName_TextChanged = {
		If ((($textboxInitials.text | Measure-Object -Character).Characters) -lt 1)
		{
			$textboxDisplayName.Text = $textboxFirstName.text + " " + $textboxLastName.Text
		}
		Else
		{
			$textboxDisplayName.Text = $textboxFirstName.text + " " + $textboxInitials.Text + "." + " " + $textboxLastName.Text
		}
		
	}
	
	$textboxInitials_TextChanged = {
		If ((($textboxInitials.text | Measure-Object -Character).Characters) -lt 1)
		{
			$textboxDisplayName.Text = $textboxFirstName.text + " " + $textboxLastName.Text
		}
		Else
		{
			$textboxDisplayName.Text = $textboxFirstName.text + " " + $textboxInitials.text + "." + $textboxLastName.Text
		}
		
	}
	
	
	$buttonGeneratePassword_Click = {
		add-logs -text 'LOG: Generating random password'
		add-logs -text 'CMD: $textboxPasswordGen.Text = ([char[]]([char]33 .. [char]95) + ([char[]]([char]97 .. [char]126)) + 0 .. 9 | Sort-Object { Get-Random })[0 .. 10] -join '''
		$textboxPasswordGen.Text = ([char[]]([char]33 .. [char]95) + ([char[]]([char]97 .. [char]126)) + 0 .. 9 | Sort-Object { Get-Random })[0 .. 10] -join ''
		$maskedtextboxpassword.Text = $textboxPasswordGen.Text
		$textboxConfirmPassword.text = $textboxPasswordGen.Text
		
	}
	
	$textboxConfirmPassword_TextChanged = {
		If ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0)
		{
			$labelConfirmPassword.Text = "Confirm Password:"
			$labelConfirmPassword.ForeColor = 'Black'
		}
		ElseIf ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -lt 1)
		{
			$labelConfirmPassword.Text = "*Confirm Password:"
			$labelConfirmPassword.ForeColor = 'Firebrick'
		}
		
		If (((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -lt 1) -and ((($maskedtextboxpassword.Text | Measure-Object -Character).Characters) -lt 1))
		{
			$labelpasswordconfirmmessage.Text = ""
		}
		Else
		{
			If (($textboxConfirmPassword.Text) -ne ($maskedtextboxpassword.Text))
			{
				$labelpasswordconfirmmessage.ForeColor = 'Red'
				$labelpasswordconfirmmessage.Text = "Passwords do not match!"
				$buttonCreateUser.Enabled = $false
			}
			ElseIf (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text))
			{
				$labelpasswordconfirmmessage.ForeColor = 'Green'
				$labelpasswordconfirmmessage.Text = "Passwords match!"
				If (($checkboxCreateActiveDirector.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $false) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
				{
					$buttonCreateUser.Enabled = $true
				}
				ElseIf (($checkboxCreateActiveDirector.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
				{
					$buttonCreateUser.Enabled = $true
				}
				ElseIf (($checkboxCreateActiveDirector.Checked -eq $false) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0))
				{
					$buttonCreateUser.Enabled = $true
				}
				Else
				{
					$buttonCreateUser.Enabled = $False
				}
			}
			Else
			{
				$labelpasswordconfirmmessage.Text = ""
			}
		}
		
		
	}
	
	$buttonCopyOnPremUser_Click = {
		If ($checkboxCreateActiveDirector.Checked -eq $true)
		{
			add-logs -text "LOG: Copying AD User attributes to Office 365 user"
			$textboxO365DisplayName.Text = $textboxDisplayName.Text
			$textboxO365LastName.Text = $textboxLastName.Text
			$textboxO365FirstName.Text = $textboxFirstName.text
			#$buttonO365Genpassword.Enabled = $false
			$maskedtextboxo365password.Text = $maskedtextboxpassword.Text
			$textboxo365confirmpassword.Text = $textboxConfirmPassword.text
			$textboxo365passwordgen.Text = $textboxPasswordGen.text
			$textboxO365EmailAddress.Text = $textboxEmail.text
			$textboxO365UPN.Text = ($textboxUserLogonName.text) + ($comboboxDomains.Text)
			
			#Address PAge
			$textboxo365city.Text = $textboxcity.Text
			$textboxO365street.Text = $textboxStreet.Text
			$textboxo365zip.Text = $textboxzipcode.Text
			$textboxo365state.Text = $textboxstate.text
			
			$textboxo365proxyaddresses.Text = $textboxproxyaddress.Text
			$comboboxO365HidefromGAL.SelectedItem = $comboboxhidefromGAL.SelectedItem
			
			$checkboxo365usermustchangepassword.Checked = $checkboxUserMustChangePasswo.Checked
			add-logs -text "LOG: Copy Finished!"
		}
		Else
		{
			add-logs -text "WARN: No Active Directory User is being created"
			$InfoMessage = "No Active Directory user is being created, there is nothing to copy"
			$InfoTitle = "Warning"
			Show-MessageBox_psf
		}
		
	}
	
	$textboxo365confirmpassword_TextChanged={
		If ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0)
		{
			$labelO365userconfirmpassword.Text = "Confirm Password:"
			$labelO365userconfirmpassword.ForeColor = 'Black'
			If (((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0) -and ((($maskedtextboxo365password.Text | Measure-Object -Character).Characters) -gt 0) -and ($buttonConnectToOffice365.Enabled -eq $false))
			{
				$buttonCreateUser.Enabled = $true
			}
			Else
			{
				$buttonCreateUser.Enabled = $false
			}
		}
		ElseIf ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -lt 1)
		{
			$labelO365userconfirmpassword.Text = "*Confirm Password:"
			$labelO365userconfirmpassword.ForeColor = 'Firebrick'
		}
		
		If (((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -lt 1) -and ((($maskedtextboxo365password.Text | Measure-Object -Character).Characters) -lt 1))
		{
			$labelo365password.Text = ""
		}
		Else
		{
			If (($textboxo365confirmpassword.Text) -ne ($maskedtextboxo365password.Text))
			{
				$labelo365password.ForeColor = 'Red'
				$labelo365password.Text = "Passwords do not match!"
				$buttonCreateUser.Enabled = $false
			}
			Else
			{
				$labelo365password.ForeColor = 'Green'
				$labelo365password.Text = "Passwords match!"
				If (($checkboxCreateActiveDirector.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $false) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
				{
					$buttonCreateUser.Enabled = $true
				}
				ElseIf (($checkboxCreateActiveDirector.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
				{
					$buttonCreateUser.Enabled = $true
				}
				ElseIf (($checkboxCreateActiveDirector.Checked -eq $false) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0))
				{
					$buttonCreateUser.Enabled = $true
				}
				Else
				{
					$buttonCreateUser.Enabled = $False
				}
			}
		}
		
	}
	
	$buttonConnectToOffice365_Click = {
		add-logs -text 'LOG: Checking MFA Status'
		If ($radiobuttonDisableMFA.Checked -eq $True)
		{
			add-logs -text 'LOG: Gathering credentials to connect to Office 365'
			add-logs -text 'CMD: Get-Credential -Message "Please enter your Office 365 credentials to connect to Exchange Online and MSOnline"'
			$credential = Get-Credential -Message "Please enter your Office 365 credentials to connect to Exchange Online and MSOnline"
			add-logs -text 'LOG: Done'
			If ($credential -eq $Null)
			{
				add-logs -text 'WARN: Credential object empty'
				$InfoMessage = "No credentials were entered. Please enter valid Office 365 credentials"
				$InfoTitle = "Warning"
				Show-MessageBox_psf
			}
			Else
			{
				add-logs -text 'LOG: Connecting to Office 365'
				add-logs -text 'CMD: Connect-MsolService -Credential $credential'
				Import-Module MSOnline
				Connect-MsolService -Credential $credential
				$exchangeSession = New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri "https://outlook.office365.com/powershell-liveid/" -Authentication "Basic" -AllowRedirection -Credential $credential
				add-logs -text 'LOG: Done'
				add-logs -text 'LOG: Connecting to Exchange Online'
				add-logs -text 'CMD: Import-PSSession $exchangeSession -AllowClobber'
				Import-PSSession $exchangeSession -AllowClobber
				add-logs -text 'LOG: Done'
			}
		}
		Else
		{
			add-logs -text 'LOG: Finding MFA Exchange Online Module'
			add-logs -text 'CMD: Get-ChildItem $Env:LOCALAPPDATA\Apps\2.0\*\CreateExoPSSession.ps1 -Recurse | Select-Object -ExpandProperty Target -First 1'
			$Modules = Get-ChildItem $Env:LOCALAPPDATA\Apps\2.0\*\CreateExoPSSession.ps1 -Recurse | Select-Object -ExpandProperty Target -First 1
			foreach ($Module in $Modules)
			{
				Import-Module "$Module"
			}
			add-logs -text 'LOG: Done'
			add-logs -text 'LOG: Connecting to MSOnline'
			#Connect to MSOnline w/2FA
			Connect-MsolService
			add-logs -text 'LOG: Done'
			#Connect to Exchange Online w/ 2FA
			add-logs -text 'LOG: Connecting to Exchange Online'
			Connect-EXOPSSession
			add-logs -text 'LOG: Done'
		}
		add-logs -text 'LOG: Checking to see if we are connected to Office 365'
		add-logs -text 'CMD: (Get-MsolDomain -ErrorAction SilentlyContinue) -ne $null'
		if ((Get-MsolDomain -ErrorAction SilentlyContinue) -ne $null)
		{
			
			
			
			add-logs -text 'LOG: Connected to Office 365!'
			
			$Global:O365_Pre_Req++
			If (($checkboxCreateActiveDirector.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $false) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
			{
				$buttonCreateUser.Enabled = $true
			}
			ElseIf (($checkboxCreateActiveDirector.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
			{
				$buttonCreateUser.Enabled = $true
			}
			ElseIf (($checkboxCreateActiveDirector.Checked -eq $false) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0))
			{
				$buttonCreateUser.Enabled = $true
			}
			Else
			{
				$buttonCreateUser.Enabled = $False
			}
			
			$labelO365Groups.Text = "To add your user to a Mail Enabled Group, please select a valid license so the user has a mailbox"
			$labelsharedmailboxes.text = "To grant your user permissions on a Shared Mailbox, please select a valid license so the user has a mailbox"
			$labelSecurityGroups.Text = "Please select any Security Groups you want to add your new user to"
		
			add-logs -text 'LOG: Enabling Disconnect from Office 365 menu item'
			add-logs -text 'CMD: $disconnectFromOffice365ToolStripMenuItem.Enabled = $true'
			$disconnectFromOffice365ToolStripMenuItem.Enabled = $true
			add-logs -text 'LOG: Done'
			
			add-logs -text 'LOG: Disabling connect to Office 365 button!'
			add-logs -text 'CMD: $buttonConnectToOffice365.Enabled = $False'
			$buttonConnectToOffice365.Enabled = $False
			$buttonConnectToOffice365.Text = "Connected to Office 365"
			$buttonConnectToOffice365.ForeColor = 'Black'
			add-logs -text 'LOG: Done'
			
			If (((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0) -and ((($maskedtextboxo365password.Text | Measure-Object -Character).Characters) -gt 0) -and ($buttonConnectToOffice365.Enabled -eq $false))
			{
				$buttonCreateUser.Enabled = $true
			}
			Else
			{
				$buttonCreateUser.Enabled = $false
			}
			
			add-logs -text 'LOG: Getting all verified domains for UPN list'
			add-logs -text 'CMD: Update-ComboBox -ComboBox $comboboxO365Domains -Items (Get-MsolDomain | Where-Object {$_.Status -eq "Verified"} | Select-Object -ExpandProperty Name)'
			$DomainsArray = @()
			$Domains = (Get-MsolDomain | Where-Object { $_.Status -eq 'Verified' } | Select-Object -ExpandProperty Name)
			If ($Domains -ne $Null)
			{
				foreach ($Domain in $Domains)
				{
					$DomainsArray += "@" + $Domain
				}
			}
			Else
			{
				add-logs -text 'WARN: No verified domains'
				$DomainsArray = "No verified Domains were found"
			}
			Update-ComboBox -ComboBox $comboboxO365Domains -Items $DomainsArray
			add-logs -text 'LOG: Done'
			
			
			#We only want licenses that have at least one to assign to a user
			$LicenseArray = @()
			
			
			add-logs -text 'LOG: Getting available licenses'
			add-logs -text 'CMD: Get-MsolAccountSku | Where-Object { $_.ActiveUnits -ne $_.ConsumedUnits }'
			$Avaialble = Get-MsolAccountSku | Where-Object { $_.ActiveUnits -ne $_.ConsumedUnits }
			add-logs -text 'LOG: Done'
			
			foreach ($item in $Avaialble)
			{
				add-logs -text 'LOG: Getting Account SKU for license'
				$RemoveDomain = ($item).AccountSkuId
				add-logs -text 'LOG: Removing domain portion of license'
				$LicenseItem = $RemoveDomain -split ":" | Select-Object -Last 1
				add-logs -text 'LOG: Converting SKU to friendly name'
				$TextLic = $Sku.Item("$LicenseItem")
				If (!($TextLic))
				{
					$LicenseArray += $LicenseItem
				}
				Else
				{
					$LicenseArray += $TextLic
				}
				add-logs -text 'LOG: Done'
			}
			
			add-logs -text 'LOG: Enabling Licenses combobox'
			add-logs -text 'CMD: $comboboxO365Licenses.Enabled = $True'
			$comboboxO365Licenses.Enabled = $True
			add-logs -text 'LOG: Done'
			
			
			add-logs -text 'LOG: Loading license combobox with available licenses'
			add-logs -text 'CMD: Update-ComboBox -ComboBox $comboboxO365Licenses ($Avaialble).AccountSkuId'
			Update-ComboBox -ComboBox $comboboxO365Licenses $LicenseArray
			add-logs -text 'LOG: Done'
			
			
			add-logs -text 'LOG: Loading Office 365 Mail Groups ListBox'
			add-logs -text 'CMD: Update-ListBox -ListBox $checkedlistboxDISTROo365groups -Items (Get-MsolGroup | Where-Object {($_.GroupType -eq "DistributionList") -or ($_.GroupType -eq "MailEnabledSecurity") }| Select-Object -ExpandProperty DisplayName | Sort-Object)'
			Update-ListBox -ListBox $checkedlistboxDISTROo365groups -Items (Get-MsolGroup | Where-Object {($_.GroupType -eq "DistributionList") -or ($_.GroupType -eq "MailEnabledSecurity") }| Select-Object -ExpandProperty DisplayName | Sort-Object)
			$comboboxO365Domains.SelectedIndex = 0
			add-logs -text 'LOG: Done'
			
			add-logs -text 'LOG: Loading Office 365 Security Groups ListBox'
			add-logs -text 'CMD: Update-ListBox -ListBox $checkedlistboxO365SecurityGroups -Items (Get-MsolGroup | Where-Object { $_.GroupType -like "*Security*" } | Select-Object -ExpandProperty DisplayName | Sort-Object)'
			Update-ListBox -ListBox $checkedlistboxO365SecurityGroups -Items (Get-MsolGroup | Where-Object { $_.GroupType -eq "Security" } | Select-Object -ExpandProperty DisplayName | Sort-Object)
			$comboboxO365Domains.SelectedIndex = 0
			$labelSecurityGroups.Text = "Please select any Security Groups you want to add your new user to"
			
			add-logs -text 'LOG: Done'
			
			
			$labelO365Groups.Text = "To add your user to a Mail Enabled Group, please select a valid license so the user has a mailbox"
			
			$labelsharedmailboxes.text = "To grant your user permissions on a Shared Mailbox, please select a valid license so the user has a mailbox"
			
			add-logs -text 'LOG: Getting all Shared Mailboxes'
			$Shared = Get-Mailbox | Where-Object { $_.RecipientTypeDetails -eq "SharedMailbox" } | Select-Object -ExpandProperty DisplayName | Sort-Object
			Update-ListBox -ListBox $checkedlistboxsharedmailboxes -Items $Shared
			add-logs -text 'LOG: Done'
			
		}
		Else
		{
			add-logs -text 'WARN: Not connected to Office 365!'
		}
		
		
		
	}
	
	
	
	$buttonO365Genpassword_Click = {
		add-logs -text 'LOG: Generating random password'
		add-logs -text 'LOG: ([char[]]([char]33 .. [char]95) + ([char[]]([char]97 .. [char]126)) + 0 .. 9 | Sort-Object { Get-Random })[0 .. 10] -join '''
		$textboxo365passwordgen.Text = ([char[]]([char]33 .. [char]95) + ([char[]]([char]97 .. [char]126)) + 0 .. 9 | Sort-Object { Get-Random })[0 .. 10] -join ''
		$maskedtextboxo365password.Text = $textboxo365passwordgen.Text
		$textboxo365confirmpassword.Text = $textboxo365passwordgen.Text
		add-logs -text 'LOG: Done'
	
		
	}
	
	
	$checkboxRunDirSyncAfterUserC_CheckedChanged={
		If ($checkboxRunDirSyncAfterUserC.Checked -eq $True)
		{
			$textboxO365FirstName.Enabled = $false
			$textboxO365DisplayName.Enabled = $false
			$textboxO365Initials.Enabled = $false
			$textboxO365LastName.Enabled = $false
			$buttonCopyOnPremUser.Enabled = $false
			$buttonO365Genpassword.Enabled = $false
			$textboxConfirmPassword.Enabled = $false
			$maskedtextboxo365password.Enabled = $false
			$textboxO365UPN.Enabled = $false
			$textboxo365state.Enabled = $false
			$textboxo365city.Enabled = $false
			$textboxo365zip.Enabled = $false
			$textboxo365pobox.Enabled = $false
			
			$labelO365Groups.Text = "This feature is not available for AD-Synced enviornments."
		}
		elseif ($checkboxRunDirSyncAfterUserC.Checked -eq $false)
		{
			$textboxO365FirstName.Enabled = $true
			$textboxO365DisplayName.Enabled = $true
			$textboxO365Initials.Enabled = $true
			$textboxO365LastName.Enabled = $true
			$buttonCopyOnPremUser.Enabled = $true
			$buttonO365Genpassword.Enabled = $true
			$textboxConfirmPassword.Enabled = $true
			$maskedtextboxo365password.Enabled = $true
			$textboxO365UPN.Enabled = $true
			$textboxo365state.Enabled = $true
			$textboxo365city.Enabled = $true
			$textboxo365zip.Enabled = $true
			$textboxo365pobox.Enabled = $true
			
			$labelO365Groups.Text = "Please check all groups you want your user to be a member of."
		}
	}
	
	$buttonExit_Click={
		Get-PSSession | Remove-PSSession
		$MainForm.close()
	}
	
	$textboxO365LastName_TextChanged={
		If ((($textboxO365Initials.text | Measure-Object -Character).Characters) -lt 1)
		{
			$textboxO365DisplayName.Text = $textboxO365FirstName.Text + " " + $textboxO365LastName.Text
		}
		Else
		{
			$textboxO365DisplayName.Text = $textboxO365FirstName.Text + " " + $textboxO365Initials.Text + "." + " " + $textboxO365LastName.Text
			
		}
	}
	
	$textboxO365FirstName_TextChanged={
		If ((($textboxO365Initials.text | Measure-Object -Character).Characters) -lt 1)
		{
			$textboxO365DisplayName.Text = $textboxO365FirstName.text + " " + $textboxO365LastName.Text
		}
		Else
		{
			$textboxO365DisplayName.Text = $textboxO365FirstName.text + " " + $textboxO365Initials.Text + "." + " " + $textboxO365LastName.Text
		}
		
	}
	
	$textboxO365Initials_TextChanged={
		If ((($textboxO365Initials.text | Measure-Object -Character).Characters) -lt 1)
		{
			$textboxO365DisplayName.Text = $textboxO365FirstName.text + " " + $textboxO365LastName.Text
		}
		Else
		{
			$textboxO365DisplayName.Text = $textboxO365FirstName.text + " " + $textboxO365Initials.text + "." + $textboxO365LastName.Text
		}
		
	}
	
	
	
	$console_TextChanged={
		$console.SelectionStart = $console.TextLength;
		$console.ScrollToCaret()
		$console.Focus()
		
	}
	
	$buttonO365Clear_Click = {
		add-logs -text 'LOG: Clearing randomly generated password'
		add-logs -text 'CMD: $textboxo365passwordgen.text = ""'
		$textboxo365passwordgen.text = ""
		
	}
	
	$buttonClear_Click={
		add-logs -text 'LOG: Clearing randomly generated password'
		add-logs -text 'CMD: $textboxPasswordGen.Text = "" '
		$textboxPasswordGen.Text = ""
	}
	
	$checkboxconfigo365user_CheckedChanged = {
		If (($checkboxCreateActiveDirector.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $false) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		ElseIf (($checkboxCreateActiveDirector.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		ElseIf (($checkboxCreateActiveDirector.Checked -eq $false) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		Else
		{
			$buttonCreateUser.Enabled = $False
		}
		If (($checkboxconfigo365user.Checked -eq $true))
		{
			add-logs -text 'LOG: Checking if DirSync is present on localhost'
			Import-Module ADSync -ErrorAction SilentlyContinue
			$ADSyncModule = Get-Module | Where-Object { $_.Name -eq "ADSync" } -ErrorAction SilentlyContinue
			If ($null -ne $ADSyncModule)
			{
				add-logs -text 'LOG: DirSync found, enabling DirSync option'
				$checkboxRunDirSyncAfterUserC.Enabled = $True
				$groupboxADSync.Enabled = $true
				add-logs -text 'LOG: Done'
			}
			Else
			{
				add-logs -text 'LOG: No DirSync Found. Enabling manual user creation'
				$groupboxNoAdSync.Enabled = $true
				add-logs -text 'LOG: Done'
			}
		}
		Else
		{
			add-logs -text 'LOG: Disabling Office 365 manual user creation'
			$groupboxNoAdSync.Enabled = $false
			add-logs -text 'LOG: Done'
		}
		
	}
	
	$checkboxCreateActiveDirector_CheckedChanged = {
		If (($checkboxCreateActiveDirector.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $false) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		ElseIf (($checkboxCreateActiveDirector.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		ElseIf (($checkboxCreateActiveDirector.Checked -eq $false) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		Else
		{
			$buttonCreateUser.Enabled = $False
		}
		If (($checkboxCreateActiveDirector.Checked -eq $true) )
		{
			add-logs -text 'LOG: Enabling AD User creation'
			$tabcontrolUserProperties.Enabled = $true
			add-logs -text 'LOG: Done'
			
			add-logs -text 'LOG: Loading Organizational Unit Tree'
			add-logs -text "CMD: `$OUTree = (Get-ADOrganizationalUnit -Filter * -Properties CanonicalName | Sort-Object | Select-Object -Property CanonicalName).CanonicalName"
			$OUTree = (Get-ADOrganizationalUnit -Filter * -Properties CanonicalName | Sort-Object | Select-Object -Property CanonicalName).CanonicalName
			add-logs -text "CMD: Update-ComboBox -ComboBox `$comboboxOUTree -Items $OUTree"
			Update-ComboBox -ComboBox $comboboxOUTree -Items $OUTree
			add-logs -text 'LOG: Done'
			
			add-logs -text 'LOG: Getting Active Directory Groups'
			add-logs -text 'CMD: $Groups = Get-ADGroup -Filter * | Where-Object {($_.Name -ne "Domain Users") -and ($_.Name -ne "Domain Computers")} | Select-Object -ExpandProperty Name | Sort-Object'
			$Groups = Get-ADGroup -Filter * | Where-Object { ($_.Name -ne "Domain Users") -and ($_.Name -ne "Domain Computers") } | Select-Object -ExpandProperty Name | Sort-Object
			If ($null -eq $Groups)
			{
				add-logs -text 'WARN: No Active Directory Groups were found'
				$InfoMessage = 'No Active Directory Group objects were found when running Get-ADGroup'
				$InfoTitle = "Warning"
				Show-MessageBox_psf
			}
			Else
			{
				add-logs -text 'CMD: Update-ListBox -ListBox $checkedlistboxGroups -Items $Groups'
				Update-ListBox -ListBox $checkedlistboxGroups -Items $Groups
				add-logs -text 'LOG: Done'
			}
			
			add-logs -text 'LOG: Getting NetBIOS Name'
			add-logs -text 'CMD: (Get-ADDomain).NetBIOSName'
			$Netbiosname = (Get-ADDomain).NetBIOSName
			If ($null -eq $Netbiosname)
			{
				add-logs -text 'WARN: No NetBIOS Name was found'
				$InfoMessage = 'No NetBIOS Name was found when running (Get-ADDomain).NetBIOSName'
				$InfoTitle = "Warning"
				Show-MessageBox_psf
			}
			Else
			{
				$textboxUPNDomain.Text = $Netbiosname + "\"
				add-logs -text 'LOG: Done'
			}
			
			add-logs -text 'LOG: Getting UPN Suffixes'
			add-logs -text 'CMD: $Forest = Get-ADForest'
			$Forest = Get-ADForest
			If ($null -eq $Forest)
			{
				add-logs -text 'WARN: No Active Directory Forest was found'
				$InfoMessage = 'No Active Directory Forest was found when running Get-ADForest'
				$InfoTitle = "Warning"
				Show-MessageBox_psf
			}
			Else
			{
				$UPNs = @()
				add-logs -text 'CMD: ($Forest | Select-Object UPNSuffixes -ExpandProperty UPNSuffixes)'
				$extraUPNS = ($Forest | Select-Object UPNSuffixes -ExpandProperty UPNSuffixes)
				If ($extraUPNs -ne $Null)
				{
					foreach ($extraUPN in $extraUPNs)
					{
						$UPNs += "@" + $extraUPN
					}
				}
				add-logs -text 'CMD: $UPNs += "@" +  ($Forest | Select-Object -ExpandProperty Name)'
				$UPNs += "@" + ($Forest | Select-Object -ExpandProperty Name)
				Update-ComboBox -ComboBox $comboboxDomains -Items $UPNs
			}
			add-logs -text 'LOG: Done'
			
			$comboboxDomains.SelectedIndex = 0
			
		}
		Else
		{
			$tabcontrolUserProperties.Enabled = $false	
		}
		
	}
	
	$copyAllLogToClipboardToolStripMenuItem_Click = {
		add-logs -text 'LOG: Copying log to clipboard'
		add-logs -text 'CMD: $console.Text | clip'
		$console.Text | clip
		add-logs -text 'LOG: Done'
		
	}
	
	$clearLogToolStripMenuItem_Click = {
		add-logs -text 'LOG: Clearing log'
		add-logs -text 'CMD: $console.Text = ""'
		$console.Text = ""
		add-logs -text 'LOG: Done'
		
	}
	
	$exitToolStripMenuItem_Click = {
		Get-PSSession | Remove-PSSession
		$MainForm.close()
		
	}
	
	
	
	$textboxUserLogonName_TextChanged = {
		If ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0)
		{
			$labelUserLogonNameUPN.Text = "User logon name: (UPN)"
			$labelUserLogonNameUPN.ForeColor = 'Black'
		}
		ElseIf ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -lt 1)
		{
			$labelUserLogonNameUPN.Text = "*User logon name: (UPN)"
			$labelUserLogonNameUPN.ForeColor = 'Firebrick'
		}
		
		If (($checkboxCreateActiveDirector.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $false) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		ElseIf (($checkboxCreateActiveDirector.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		ElseIf (($checkboxCreateActiveDirector.Checked -eq $false) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		Else
		{
			$buttonCreateUser.Enabled = $False
		}
	}
	
	
	
	
	$maskedtextboxpassword_TextChanged = {
		If ((($maskedtextboxpassword.Text | Measure-Object -Character).Characters) -gt 0)
		{
			$labelPassword.Text = "Password:"
			$labelPassword.ForeColor = 'Black'
			
		}
		ElseIf ((($maskedtextboxpassword.Text | Measure-Object -Character).Characters) -lt 1)
		{
			$labelPassword.Text = "*Password:"
			$labelPassword.ForeColor = 'Firebrick'
			
		}
		
		If (((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -lt 1) -and ((($maskedtextboxpassword.Text | Measure-Object -Character).Characters) -lt 1))
		{
			$labelpasswordconfirmmessage.Text = ""
		}
		Else
		{
			If (($textboxConfirmPassword.Text) -ne ($maskedtextboxpassword.Text))
			{
				$labelpasswordconfirmmessage.ForeColor = 'Red'
				$labelpasswordconfirmmessage.Text = "Passwords do not match!"
				$buttonCreateUser.Enabled = $false
			}
			ElseIf (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text))
			{
				$labelpasswordconfirmmessage.ForeColor = 'Green'
				$labelpasswordconfirmmessage.Text = "Passwords match!"
				If (($checkboxCreateActiveDirector.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $false) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
				{
					$buttonCreateUser.Enabled = $true
				}
				ElseIf (($checkboxCreateActiveDirector.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
				{
					$buttonCreateUser.Enabled = $true
				}
				ElseIf (($checkboxCreateActiveDirector.Checked -eq $false) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0))
				{
					$buttonCreateUser.Enabled = $true
				}
				Else
				{
					$buttonCreateUser.Enabled = $False
				}
			}
			Else
			{
				$labelpasswordconfirmmessage.Text = ""
			}
		}
		
		
	}
	
	
	
	
	
	$resetFormToolStripMenuItem_Click = {
		
		###########################
		#                         #
		#  ACTIVE DIRECTORY USER  #
		#                         #
		###########################
		
		#General Page
		add-logs -text 'LOG: Resetting forms on General Page for Active Directory'
		$textboxFirstName.Text = ""
		$textboxInitials.Text = ""
		$textboxLastName.Text = ""
		$textboxDisplayName.Text = ""
		$textboxDescription.Text = ""
		$textboxoffice.Text = ""
		$textboxPasswordGen.Text = ""
		$maskedtextboxpassword.Text = ""
		$textboxConfirmPassword.Text = ""
		$textboxTelephone.Text = ""
		$textboxEmail.Text = ""
		$textboxWebPage.Text = ""
		add-logs -text 'LOG: Done'
		
		#Account Page
		add-logs -text 'LOG: Resetting forms on Account Page for Active Directory'
		$textboxUserLogonName.Text = ""
		$textboxSamAccount.Text = ""
		$checkboxAccountIsDisabled.CheckState = 'Unchecked'
		$checkboxUserMustChangePasswo.CheckState = 'Unchecked'
		$checkboxUserCannotChangePass.CheckState = 'Unchecked'
		$checkboxPasswordNeverExpires.CheckState = 'Unchecked'
		add-logs -text 'LOG: Done'
		
		#Address Page
		add-logs -text 'LOG: Resetting forms on Address Page for Active Directory'
		$textboxStreet.Text = ""
		$textboxPOBox.Text = ""
		$textboxcity.Text = ""
		$textboxstate.Text = ""
		$textboxzipcode.Text = ""
		add-logs -text 'LOG: Done'
		
		#Groups Page
		add-logs -text 'LOG: Resetting forms on Groups Page for Active Directory'
		for ($i = 0; $i -lt $checkedlistboxGroups.Items.Count; $i++)
		{
			
			$checkedlistboxGroups.SetItemCheckState($i, 'Unchecked')
			
		}
		add-logs -text 'LOG: Done'
		
		#Organization Page
		add-logs -text 'LOG: Resetting forms on Organization Page for Active Directory'
		$textboxjobtitle.Text = ""
		$textboxDepartment.Text = ""
		$textboxCompany.Text = ""
		add-logs -text 'LOG: Done'
		
		#Profile Page
		add-logs -text 'LOG: Resetting forms on Profile Page for Active Directory'
		$textboxprofilepath.Text = ""
		$textboxlogonscript.Text = ""
		$comboboxDriveLetter.SelectedIndex = 0
		$textboxhomedirectory.Text = ""
		add-logs -text 'LOG: Done'
		
		#Attributes Page
		add-logs -text 'LOG: Resetting forms on Attributes Page for Active Directory'
		$textboxproxyaddress.Text = ""
		add-logs -text 'LOG: Done'
		
		
		###########################
		#                         #
		#     OFFICE 365 USER     #
		#                         #
		###########################
		
		#General Page
		add-logs -text 'LOG: Resetting forms on General Page for Office 365'
		$textboxO365FirstName.Text = ""
		$textboxO365LastName.Text = ""
		$textboxO365DisplayName.Text = ""
		$textboxo365passwordgen.Text = ""
		$maskedtextboxo365password.Text = ""
		$textboxo365confirmpassword.Text = ""
		add-logs -text 'LOG: Done'
		
		#Account Page
		add-logs -text 'LOG: Resetting forms on Account Page for Office 365'
		$checkboxRunDirSyncAfterUserC.Checked = $false
		$textboxO365UPN.Text = ""
		$textboxO365EmailAddress.Text = ""
		$textboxo365proxyaddresses.Text = ""
		$checkboxo365usermustchangepassword.Checked = $false
		$checkboxO365PasswordNeverExpires.Checked = $false
		$checkboxBlockCred.Checked = $false
		add-logs -text 'LOG: Done'
		
		#Address Page
		add-logs -text 'LOG: Resetting forms on Address Page for Office 365'
		$textboxO365street.Text = ""
		$textboxo365city.Text = ""
		$textboxo365state.Text = ""
		$textboxo365zip.Text = ""
		add-logs -text 'LOG: Done'
		
		#Mail Groups Page
		add-logs -text 'LOG: Resetting forms on Mail Groups Page for Office 365'
		for ($i = 0; $i -lt $checkedlistboxDISTROo365groups.Items.Count; $i++)
		{
			
			$checkedlistboxDISTROo365groups.SetItemCheckState($i, 'Unchecked')
			
		}
		add-logs -text 'LOG: Done'
		
		#Security Groups Page
		add-logs -text 'LOG: Resetting forms on Security Groups Page for Office 365'
		for ($i = 0; $i -lt $checkedlistboxO365SecurityGroups.Items.Count; $i++)
		{
			
			$checkedlistboxO365SecurityGroups.SetItemCheckState($i, 'Unchecked')
			
		}
		add-logs -text 'LOG: Done'
		
		#Shared Mailboxes Page
		add-logs -text 'LOG: Resetting forms on Shared Mailboxes Page for Office 365'
		$comboboxsharedmaiboxpermission.SelectedIndex = 0
		$comboboxsharedmailboxautomap.SelectedIndex = 0
		for ($i = 0; $i -lt $checkedlistboxsharedmailboxes.Items.Count; $i++)
		{
			
			$checkedlistboxsharedmailboxes.SetItemCheckState($i, 'Unchecked')
			
		}
		add-logs -text 'LOG: Done'
	}
	
	$linklabelBradWyatt_LinkClicked = [System.Windows.Forms.LinkLabelLinkClickedEventHandler]{
		add-logs -text 'LOG: Navigating to author site'
		add-logs -text 'CMD: start-process -FilePath "https://www.linkedin.com/in/bradleywyatt/"'
		start-process -FilePath "https://www.linkedin.com/in/bradleywyatt/"
		add-logs -text 'LOG: Done'
		
	}
	
	$linklabelGitHubProject_LinkClicked = [System.Windows.Forms.LinkLabelLinkClickedEventHandler]{
		add-logs -text 'LOG: Navigating to GitHub Project site'
		add-logs -text 'CMD: Start-Process -FilePath "https://github.com/bwya77/AD-Master-User-Creator"'
		Start-Process -FilePath "https://github.com/bwya77/AD-Master-User-Creator"
		add-logs -text 'LOG: Done'
		
	}
	
	$textboxO365DisplayName_TextChanged= {
		If ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0)
		{
			$labelO365DisplayName.Text = "Display Name:"
			$labelO365DisplayName.ForeColor = 'Black'
		}
		ElseIf ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -lt 1)
		{
			$labelO365DisplayName.Text = "*Display Name:"
			$labelO365DisplayName.ForeColor = 'Firebrick'
		}
		
		If (($checkboxCreateActiveDirector.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $false) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		ElseIf (($checkboxCreateActiveDirector.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		ElseIf (($checkboxCreateActiveDirector.Checked -eq $false) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		Else
		{
			$buttonCreateUser.Enabled = $False
		}
	}
	
	$textboxO365UPN_TextChanged= {
		If ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0)
		{
			$labelO365UserPrincipalName.Text = "UserPrincipalName:"
			$labelO365UserPrincipalName.ForeColor = 'Black'
		}
		ElseIf ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -lt 1)
		{
			$labelO365UserPrincipalName.Text = "*UserPrincipalName:"
			$labelO365UserPrincipalName.ForeColor = 'Firebrick'
		}
		If (($checkboxCreateActiveDirector.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $false) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		ElseIf (($checkboxCreateActiveDirector.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		ElseIf (($checkboxCreateActiveDirector.Checked -eq $false) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0))
		{
			$buttonCreateUser.Enabled = $true
		}
		Else
		{
			$buttonCreateUser.Enabled = $False
		}
	}
	
	
	$maskedtextboxo365password_TextChanged={
		If ((($maskedtextboxo365password.Text | Measure-Object -Character).Characters) -gt 0)
		{
			$labelO365userpassword.Text = "Password:"
			$labelO365userpassword.ForeColor = 'Black'
		}
		ElseIf ((($maskedtextboxo365password.Text | Measure-Object -Character).Characters) -lt 1)
		{
			$labelO365userpassword.Text = "*Password:"
			$labelO365userpassword.ForeColor = 'Firebrick'
		}
		
		If (((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -lt 1) -and ((($maskedtextboxo365password.Text | Measure-Object -Character).Characters) -lt 1))
		{
			$labelo365password.Text = ""
		}
		Else
		{
			If (($textboxo365confirmpassword.Text) -ne ($maskedtextboxo365password.Text))
			{
				$labelo365password.ForeColor = 'Red'
				$labelo365password.Text = "Passwords do not match!"
				$buttonCreateUser.Enabled = $false
			}
			Else
			{
				$labelo365password.ForeColor = 'Green'
				$labelo365password.Text = "Passwords match!"
				
				If (($checkboxCreateActiveDirector.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $false) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
				{
					$buttonCreateUser.Enabled = $true
				}
				ElseIf (($checkboxCreateActiveDirector.Checked -eq $true) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and (($textboxConfirmPassword.Text) -eq ($maskedtextboxpassword.Text)) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxConfirmPassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxDisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxUserLogonName.Text | Measure-Object -Character).Characters) -gt 0))
				{
					$buttonCreateUser.Enabled = $true
				}
				ElseIf (($checkboxCreateActiveDirector.Checked -eq $false) -and ($checkboxconfigo365user.Checked -eq $true) -and ($O365_Pre_Req -eq 1) -and ((($textboxo365confirmpassword.Text | Measure-Object -Character).Characters) -gt 0) -and (($maskedtextboxo365password.text) -eq ($textboxo365confirmpassword.text)) -and ((($textboxO365DisplayName.Text | Measure-Object -Character).Characters) -gt 0) -and ((($textboxO365UPN.Text | Measure-Object -Character).Characters) -gt 0))
				{
					$buttonCreateUser.Enabled = $true
				}
				Else
				{
					$buttonCreateUser.Enabled = $False
				}
			}
		}
	}
	
	
	$comboboxO365Licenses_SelectedIndexChanged={
		If ($comboboxO365Licenses.SelectedIndex -eq $null)
		{
			$checkedlistboxDISTROo365groups.Enabled = $false
			$comboboxsharedmaiboxpermission.Enabled = $false
			$comboboxsharedmailboxautomap.Enabled = $false
			$labelSecurityGroups.Text = "Please connect to Office 365 in the General tab to add your user to Groups.
If no license is selected for your user, this will remain disabled"
			$checkedlistboxsharedmailboxes.Enabled = $false
			$labelsharedmailboxes.Text = "Please connect to Office 365 in the General tab to add your user to Shared Mailboxes.
If no license is selected for your user, this will remain disabled"
			If (($comboboxO365countrycode.SelectedItem -eq $Null) -and ($comboboxO365Licenses.SelectedItem -ne $null))
			{
				$labelCountryCode.Text = "*Country Code"
				$labelCountryCode.ForeColor = 'Firebrick'
				$comboboxO365countrycode.SelectedItem = "US"
			}
			Else
			{
				$labelCountryCode.Text = "Country Code"
				$labelCountryCode.ForeColor = 'Black'
			}
		}
		Else
		{
			$checkedlistboxDISTROo365groups.Enabled = $true
			$comboboxsharedmaiboxpermission.Enabled = $true
			$comboboxsharedmailboxautomap.Enabled = $true
			$labelO365Groups.Text = "Please select any Mail Enabled groups to add your user to"
			$checkedlistboxsharedmailboxes.Enabled = $true
			$labelsharedmailboxes.Text = "Please select any Shared Mailbox you want your user to have access to. The permission level and automapping you set will apply to all Shared Mailboxes you select"
			If (($comboboxO365countrycode.SelectedItem -eq $Null) -and ($comboboxO365Licenses.SelectedItem -ne $null))
			{
				$labelCountryCode.Text = "*Country Code"
				$labelCountryCode.ForeColor = 'Firebrick'
				$comboboxO365countrycode.SelectedItem = "US"
			}
			Else
			{
				$labelCountryCode.Text = "Country Code"
				$labelCountryCode.ForeColor = 'Black'
			}
		}
		
	}
	
	
	$comboboxO365countrycode_SelectedIndexChanged={
		If (($comboboxO365countrycode.SelectedItem -eq $Null) -and ($comboboxO365Licenses.SelectedItem -ne $null))
			{
				$labelCountryCode.Text = "*Country Code"
				$labelCountryCode.ForeColor = 'Firebrick'
		}
		Else
		{
			$labelCountryCode.Text = "Country Code"
			$labelCountryCode.ForeColor = 'Black'
		}
		
	}
	
	$disconnectFromOffice365ToolStripMenuItem_Click = {
		$Global:O365_Pre_Req--
		Add-Logs -text 'LOG: Removing PSSessiong'
		Add-Logs -text 'CMD: Get-PSSession | Remove-PSSession'
		Get-PSSession | Remove-PSSession
		$buttonConnectToOffice365.Enabled = $true
		$buttonConnectToOffice365.Text = "*Connect to Office 365"
		$buttonConnectToOffice365.ForeColor = 'Firebrick'
		Add-Logs -text 'LOG: Done'
		$disconnectFromOffice365ToolStripMenuItem.Enabled = $false
		
	}
	
	
	
	$saveLogAsToolStripMenuItem_Click={
		$SaveChooser = New-Object -Typename System.Windows.Forms.SaveFileDialog
		$SaveChooser.title = "Save Log File"
		$SaveChooser.filter = "Text File|*.txt"
		$SaveChooser.ShowDialog()
		$console.Text | Out-File $SaveChooser.Filename
		
	}
	
	$comboboxsharedmaiboxpermission_SelectedIndexChanged={
		If ($comboboxsharedmaiboxpermission.SelectedItem -eq "Full Access")
		{
			$comboboxsharedmailboxautomap.Enabled = $true
			Update-ComboBox -ComboBox $comboboxsharedmailboxautomap -Items "True", "False"
			$comboboxsharedmailboxautomap.SelectedIndex = 0
		}
		Else
		{
			Update-ComboBox -ComboBox $comboboxsharedmailboxautomap -Items ""
			$comboboxsharedmailboxautomap.Enabled = $false
			
		}
		
	}
	
	
	
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$MainForm.WindowState = $InitialFormWindowState
	}
	
	$Form_StoreValues_Closing=
	{
		#Store the control values
		$script:MainForm_console = $console.Text
		$script:MainForm_radiobuttonEnableMFA = $radiobuttonEnableMFA.Checked
		$script:MainForm_radiobuttonDisableMFA = $radiobuttonDisableMFA.Checked
		$script:MainForm_checkboxCreateActiveDirector = $checkboxCreateActiveDirector.Checked
		$script:MainForm_checkboxconfigo365user = $checkboxconfigo365user.Checked
		$script:MainForm_maskedtextboxpassword = $maskedtextboxpassword.Text
		$script:MainForm_textboxConfirmPassword = $textboxConfirmPassword.Text
		$script:MainForm_textboxPasswordGen = $textboxPasswordGen.Text
		$script:MainForm_textboxWebPage = $textboxWebPage.Text
		$script:MainForm_textboxEmail = $textboxEmail.Text
		$script:MainForm_textboxTelephone = $textboxTelephone.Text
		$script:MainForm_textboxoffice = $textboxoffice.Text
		$script:MainForm_textboxDescription = $textboxDescription.Text
		$script:MainForm_textboxDisplayName = $textboxDisplayName.Text
		$script:MainForm_textboxFirstName = $textboxFirstName.Text
		$script:MainForm_textboxInitials = $textboxInitials.Text
		$script:MainForm_textboxLastName = $textboxLastName.Text
		$script:MainForm_comboboxOUTree = $comboboxOUTree.Text
		$script:MainForm_comboboxOUTree_SelectedItem = $comboboxOUTree.SelectedItem
		$script:MainForm_checkboxAccountIsDisabled = $checkboxAccountIsDisabled.Checked
		$script:MainForm_checkboxPasswordNeverExpires = $checkboxPasswordNeverExpires.Checked
		$script:MainForm_checkboxUserCannotChangePass = $checkboxUserCannotChangePass.Checked
		$script:MainForm_checkboxUserMustChangePasswo = $checkboxUserMustChangePasswo.Checked
		$script:MainForm_textboxSamAccount = $textboxSamAccount.Text
		$script:MainForm_textboxUPNDomain = $textboxUPNDomain.Text
		$script:MainForm_comboboxDomains = $comboboxDomains.Text
		$script:MainForm_comboboxDomains_SelectedItem = $comboboxDomains.SelectedItem
		$script:MainForm_textboxUserLogonName = $textboxUserLogonName.Text
		$script:MainForm_textboxzipcode = $textboxzipcode.Text
		$script:MainForm_textboxstate = $textboxstate.Text
		$script:MainForm_textboxcity = $textboxcity.Text
		$script:MainForm_textboxPOBox = $textboxPOBox.Text
		$script:MainForm_textboxStreet = $textboxStreet.Text
		$script:MainForm_checkedlistboxGroups = $checkedlistboxGroups.SelectedItems
		$script:MainForm_textboxCompany = $textboxCompany.Text
		$script:MainForm_textboxDepartment = $textboxDepartment.Text
		$script:MainForm_textboxjobtitle = $textboxjobtitle.Text
		$script:MainForm_textboxhomedirectory = $textboxhomedirectory.Text
		$script:MainForm_comboboxDriveLetter = $comboboxDriveLetter.Text
		$script:MainForm_comboboxDriveLetter_SelectedItem = $comboboxDriveLetter.SelectedItem
		$script:MainForm_textboxlogonscript = $textboxlogonscript.Text
		$script:MainForm_textboxprofilepath = $textboxprofilepath.Text
		$script:MainForm_textboxproxyaddress = $textboxproxyaddress.Text
		$script:MainForm_comboboxO365Licenses = $comboboxO365Licenses.Text
		$script:MainForm_comboboxO365Licenses_SelectedItem = $comboboxO365Licenses.SelectedItem
		$script:MainForm_textboxO365FirstName = $textboxO365FirstName.Text
		$script:MainForm_maskedtextboxo365password = $maskedtextboxo365password.Text
		$script:MainForm_textboxo365confirmpassword = $textboxo365confirmpassword.Text
		$script:MainForm_textboxo365passwordgen = $textboxo365passwordgen.Text
		$script:MainForm_textboxO365LastName = $textboxO365LastName.Text
		$script:MainForm_textboxO365DisplayName = $textboxO365DisplayName.Text
		$script:MainForm_comboboxMFA = $comboboxMFA.Text
		$script:MainForm_comboboxMFA_SelectedItem = $comboboxMFA.SelectedItem
		$script:MainForm_comboboxO365Domains = $comboboxO365Domains.Text
		$script:MainForm_comboboxO365Domains_SelectedItem = $comboboxO365Domains.SelectedItem
		$script:MainForm_textboxo365proxyaddresses = $textboxo365proxyaddresses.Text
		$script:MainForm_textboxO365EmailAddress = $textboxO365EmailAddress.Text
		$script:MainForm_comboboxO365countrycode = $comboboxO365countrycode.Text
		$script:MainForm_comboboxO365countrycode_SelectedItem = $comboboxO365countrycode.SelectedItem
		$script:MainForm_checkboxBlockCred = $checkboxBlockCred.Checked
		$script:MainForm_checkboxO365PasswordNeverExpires = $checkboxO365PasswordNeverExpires.Checked
		$script:MainForm_checkboxo365usermustchangepassword = $checkboxo365usermustchangepassword.Checked
		$script:MainForm_textboxO365UPN = $textboxO365UPN.Text
		$script:MainForm_textboxo365zip = $textboxo365zip.Text
		$script:MainForm_textboxo365state = $textboxo365state.Text
		$script:MainForm_textboxo365city = $textboxo365city.Text
		$script:MainForm_textboxO365street = $textboxO365street.Text
		$script:MainForm_labelO365Groups = $labelO365Groups.Text
		$script:MainForm_checkedlistboxDISTROo365groups = $checkedlistboxDISTROo365groups.SelectedItems
		$script:MainForm_labelSecurityGroups = $labelSecurityGroups.Text
		$script:MainForm_checkedlistboxO365SecurityGroups = $checkedlistboxO365SecurityGroups.SelectedItems
		$script:MainForm_comboboxsharedmailboxautomap = $comboboxsharedmailboxautomap.Text
		$script:MainForm_comboboxsharedmailboxautomap_SelectedItem = $comboboxsharedmailboxautomap.SelectedItem
		$script:MainForm_comboboxsharedmaiboxpermission = $comboboxsharedmaiboxpermission.Text
		$script:MainForm_comboboxsharedmaiboxpermission_SelectedItem = $comboboxsharedmaiboxpermission.SelectedItem
		$script:MainForm_labelsharedmailboxes = $labelsharedmailboxes.Text
		$script:MainForm_checkedlistboxsharedmailboxes = $checkedlistboxsharedmailboxes.SelectedItems
		$script:MainForm_comboboxO365HidefromGAL = $comboboxO365HidefromGAL.Text
		$script:MainForm_comboboxO365HidefromGAL_SelectedItem = $comboboxO365HidefromGAL.SelectedItem
		$script:MainForm_checkboxRunDirSyncAfterUserC = $checkboxRunDirSyncAfterUserC.Checked
	}

	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$console.remove_TextChanged($console_TextChanged)
			$buttonExit.remove_Click($buttonExit_Click)
			$buttonCreateUser.remove_Click($buttonCreateUser_Click)
			$linklabelBradWyatt.remove_LinkClicked($linklabelBradWyatt_LinkClicked)
			$linklabelGitHubProject.remove_LinkClicked($linklabelGitHubProject_LinkClicked)
			$checkboxCreateActiveDirector.remove_CheckedChanged($checkboxCreateActiveDirector_CheckedChanged)
			$checkboxconfigo365user.remove_CheckedChanged($checkboxconfigo365user_CheckedChanged)
			$maskedtextboxpassword.remove_TextChanged($maskedtextboxpassword_TextChanged)
			$buttonClear.remove_Click($buttonClear_Click)
			$textboxConfirmPassword.remove_TextChanged($textboxConfirmPassword_TextChanged)
			$buttonGeneratePassword.remove_Click($buttonGeneratePassword_Click)
			$labelFirstName.remove_Click($labelFirstName_Click)
			$textboxDisplayName.remove_TextChanged($textboxDisplayName_TextChanged)
			$textboxFirstName.remove_TextChanged($textboxFirstName_TextChanged)
			$textboxInitials.remove_TextChanged($textboxInitials_TextChanged)
			$textboxLastName.remove_TextChanged($textboxLastName_TextChanged)
			$textboxUserLogonName.remove_TextChanged($textboxUserLogonName_TextChanged)
			$buttonConnectToOffice365.remove_Click($buttonConnectToOffice365_Click)
			$buttonCopyOnPremUser.remove_Click($buttonCopyOnPremUser_Click)
			$comboboxO365Licenses.remove_SelectedIndexChanged($comboboxO365Licenses_SelectedIndexChanged)
			$textboxO365FirstName.remove_TextChanged($textboxO365FirstName_TextChanged)
			$maskedtextboxo365password.remove_TextChanged($maskedtextboxo365password_TextChanged)
			$buttonO365Clear.remove_Click($buttonO365Clear_Click)
			$textboxo365confirmpassword.remove_TextChanged($textboxo365confirmpassword_TextChanged)
			$buttonO365Genpassword.remove_Click($buttonO365Genpassword_Click)
			$textboxO365LastName.remove_TextChanged($textboxO365LastName_TextChanged)
			$textboxO365DisplayName.remove_TextChanged($textboxO365DisplayName_TextChanged)
			$comboboxO365countrycode.remove_SelectedIndexChanged($comboboxO365countrycode_SelectedIndexChanged)
			$textboxO365UPN.remove_TextChanged($textboxO365UPN_TextChanged)
			$comboboxsharedmaiboxpermission.remove_SelectedIndexChanged($comboboxsharedmaiboxpermission_SelectedIndexChanged)
			$checkboxRunDirSyncAfterUserC.remove_CheckedChanged($checkboxRunDirSyncAfterUserC_CheckedChanged)
			$MainForm.remove_Load($MainForm_Load)
			$exitToolStripMenuItem.remove_Click($exitToolStripMenuItem_Click)
			$copyAllLogToClipboardToolStripMenuItem.remove_Click($copyAllLogToClipboardToolStripMenuItem_Click)
			$clearLogToolStripMenuItem.remove_Click($clearLogToolStripMenuItem_Click)
			$resetFormToolStripMenuItem.remove_Click($resetFormToolStripMenuItem_Click)
			$disconnectFromOffice365ToolStripMenuItem.remove_Click($disconnectFromOffice365ToolStripMenuItem_Click)
			$saveLogAsToolStripMenuItem.remove_Click($saveLogAsToolStripMenuItem_Click)
			$MainForm.remove_Load($Form_StateCorrection_Load)
			$MainForm.remove_Closing($Form_StoreValues_Closing)
			$MainForm.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$MainForm.SuspendLayout()
	$tabcontrol1.SuspendLayout()
	$tabpageSettings.SuspendLayout()
	$groupbox1.SuspendLayout()
	$groupbox2FA.SuspendLayout()
	$groupboxADUser.SuspendLayout()
	$groupboxOffice365User.SuspendLayout()
	$tabpage1.SuspendLayout()
	$tabcontrolUserProperties.SuspendLayout()
	$tabpageGeneral.SuspendLayout()
	$panel1.SuspendLayout()
	$tabpageAccount.SuspendLayout()
	$panel2.SuspendLayout()
	$tabpageAddress.SuspendLayout()
	$tabpageGroups.SuspendLayout()
	$tabpageOrganization.SuspendLayout()
	$tabpageProfile.SuspendLayout()
	$groupbox2.SuspendLayout()
	$groupboxuserprofile.SuspendLayout()
	$tabpageattributes.SuspendLayout()
	$tabpageOffice365.SuspendLayout()
	$groupboxNoAdSync.SuspendLayout()
	$tabcontrol2.SuspendLayout()
	$tabpageO365General.SuspendLayout()
	$panel3.SuspendLayout()
	$tabpageO365Account.SuspendLayout()
	$panel4.SuspendLayout()
	$tabpageO365Address.SuspendLayout()
	$tabpageO365Groups.SuspendLayout()
	$tabpagesecurityGroups.SuspendLayout()
	$tabpageo365shared.SuspendLayout()
	$groupbox3.SuspendLayout()
	$tabpageO365Attributes.SuspendLayout()
	$groupboxADSync.SuspendLayout()
	$menustrip1.SuspendLayout()
	#
	# MainForm
	#
	$MainForm.Controls.Add($console)
	$MainForm.Controls.Add($buttonExit)
	$MainForm.Controls.Add($buttonCreateUser)
	$MainForm.Controls.Add($tabcontrol1)
	$MainForm.Controls.Add($menustrip1)
	$MainForm.AutoScaleDimensions = '192, 192'
	$MainForm.AutoScaleMode = 'Dpi'
	$MainForm.AutoSize = $True
	$MainForm.AutoSizeMode = 'GrowAndShrink'
	$MainForm.BackColor = 'Control'
	$MainForm.ClientSize = '1067, 1278'
	$MainForm.FormBorderStyle = 'FixedSingle'
	#region Binary Data
	$MainForm.Icon = [System.Convert]::FromBase64String('
AAABAAUAEBAAAAEAIABoBAAAVgAAABgYAAABACAAiAkAAL4EAAAgIAAAAQAgAKgQAABGDgAAMDAA
AAEAIACoJQAA7h4AAAAAAAABACAAJB4AAJZEAAAoAAAAEAAAACAAAAABACAAAAAAAAAEAADXDQAA
1w0AAAAAAAAAAAAAWkj/01pI/+1aSP/vWkj/71pI/+9aSP/vWkj/71pI/+9aSP/vWkj/8lpI/4mT
iP8Aw77/BMC7/wLAu/8AAAAAAFpI//9aSP/YWkj/plpI/6daSP+nWkj/p1pI/6daSP+nWkj/p1pI
/6haR/9byMT/BsC7/4TAu/9lwLv/AMC7/wBaSP//Wkj/jVpI/wBaSP8BWkj/AVpI/wFaSP8BWkj/
AVpI/wFYRv8BxsL/AMC7/xHAu//SwLv/p8C7/wHAu/8AWkj//1pI/4xaSP8AWkj/AAAAAAAAAAAA
AAAAAAAAAADAu/8AwLv/EcC7/2jAu/+DwLv/6MC7/9HAu/96wLv/ZFpI//9aSP+VWkj/AFpI/wAA
AAAAAAAAAAAAAAAAAAAAwLv/AMC7/y3Au//ZwLv/8cC7//zAu//5wLv/78C7/9haSP/YWkj/0FpI
/yBaSP8AWkj/AAAAAAAAAAAAAAAAAMC7/wDAu/8EwLv/IsC7/zvAu//bwLv/t8C7/y7Au/8gWkj/
ZFpI//BaSP/FWkj/blpI/19aSP9gWkj/YFpI/1laSP80Wkj/CKGY/wDAu/8PwLv/zMC7/6HAu/8A
wLv/AFpI/wVaSP9iWkj/1VpI//daSP//Wkj//1pI//paSP/4Wkj/8FpI/6FaSP8g////AMC7/0TA
u/8ywLv/AMC7/wBaSP8AWkj/AFpI/x1aSP+3Wkj//FpI/6daSP9QWkj/SlpI/5laSP/2Wkj/tFpI
/xNaSP8AAAAAAAAAAAAAAAAAAAAAAFpI/wBaSP82Wkj/7VpI/6FaSP8MWkj/AFpI/wBaSP8FWkj/
hlpI//taSP9iWkj/AFpI/wAAAAAAAAAAAFpI/wBaSP8AWkj/b1pI//ZaSP9BWkj/AFpI/wAAAAAA
Wkj/AFpI/ypaSP/rWkj/olpI/wFaSP8AAAAAAAAAAABaSP8AWkj/AFpI/31aSP/xWkj/MVpI/wAA
AAAAAAAAAFpI/wBaSP8dWkj/4lpI/69aSP8DWkj/AAAAAAAAAAAAWkj/AFpI/wBaSP9YWkj/+VpI
/2laSP8AWkj/AFpI/wBaSP8AWkj/TVpI//laSP+JWkj/AFpI/wAAAAAAAAAAAAAAAABaSP8AWkj/
GlpI/81aSP/fWkj/S1pI/wpaSP8HWkj/O1pI/85aSP/qWkj/OFpI/wAAAAAAAAAAAAAAAAAAAAAA
Wkj/AFpI/wBaSP9EWkj/3FpI//JaSP/CWkj/vVpI/+xaSP/tWkj/aFpI/wJaSP8AAAAAAAAAAAAA
AAAAAAAAAAAAAABaSP8AWkj/AFpI/zRaSP+kWkj/41pI/+haSP+3Wkj/TVpI/wRaSP8AAAAAAAAA
AAAAAAAAAAAAAAATAAAAAwAAICEAAD+AAAA/gAAAH4AAAAAjAAAAEwAAwA8AAMMPAADHhwAAx4cA
AMePAADADwAA4A8AAPAfAAAoAAAAGAAAADAAAAABACAAAAAAAAAJAADXDQAA1w0AAAAAAAAAAAAA
Wkj/pVpI/95aSP/eWkj/3lpI/95aSP/eWkj/3lpI/95aSP/eWkj/3lpI/95aSP/eWkj/3lpI/95a
SP/gWkj/nlpI/w1aSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWkj/+1pI//9aSP//Wkj//1pI
//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj/3VpI/x91Z/8AwLv/
FMC7/zDAu/8IwLv/AAAAAAAAAAAAWkj//1pI//5aSP+tWkj/f1pI/4FaSP+BWkj/gVpI/4FaSP+B
Wkj/gVpI/4FaSP+BWkj/gVpI/4FaSP+CWkj/UFA9/wPHw/8EwLv/msC7/+/Au/9awLv/AMC7/wAA
AAAAWkj//1pI//5aSP9aWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAMC7/wDAu/8MwLv/xMC7///Au/+AwLv/AMC7/wAAAAAAWkj//1pI//5aSP9aWkj/
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAu/8AwLv/AcC7/wLAu/8O
wLv/xcC7///Au/+CwLv/AMC7/wPAu/8AWkj//1pI//5aSP9aWkj/AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAMC7/wDAu/8YwLv/jcC7/6zAu/+vwLv/7MC7///Au//VwLv/qsC7
/6rAu/94Wkj//lpI//5aSP9dWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AMC7/wDAu/9JwLv/+MC7///Au///wLv//8C7///Au///wLv//8C7///Au//xWkj/61pI//9aSP+D
Wkj/AFpI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMC7/wDAu/8UwLv/gMC7/57A
u/+iwLv/6cC7///Au//PwLv/nMC7/5zAu/9rWkj/rVpI//9aSP/YWkj/LlpI/wBaSP8AAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMC7/wDAu/8MwLv/xMC7///Au/+AwLv/
AMC7/wAAAAAAWkj/QlpI/+VaSP//Wkj/zVpI/1taSP8pWkj/JFpI/yRaSP8kWkj/JFpI/yNaSP8b
Wkj/CVpI/wBaSP8AAAAAAMC7/wDAu/8LwLv/xMC7///Au/+AwLv/AMC7/wAAAAAAWkj/AVpI/2Za
SP/uWkj//1pI//paSP/pWkj/5FpI/+VaSP/lWkj/5VpI/+RaSP/cWkj/ulpI/21aSP8XWkj/ALy3
/wDAu/8DwLv/ksC7/+fAu/9UwLv/AMC7/wAAAAAAWkj/AFpI/wNaSP9NWkj/vVpI/+9aSP/8Wkj/
/1pI//9aSP//Wkj//1pI//5aSP//Wkj//1pI//1aSP/CWkj/NlpI/wC6tP8AwLv/EMC7/ybAu/8G
wLv/AAAAAAAAAAAAAAAAAFpI/wBaSP8AWkj/DVpI/0BaSP/TWkj//1pI//xaSP/HWkj/d1pI/1Za
SP9sWkj/tlpI//daSP//Wkj/0lpI/yxaSP8AWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AABaSP8AWkj/AFpI/19aSP/4Wkj//VpI/5VaSP8WWkj/AFpI/wBaSP8AWkj/C1pI/3RaSP/zWkj/
/1pI/6ZaSP8IWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/DlpI/8BaSP//
Wkj/ulpI/xJaSP8AAAAAAAAAAAAAAAAAWkj/AFpI/wVaSP+UWkj//1pI/+9aSP86Wkj/AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/L1pI/+xaSP/+Wkj/X1pI/wBaSP8AAAAAAAAA
AAAAAAAAAAAAAFpI/wBaSP84Wkj/71pI//9aSP9yWkj/AFpI/wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAABaSP8AWkj/R1pI//laSP/yWkj/N1pI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAFpI/wBaSP8Z
Wkj/2VpI//9aSP+PWkj/AFpI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/Q1pI//da
SP/0Wkj/PlpI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAFpI/wBaSP8dWkj/3VpI//9aSP+MWkj/AFpI
/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/KFpI/+ZaSP//Wkj/dVpI/wBaSP8AAAAA
AAAAAAAAAAAAWkj/AFpI/wBaSP9LWkj/9lpI//9aSP9oWkj/AFpI/wAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAABaSP8AWkj/CFpI/7BaSP//Wkj/1VpI/ylaSP8AWkj/AAAAAABaSP8AWkj/AFpI/xRa
SP+2Wkj//1pI/+VaSP8tWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/AFpI
/0taSP/wWkj//1pI/8JaSP89Wkj/B1pI/wBaSP8DWkj/KlpI/6daSP/9Wkj//1pI/4xaSP8DWkj/
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWkj/AFpI/wRaSP98Wkj/91pI//9aSP/s
Wkj/tFpI/5VaSP+qWkj/4lpI//9aSP//Wkj/tlpI/xpaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAFpI/wBaSP8IWkj/bFpI/99aSP/+Wkj//1pI//9aSP//Wkj//1pI
//FaSP+bWkj/HVpI/wBaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAABaSP8AWkj/AlpI/y9aSP+HWkj/xVpI/9taSP/QWkj/oFpI/0xaSP8JWkj/AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/AAAARwAAAAcAH/+HAB/+BQAf/AAAH/wAAB/8AAAP
/4cAAAeHAAABhwCAAMcA4AB/APBwPwDg+D8A4fw/AOH8PwDh/D8A4fw/AOD4PwDwID8A8AB/APgA
/wD8Af8AKAAAACAAAABAAAAAAQAgAAAAAAAAEAAA1w0AANcNAAAAAAAAAAAAAFpI/3BaSP/JWkj/
0lpI/9FaSP/RWkj/0VpI/9FaSP/RWkj/0VpI/9FaSP/RWkj/0VpI/9FaSP/RWkj/0VpI/9FaSP/R
Wkj/0VpI/9FaSP/SWkj/oFpI/xlaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAWkj/71pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI
//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP/9Wkj/X1pI/wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAABaSP//Wkj//1pI//9aSP/+Wkj//lpI//5aSP/+Wkj//lpI//5aSP/+
Wkj//lpI//5aSP/+Wkj//lpI//5aSP/+Wkj//lpI//5aSP/+Wkj//1pI/+paSP9EWkj/AMC7/wDA
u/8lwLv/gsC7/2DAu/8IwLv/AAAAAAAAAAAAAAAAAFpI//9aSP//Wkj/81pI/3taSP9bWkj/XVpI
/11aSP9dWkj/XVpI/11aSP9dWkj/XVpI/11aSP9dWkj/XVpI/11aSP9dWkj/XVpI/11aSP9dWkj/
OlpI/wSFef8AwLv/AsC7/5zAu///wLv/8sC7/0PAu/8AAAAAAAAAAAAAAAAAWkj//1pI//9aSP/t
Wkj/L1pI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAMC7/wDAu/8HwLv/ucC7///Au//+wLv/XMC7/wAAAAAAAAAAAAAA
AABaSP//Wkj//1pI/+1aSP8vWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwLv/AMC7/wfAu/+5wLv//8C7//7Au/9c
wLv/AAAAAAAAAAAAAAAAAFpI//9aSP//Wkj/7VpI/y9aSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMC7/wDAu/8AwLv/CsC7/xbAu/8WwLv/HcC7
/7/Au///wLv//sC7/2rAu/8TwLv/F8C7/xPAu/8EWkj//1pI//9aSP/tWkj/L1pI/wAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwLv/AMC7/yHAu/+t
wLv/1sC7/9bAu//XwLv/9MC7///Au///wLv/5cC7/9XAu//WwLv/0MC7/4JaSP/+Wkj//1pI/+1a
SP8wWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AADAu/8AwLv/YsC7//7Au///wLv//8C7///Au///wLv//8C7///Au///wLv//8C7///Au///wLv/
9FpI//RaSP//Wkj/9VpI/0NaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAMC7/wDAu/81wLv/1sC7//TAu//0wLv/9MC7//zAu///wLv//8C7//jA
u//0wLv/9MC7//HAu/+vWkj/z1pI//9aSP//Wkj/hVpI/wBaSP8AAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwLv/AMC7/wHAu/8iwLv/PMC7/zzAu/9CwLv/
ysC7///Au//+wLv/gsC7/znAu/88wLv/NsC7/xFaSP+BWkj//VpI//9aSP/kWkj/QFpI/wBaSP8A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAwLv/AMC7/wfAu/+5wLv//8C7//7Au/9bwLv/AAAAAAAAAAAAAAAAAFpI/yRaSP/QWkj//1pI
//9aSP/aWkj/XlpI/xVaSP8FWkj/BFpI/wRaSP8EWkj/BFpI/wRaSP8EWkj/A1pI/wFaSP8AAAAA
AAAAAAAAAAAAAAAAAAAAAADAu/8AwLv/B8C7/7nAu///wLv//sC7/1zAu/8AAAAAAAAAAAAAAAAA
Wkj/AFpI/1RaSP/tWkj//1pI//9aSP/4Wkj/0VpI/7NaSP+uWkj/rlpI/65aSP+uWkj/rlpI/65a
SP+rWkj/mVpI/21aSP8xWkj/BlpI/wBaSP8AAAAAAMC7/wDAu/8EwLv/q8C7///Au//5wLv/T8C7
/wAAAAAAAAAAAAAAAABaSP8AWkj/A1pI/19aSP/kWkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj/
/1pI//9aSP//Wkj//1pI//9aSP//Wkj//lpI/+paSP+eWkj/LlpI/wBaSP8AwLv/AMC7/wDAu/9C
wLv/t8C7/5LAu/8TwLv/AAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/AVpI/zZaSP+iWkj/5VpI//pa
SP/+Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP/bWkj/UVpI
/wFaSP8AwLv/AMC7/wDAu/8IwLv/BMC7/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/
AFpI/wZaSP8nWkj/ZVpI/+daSP//Wkj//1pI//9aSP/iWkj/oVpI/3JaSP9tWkj/kVpI/9JaSP/8
Wkj//1pI//9aSP/nWkj/TFpI/wBaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAWkj/AFpI/wFaSP9+Wkj//FpI//9aSP/7Wkj/pVpI/yxaSP8DWkj/AFpI
/wBaSP8BWkj/GlpI/4BaSP/wWkj//1pI//9aSP/RWkj/IlpI/wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/L1pI/+RaSP//Wkj//1pI/51aSP8P
Wkj/AFpI/wAAAAAAAAAAAAAAAABaSP8AWkj/A1pI/21aSP/2Wkj//1pI//9aSP+FWkj/AFpI/wAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWkj/AFpI/wBaSP99Wkj//1pI
//9aSP/UWkj/IVpI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/CVpI/6ZaSP//Wkj/
/1pI/9VaSP8aWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8A
Wkj/CVpI/7paSP//Wkj//1pI/4JaSP8AWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpI/wBa
SP8AWkj/SlpI//ZaSP//Wkj/9lpI/0VaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAFpI/wBaSP8YWkj/2FpI//9aSP/5Wkj/S1pI/wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAFpI/wBaSP8eWkj/3lpI//9aSP//Wkj/Z1pI/wBaSP8AAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWkj/AFpI/x9aSP/gWkj//1pI//RaSP88Wkj/AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWkj/AFpI/xRaSP/SWkj//1pI//9aSP90Wkj/AFpI
/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/GVpI/9haSP//Wkj/
+VpI/01aSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/H1pI/99aSP//
Wkj//1pI/2laSP8AWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpI/wBa
SP8KWkj/vFpI//9aSP//Wkj/hVpI/wBaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWkj/AFpI
/wBaSP9NWkj/91pI//9aSP/3Wkj/R1pI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAWkj/AFpI/wBaSP+BWkj//1pI//9aSP/XWkj/JVpI/wBaSP8AAAAAAAAAAAAAAAAA
AAAAAAAAAABaSP8AWkj/C1pI/6taSP//Wkj//1pI/9daSP8cWkj/AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWkj/AFpI/zNaSP/nWkj//1pI//9aSP+kWkj/E1pI
/wBaSP8AAAAAAAAAAAAAAAAAWkj/AFpI/wVaSP90Wkj/+FpI//9aSP//Wkj/ilpI/wBaSP8AAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/AlpI/4haSP//
Wkj//1pI//xaSP+uWkj/NFpI/wVaSP8AWkj/AFpI/wJaSP8gWkj/iVpI//NaSP//Wkj//1pI/9Za
SP8mWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AABaSP8AWkj/F1pI/7RaSP//Wkj//1pI//9aSP/oWkj/q1pI/31aSP93Wkj/m1pI/9laSP/9Wkj/
/1pI//9aSP/rWkj/UlpI/wBaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAFpI/wBaSP8AWkj/IFpI/65aSP/8Wkj//1pI//9aSP//Wkj//1pI//9a
SP//Wkj//1pI//9aSP//Wkj/4VpI/1laSP8CWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpI/wBaSP8AWkj/EVpI/3RaSP/WWkj/
+1pI//9aSP//Wkj//1pI//9aSP/+Wkj/7VpI/6daSP80Wkj/AVpI/wAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABa
SP8AWkj/AVpI/yJaSP9pWkj/p1pI/8haSP/NWkj/ulpI/4haSP9AWkj/CVpI/wBaSP8AAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/AAAD/wAAAw8AAAIPD//+
Dw///g8P//AAD//gAA//4AAP/+AAD//gAAf//g8AAP4PgAAeD4AADw/AAAOf8AAD//gGAf/4H4H/
+D/A//B/4P/wf+D/8H/g//B/4P/wf+D/+D/A//gfgf/4BgH//AAD//4AA///AAf//4Af/ygAAAAw
AAAAYAAAAAEAIAAAAAAAACQAANcNAADXDQAAAAAAAAAAAABaSP8dWkj/glpI/7RaSP+1Wkj/tVpI
/7VaSP+1Wkj/tVpI/7VaSP+1Wkj/tVpI/7VaSP+1Wkj/tVpI/7VaSP+1Wkj/tVpI/7VaSP+1Wkj/
tVpI/7VaSP+1Wkj/tVpI/7VaSP+1Wkj/tVpI/7VaSP+1Wkj/tVpI/7VaSP+RWkj/J1pI/wBaSP8A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABa
SP+qWkj//FpI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI
//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj/
/1pI//9aSP//Wkj/slpI/w9aSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAABaSP/4Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9a
SP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI
//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj/7FpI/zFaSP8AAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP//Wkj//1pI//9aSP//
Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9a
SP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj/1lpI
/x5aSP8AAAAAAMC7/wDAu/8BwLv/KcC7/13Au/9BwLv/B8C7/wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAABaSP//Wkj//1pI//9aSP//Wkj/9FpI/+FaSP/hWkj/4VpI/+FaSP/hWkj/4VpI/+FaSP/h
Wkj/4VpI/+FaSP/hWkj/4VpI/+FaSP/hWkj/4VpI/+FaSP/hWkj/4VpI/+FaSP/hWkj/4VpI/+Fa
SP/hWkj/4VpI/+FaSP/KWkj/VFpI/wBaSP8AwLv/AMC7/wDAu/84wLv/18C7///Au//ywLv/dMC7
/wHAu/8AAAAAAAAAAAAAAAAAAAAAAAAAAABaSP//Wkj//1pI//9aSP//Wkj/r1pI/yNaSP8iWkj/
IlpI/yJaSP8iWkj/IlpI/yJaSP8iWkj/IlpI/yJaSP8iWkj/IlpI/yJaSP8iWkj/IlpI/yJaSP8i
Wkj/IlpI/yJaSP8iWkj/IlpI/yJaSP8iWkj/IlpI/yFaSP8TWkj/AVpI/wAAAAAAwLv/AMC7/wDA
u/+OwLv//8C7///Au///wLv/08C7/xfAu/8AAAAAAAAAAAAAAAAAAAAAAAAAAABaSP//Wkj//1pI
//9aSP//Wkj/olpI/wFaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAwLv/AMC7/wHAu/+hwLv//8C7///Au///wLv/4MC7/yHAu/8AAAAAAAAAAAAA
AAAAAAAAAAAAAABaSP//Wkj//1pI//9aSP//Wkj/o1pI/wJaSP8AAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwLv/AMC7/wHAu/+hwLv//8C7///Au///
wLv/4MC7/yHAu/8AAAAAAAAAAAAAAAAAAAAAAAAAAABaSP//Wkj//1pI//9aSP//Wkj/o1pI/wJa
SP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwLv/
AMC7/wHAu/+hwLv//8C7///Au///wLv/4MC7/yHAu/8AAAAAAAAAAAAAAAAAAAAAAAAAAABaSP//
Wkj//1pI//9aSP//Wkj/o1pI/wJaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAwLv/AMC7/wHAu/+gwLv//8C7///Au///wLv/4MC7/yDAu/8AAAAA
AAAAAAAAAAAAAAAAAAAAAABaSP//Wkj//1pI//9aSP//Wkj/o1pI/wJaSP8AAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAwLv/AMC7/wHAu/8pwLv/YMC7/2nAu/9pwLv/acC7/2nAu//IwLv//8C7
///Au///wLv/7cC7/3zAu/9nwLv/acC7/2nAu/9nwLv/QcC7/wlaSP//Wkj//1pI//9aSP//Wkj/
o1pI/wJaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwLv/AMC7/zfAu//XwLv//8C7///A
u///wLv//8C7///Au///wLv//8C7///Au///wLv//8C7///Au///wLv//8C7///Au///wLv/8MC7
/4RaSP//Wkj//1pI//9aSP//Wkj/o1pI/wJaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAu/8A
wLv/AMC7/43Au///wLv//8C7///Au///wLv//8C7///Au///wLv//8C7///Au///wLv//8C7///A
u///wLv//8C7///Au///wLv//8C7//BaSP/7Wkj//1pI//9aSP//Wkj/q1pI/wRaSP8AAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAADAu/8AwLv/AMC7/4bAu///wLv//8C7///Au///wLv//8C7///Au///
wLv//8C7///Au///wLv//8C7///Au///wLv//8C7///Au///wLv//8C7/+paSP/qWkj//1pI//9a
SP//Wkj/yFpI/xBaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwLv/AMC7/yvAu//FwLv/
+MC7//rAu//6wLv/+sC7//rAu//9wLv//8C7///Au///wLv//sC7//vAu//6wLv/+sC7//rAu//6
wLv/48C7/25aSP/CWkj//1pI//9aSP//Wkj/71pI/z1aSP8AWkj/AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAwLv/AMC7/wDAu/8awLv/RsC7/07Au/9OwLv/TsC7/0/Au/++wLv//8C7///Au///wLv/
6sC7/2TAu/9MwLv/TsC7/07Au/9MwLv/LMC7/wRaSP+AWkj//VpI//9aSP//Wkj//1pI/6BaSP8I
Wkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwLv/AMC7
/wHAu/+gwLv//8C7///Au///wLv/4MC7/yDAu/8AAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8yWkj/
4VpI//9aSP//Wkj//1pI//VaSP9rWkj/A1pI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAwLv/AMC7/wHAu/+hwLv//8C7///Au///wLv/4MC7/yHAu/8AAAAAAAAA
AAAAAAAAAAAAAAAAAABaSP8DWkj/jlpI//9aSP//Wkj//1pI//9aSP/vWkj/eVpI/xNaSP8AWkj/
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwLv/AMC7/wHAu/+hwLv//8C7///A
u///wLv/4MC7/yHAu/8AAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/JFpI/9FaSP//Wkj//1pI
//9aSP//Wkj/+lpI/8NaSP9wWkj/PlpI/yxaSP8qWkj/KlpI/ypaSP8qWkj/KlpI/ypaSP8qWkj/
KlpI/ypaSP8oWkj/IVpI/xNaSP8EWkj/AFpI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
wLv/AMC7/wHAu/+hwLv//8C7///Au///wLv/4MC7/yHAu/8AAAAAAAAAAAAAAAAAAAAAAAAAAABa
SP8AWkj/AFpI/0taSP/nWkj//1pI//9aSP//Wkj//1pI//9aSP/+Wkj/81pI/+paSP/oWkj/6FpI
/+haSP/oWkj/6FpI/+haSP/oWkj/6FpI/+haSP/nWkj/4VpI/85aSP+pWkj/blpI/ytaSP8EWkj/
AAAAAAAAAAAAAAAAAAAAAAAAAAAAwLv/AMC7/wDAu/+HwLv//8C7///Au///wLv/zcC7/xTAu/8A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWkj/AFpI/wFaSP9WWkj/4lpI//9aSP//Wkj//1pI//9a
SP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI
//9aSP//Wkj//lpI/+RaSP+XWkj/L1pI/wFaSP8AAAAAAAAAAAAAAAAAwLv/AMC7/wDAu/8rwLv/
xcC7//fAu//lwLv/YsC7/wDAu/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpI/wBaSP8B
Wkj/PlpI/75aSP/7Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9a
SP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj/4FpI/2taSP8KWkj/AAAA
AAAAAAAAAAAAAMC7/wDAu/8AwLv/GsC7/0PAu/8swLv/A8C7/wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/AFpI/xRaSP9oWkj/wlpI//BaSP/+Wkj//1pI//9aSP//
Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9a
SP//Wkj//1pI//daSP+PWkj/EFpI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpI/wBaSP8AWkj/
D1pI/zpaSP9lWkj/qFpI//taSP//Wkj//1pI//9aSP//Wkj//1pI//1aSP/kWkj/ulpI/5xaSP+W
Wkj/rFpI/9RaSP/3Wkj//1pI//9aSP//Wkj//1pI//9aSP/8Wkj/kVpI/wtaSP8AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpI/wBaSP8PWkj/rFpI//9aSP//Wkj//1pI//9aSP//Wkj/
2FpI/3VaSP8pWkj/CVpI/wFaSP8AWkj/BFpI/xhaSP9RWkj/tFpI//haSP//Wkj//1pI//9aSP//
Wkj/+FpI/3FaSP8BWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWkj/AFpI/wBaSP9yWkj/+1pI
//9aSP//Wkj//1pI//xaSP+rWkj/KFpI/wBaSP8AAAAAAAAAAAAAAAAAAAAAAFpI/wBaSP8AWkj/
DVpI/3FaSP/rWkj//1pI//9aSP//Wkj//1pI/+RaSP83Wkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAWkj/AFpI/yVaSP/aWkj//1pI//9aSP//Wkj//1pI/6NaSP8TWkj/AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAWkj/AFpI/wJaSP9dWkj/7lpI//9aSP//Wkj//1pI//9aSP+iWkj/
BlpI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/AFpI/3ZaSP//Wkj//1pI//9aSP//Wkj/x1pI/x5a
SP8AWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpI/wBaSP8DWkj/flpI
//1aSP//Wkj//1pI//9aSP/rWkj/N1pI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/D1pI/8JaSP//
Wkj//1pI//9aSP/2Wkj/VVpI/wBaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABaSP8AWkj/GFpI/8laSP//Wkj//1pI//9aSP//Wkj/gFpI/wBaSP8AAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAABaSP8AWkj/MVpI/+xaSP//Wkj//1pI//9aSP/EWkj/EVpI/wAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/AFpI/3JaSP//Wkj//1pI//9a
SP//Wkj/u1pI/wpaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/WFpI//xaSP//Wkj//1pI//9aSP+GWkj/
AFpI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
Wkj/AFpI/zRaSP/tWkj//1pI//9aSP//Wkj/3VpI/x9aSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpI/wBaSP8AWkj/dFpI
//9aSP//Wkj//1pI//1aSP9cWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAWkj/AFpI/xhaSP/VWkj//1pI//9aSP//Wkj/7lpI/zJaSP8A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAFpI/wBaSP8AWkj/gVpI//9aSP//Wkj//1pI//laSP9MWkj/AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWkj/AFpI/w9aSP/JWkj/
/1pI//9aSP//Wkj/81pI/ztaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpI/wBaSP8AWkj/fVpI//9aSP//Wkj//1pI//ta
SP9SWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAWkj/AFpI/xJaSP/OWkj//1pI//9aSP//Wkj/8VpI/zlaSP8AAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpI/wBaSP8A
Wkj/alpI//9aSP//Wkj//1pI//9aSP9xWkj/AFpI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWkj/AFpI/yRaSP/iWkj//1pI//9aSP//Wkj/6FpI
/ytaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/SFpI//daSP//Wkj//1pI//9aSP+oWkj/BVpI/wAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWkj/AFpI/1Na
SP/5Wkj//1pI//9aSP//Wkj/0lpI/xZaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/IVpI/95aSP//Wkj/
/1pI//9aSP/lWkj/MFpI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAABaSP8AWkj/BlpI/6RaSP//Wkj//1pI//9aSP//Wkj/pVpI/wNaSP8AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AABaSP8AWkj/BVpI/6ZaSP//Wkj//1pI//9aSP//Wkj/llpI/wZaSP8AAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpI/wBaSP8AWkj/SFpI/+5aSP//Wkj//1pI//9aSP/8
Wkj/YVpI/wBaSP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/AFpI/1FaSP/2Wkj//1pI//9aSP//Wkj/8lpI
/2BaSP8BWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWkj/AFpI/wBaSP8kWkj/
yFpI//9aSP//Wkj//1pI//9aSP/TWkj/HVpI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWkj/AFpI/w5a
SP+1Wkj//1pI//9aSP//Wkj//1pI/+haSP9eWkj/BVpI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AABaSP8AWkj/AFpI/ylaSP+7Wkj//1pI//9aSP//Wkj//1pI//1aSP90Wkj/AFpI/wAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAWkj/AFpI/wBaSP9AWkj/6FpI//9aSP//Wkj//1pI//9aSP/xWkj/j1pI/yda
SP8CWkj/AAAAAAAAAAAAWkj/AFpI/wBaSP8RWkj/XlpI/9NaSP//Wkj//1pI//9aSP//Wkj//1pI
/71aSP8WWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpI/wBaSP8BWkj/cFpI//daSP//
Wkj//1pI//9aSP//Wkj//lpI/99aSP+aWkj/X1pI/0BaSP86Wkj/T1pI/39aSP/FWkj/91pI//9a
SP//Wkj//1pI//9aSP//Wkj/3VpI/zlaSP8AWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAABaSP8AWkj/CFpI/4NaSP/3Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//VpI//VaSP/y
Wkj/+lpI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP/iWkj/TVpI/wBaSP8AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWkj/AFpI/wlaSP90Wkj/61pI//9aSP//Wkj/
/1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI/9BaSP9F
Wkj/AFpI/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpI
/wBaSP8DWkj/R1pI/79aSP/6Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj//1pI//9aSP//Wkj/
/1pI//9aSP/vWkj/mlpI/yVaSP8AWkj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaSP8AWkj/AFpI/xNaSP9eWkj/tFpI/+daSP/7Wkj//1pI
//9aSP//Wkj//1pI//9aSP/3Wkj/21pI/5taSP9AWkj/B1pI/wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpI/wBa
SP8AWkj/C1pI/zVaSP9pWkj/k1pI/6taSP+xWkj/pVpI/4daSP9YWkj/JFpI/wRaSP8AWkj/AAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAA//8AAAAAAAB//wAAAAAAAH//AAAAAAAAcH8AAAAAAADwPwAA
AAAAAPA/AAAD////4D8AAAP////gPwAAA////+A/AAAD////4D8AAAP///gAAAAAA///+AAAAAAD
///4AAAAAAP///gAAAAAA///+AAAAAAD///8AAAAAAH////gPwAAAP///+A/AAAAf///4D8AAIAA
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
iP8BjCyhguhy23IAAAAASUVORK5CYII=')
	#endregion
	$MainForm.MainMenuStrip = $menustrip1
	$MainForm.Margin = '9, 8, 9, 8'
	$MainForm.Name = 'MainForm'
	$MainForm.StartPosition = 'CenterScreen'
	$MainForm.Text = 'Master User Creation Tool'
	$MainForm.add_Load($MainForm_Load)
	#
	# console
	#
	$console.BackColor = 'InactiveBorder'
	$console.Cursor = 'Default'
	$console.Font = 'Microsoft Sans Serif, 7.5pt'
	$console.Location = '26, 1064'
	$console.Margin = '6, 6, 6, 6'
	$console.Multiline = $True
	$console.Name = 'console'
	$console.ReadOnly = $True
	$console.ScrollBars = 'Both'
	$console.Size = '1014, 128'
	$console.TabIndex = 12
	$console.add_TextChanged($console_TextChanged)
	#
	# buttonExit
	#
	$buttonExit.Location = '610, 1204'
	$buttonExit.Margin = '6, 6, 6, 6'
	$buttonExit.Name = 'buttonExit'
	$buttonExit.Size = '162, 46'
	$buttonExit.TabIndex = 14
	$buttonExit.Text = '&Exit'
	$buttonExit.UseCompatibleTextRendering = $True
	$buttonExit.UseVisualStyleBackColor = $True
	$buttonExit.add_Click($buttonExit_Click)
	#
	# buttonCreateUser
	#
	$buttonCreateUser.Location = '157, 1204'
	$buttonCreateUser.Margin = '6, 6, 6, 6'
	$buttonCreateUser.Name = 'buttonCreateUser'
	$buttonCreateUser.Size = '212, 46'
	$buttonCreateUser.TabIndex = 13
	$buttonCreateUser.Text = '&Create User'
	$buttonCreateUser.UseCompatibleTextRendering = $True
	$buttonCreateUser.UseVisualStyleBackColor = $True
	$buttonCreateUser.add_Click($buttonCreateUser_Click)
	#
	# tabcontrol1
	#
	$tabcontrol1.Controls.Add($tabpageSettings)
	$tabcontrol1.Controls.Add($tabpage1)
	$tabcontrol1.Controls.Add($tabpageOffice365)
	$tabcontrol1.Location = '26, 54'
	$tabcontrol1.Margin = '6, 6, 6, 6'
	$tabcontrol1.Name = 'tabcontrol1'
	$tabcontrol1.SelectedIndex = 0
	$tabcontrol1.Size = '1014, 1006'
	$tabcontrol1.TabIndex = 3
	#
	# tabpageSettings
	#
	$tabpageSettings.Controls.Add($groupbox1)
	$tabpageSettings.Controls.Add($groupbox2FA)
	$tabpageSettings.Controls.Add($groupboxADUser)
	$tabpageSettings.Controls.Add($groupboxOffice365User)
	$tabpageSettings.Location = '8, 40'
	$tabpageSettings.Margin = '6, 6, 6, 6'
	$tabpageSettings.Name = 'tabpageSettings'
	$tabpageSettings.Size = '998, 958'
	$tabpageSettings.TabIndex = 3
	$tabpageSettings.Text = 'Settings'
	$tabpageSettings.UseVisualStyleBackColor = $True
	#
	# groupbox1
	#
	$groupbox1.Controls.Add($label100)
	$groupbox1.Controls.Add($linklabelBradWyatt)
	$groupbox1.Controls.Add($linklabelGitHubProject)
	$groupbox1.Controls.Add($labelAuthor)
	$groupbox1.Controls.Add($labelVersion)
	$groupbox1.Location = '510, 160'
	$groupbox1.Margin = '6, 6, 6, 6'
	$groupbox1.Name = 'groupbox1'
	$groupbox1.Padding = '6, 6, 6, 6'
	$groupbox1.Size = '464, 184'
	$groupbox1.TabIndex = 6
	$groupbox1.TabStop = $False
	$groupbox1.Text = 'Information'
	$groupbox1.UseCompatibleTextRendering = $True
	#
	# label100
	#
	$label100.AutoSize = $True
	$label100.Location = '129, 42'
	$label100.Margin = '6, 0, 6, 0'
	$label100.Name = 'label100'
	$label100.Size = '58, 31'
	$label100.TabIndex = 7
	$label100.Text = '1.0.0'
	$label100.UseCompatibleTextRendering = $True
	#
	# linklabelBradWyatt
	#
	$linklabelBradWyatt.Location = '129, 88'
	$linklabelBradWyatt.Margin = '6, 0, 6, 0'
	$linklabelBradWyatt.Name = 'linklabelBradWyatt'
	$linklabelBradWyatt.Size = '146, 31'
	$linklabelBradWyatt.TabIndex = 4
	$linklabelBradWyatt.TabStop = $True
	$linklabelBradWyatt.Text = 'Brad Wyatt'
	$linklabelBradWyatt.UseCompatibleTextRendering = $True
	$linklabelBradWyatt.add_LinkClicked($linklabelBradWyatt_LinkClicked)
	#
	# linklabelGitHubProject
	#
	$linklabelGitHubProject.Location = '19, 134'
	$linklabelGitHubProject.Margin = '13, 0, 13, 0'
	$linklabelGitHubProject.Name = 'linklabelGitHubProject'
	$linklabelGitHubProject.Size = '174, 31'
	$linklabelGitHubProject.TabIndex = 3
	$linklabelGitHubProject.TabStop = $True
	$linklabelGitHubProject.Text = 'GitHub Project'
	$linklabelGitHubProject.UseCompatibleTextRendering = $True
	$linklabelGitHubProject.add_LinkClicked($linklabelGitHubProject_LinkClicked)
	#
	# labelAuthor
	#
	$labelAuthor.AutoSize = $True
	$labelAuthor.Location = '19, 88'
	$labelAuthor.Margin = '13, 0, 13, 0'
	$labelAuthor.Name = 'labelAuthor'
	$labelAuthor.Size = '81, 31'
	$labelAuthor.TabIndex = 1
	$labelAuthor.Text = 'Author:'
	$labelAuthor.UseCompatibleTextRendering = $True
	#
	# labelVersion
	#
	$labelVersion.AutoSize = $True
	$labelVersion.Location = '19, 42'
	$labelVersion.Margin = '13, 0, 13, 0'
	$labelVersion.Name = 'labelVersion'
	$labelVersion.Size = '91, 31'
	$labelVersion.TabIndex = 0
	$labelVersion.Text = 'Version:'
	$labelVersion.UseCompatibleTextRendering = $True
	#
	# groupbox2FA
	#
	$groupbox2FA.Controls.Add($radiobuttonEnableMFA)
	$groupbox2FA.Controls.Add($radiobuttonDisableMFA)
	$groupbox2FA.Location = '15, 160'
	$groupbox2FA.Margin = '6, 6, 6, 6'
	$groupbox2FA.Name = 'groupbox2FA'
	$groupbox2FA.Padding = '6, 6, 6, 6'
	$groupbox2FA.Size = '483, 184'
	$groupbox2FA.TabIndex = 5
	$groupbox2FA.TabStop = $False
	$groupbox2FA.Text = 'Office 365 Multi-Factor Authentication'
	$tooltip1.SetToolTip($groupbox2FA, 'Specify if your Office 365 Global Admin requires MFA Login')
	$groupbox2FA.UseCompatibleTextRendering = $True
	#
	# radiobuttonEnableMFA
	#
	$radiobuttonEnableMFA.Location = '13, 98'
	$radiobuttonEnableMFA.Margin = '6, 6, 6, 6'
	$radiobuttonEnableMFA.Name = 'radiobuttonEnableMFA'
	$radiobuttonEnableMFA.Size = '225, 48'
	$radiobuttonEnableMFA.TabIndex = 1
	$radiobuttonEnableMFA.TabStop = $True
	$radiobuttonEnableMFA.Text = 'Enable MFA'
	$tooltip1.SetToolTip($radiobuttonEnableMFA, 'Specify if your Office 365 Global Admin requires MFA Login')
	$radiobuttonEnableMFA.UseCompatibleTextRendering = $True
	$radiobuttonEnableMFA.UseVisualStyleBackColor = $True
	#
	# radiobuttonDisableMFA
	#
	$radiobuttonDisableMFA.Location = '13, 38'
	$radiobuttonDisableMFA.Margin = '6, 6, 6, 6'
	$radiobuttonDisableMFA.Name = 'radiobuttonDisableMFA'
	$radiobuttonDisableMFA.Size = '225, 48'
	$radiobuttonDisableMFA.TabIndex = 0
	$radiobuttonDisableMFA.TabStop = $True
	$radiobuttonDisableMFA.Text = 'Disable MFA'
	$tooltip1.SetToolTip($radiobuttonDisableMFA, 'Specify if your Office 365 Global Admin requires MFA Login')
	$radiobuttonDisableMFA.UseCompatibleTextRendering = $True
	$radiobuttonDisableMFA.UseVisualStyleBackColor = $True
	#
	# groupboxADUser
	#
	$groupboxADUser.Controls.Add($checkboxCreateActiveDirector)
	$groupboxADUser.Location = '15, 34'
	$groupboxADUser.Margin = '6, 6, 6, 6'
	$groupboxADUser.Name = 'groupboxADUser'
	$groupboxADUser.Padding = '6, 6, 6, 6'
	$groupboxADUser.Size = '483, 114'
	$groupboxADUser.TabIndex = 4
	$groupboxADUser.TabStop = $False
	$groupboxADUser.Text = 'Active Directory'
	$groupboxADUser.UseCompatibleTextRendering = $True
	#
	# checkboxCreateActiveDirector
	#
	$checkboxCreateActiveDirector.Location = '13, 38'
	$checkboxCreateActiveDirector.Margin = '6, 6, 6, 6'
	$checkboxCreateActiveDirector.Name = 'checkboxCreateActiveDirector'
	$checkboxCreateActiveDirector.Size = '412, 48'
	$checkboxCreateActiveDirector.TabIndex = 0
	$checkboxCreateActiveDirector.Text = 'Create Active Directory User'
	$tooltip1.SetToolTip($checkboxCreateActiveDirector, 'Create an Active Directory User')
	$checkboxCreateActiveDirector.UseCompatibleTextRendering = $True
	$checkboxCreateActiveDirector.UseVisualStyleBackColor = $True
	$checkboxCreateActiveDirector.add_CheckedChanged($checkboxCreateActiveDirector_CheckedChanged)
	#
	# groupboxOffice365User
	#
	$groupboxOffice365User.Controls.Add($checkboxconfigo365user)
	$groupboxOffice365User.Location = '510, 34'
	$groupboxOffice365User.Margin = '6, 6, 6, 6'
	$groupboxOffice365User.Name = 'groupboxOffice365User'
	$groupboxOffice365User.Padding = '6, 6, 6, 6'
	$groupboxOffice365User.Size = '464, 114'
	$groupboxOffice365User.TabIndex = 3
	$groupboxOffice365User.TabStop = $False
	$groupboxOffice365User.Text = 'Office 365'
	$tooltip1.SetToolTip($groupboxOffice365User, 'Configure an Office 365 User
')
	$groupboxOffice365User.UseCompatibleTextRendering = $True
	#
	# checkboxconfigo365user
	#
	$checkboxconfigo365user.Location = '13, 38'
	$checkboxconfigo365user.Margin = '6, 6, 6, 6'
	$checkboxconfigo365user.Name = 'checkboxconfigo365user'
	$checkboxconfigo365user.Size = '347, 48'
	$checkboxconfigo365user.TabIndex = 0
	$checkboxconfigo365user.Text = 'Create Office 365 User'
	$tooltip1.SetToolTip($checkboxconfigo365user, 'Configure an Office 365 User
')
	$checkboxconfigo365user.UseCompatibleTextRendering = $True
	$checkboxconfigo365user.UseVisualStyleBackColor = $True
	$checkboxconfigo365user.add_CheckedChanged($checkboxconfigo365user_CheckedChanged)
	#
	# tabpage1
	#
	$tabpage1.Controls.Add($tabcontrolUserProperties)
	$tabpage1.Location = '8, 40'
	$tabpage1.Margin = '6, 6, 6, 6'
	$tabpage1.Name = 'tabpage1'
	$tabpage1.Padding = '6, 6, 6, 6'
	$tabpage1.Size = '998, 958'
	$tabpage1.TabIndex = 0
	$tabpage1.Text = 'Active Directory User'
	$tabpage1.UseVisualStyleBackColor = $True
	#
	# tabcontrolUserProperties
	#
	$tabcontrolUserProperties.Controls.Add($tabpageGeneral)
	$tabcontrolUserProperties.Controls.Add($tabpageAccount)
	$tabcontrolUserProperties.Controls.Add($tabpageAddress)
	$tabcontrolUserProperties.Controls.Add($tabpageGroups)
	$tabcontrolUserProperties.Controls.Add($tabpageOrganization)
	$tabcontrolUserProperties.Controls.Add($tabpageProfile)
	$tabcontrolUserProperties.Controls.Add($tabpageattributes)
	$tabcontrolUserProperties.Location = '13, 12'
	$tabcontrolUserProperties.Margin = '6, 6, 6, 6'
	$tabcontrolUserProperties.Name = 'tabcontrolUserProperties'
	$tabcontrolUserProperties.SelectedIndex = 0
	$tabcontrolUserProperties.Size = '979, 912'
	$tabcontrolUserProperties.TabIndex = 8
	#
	# tabpageGeneral
	#
	$tabpageGeneral.Controls.Add($panel1)
	$tabpageGeneral.Controls.Add($labelWebPage)
	$tabpageGeneral.Controls.Add($labelEMail)
	$tabpageGeneral.Controls.Add($labelTelephoneNumber)
	$tabpageGeneral.Controls.Add($textboxWebPage)
	$tabpageGeneral.Controls.Add($textboxEmail)
	$tabpageGeneral.Controls.Add($textboxTelephone)
	$tabpageGeneral.Controls.Add($labelOffice)
	$tabpageGeneral.Controls.Add($labelDescription)
	$tabpageGeneral.Controls.Add($textboxoffice)
	$tabpageGeneral.Controls.Add($textboxDescription)
	$tabpageGeneral.Controls.Add($labelFirstName)
	$tabpageGeneral.Controls.Add($textboxDisplayName)
	$tabpageGeneral.Controls.Add($textboxFirstName)
	$tabpageGeneral.Controls.Add($labelDisplayName)
	$tabpageGeneral.Controls.Add($textboxInitials)
	$tabpageGeneral.Controls.Add($labelLastName)
	$tabpageGeneral.Controls.Add($labelInitials)
	$tabpageGeneral.Controls.Add($textboxLastName)
	$tabpageGeneral.Location = '8, 40'
	$tabpageGeneral.Margin = '6, 6, 6, 6'
	$tabpageGeneral.Name = 'tabpageGeneral'
	$tabpageGeneral.Padding = '6, 6, 6, 6'
	$tabpageGeneral.Size = '963, 864'
	$tabpageGeneral.TabIndex = 0
	$tabpageGeneral.Text = 'General'
	$tabpageGeneral.UseVisualStyleBackColor = $True
	#
	# panel1
	#
	$panel1.Controls.Add($maskedtextboxpassword)
	$panel1.Controls.Add($buttonClear)
	$panel1.Controls.Add($labelpasswordconfirmmessage)
	$panel1.Controls.Add($textboxConfirmPassword)
	$panel1.Controls.Add($labelConfirmPassword)
	$panel1.Controls.Add($buttonGeneratePassword)
	$panel1.Controls.Add($textboxPasswordGen)
	$panel1.Controls.Add($labelPassword)
	$panel1.BackColor = 'MenuBar'
	$panel1.BorderStyle = 'Fixed3D'
	$panel1.Location = '13, 338'
	$panel1.Margin = '6, 6, 6, 6'
	$panel1.Name = 'panel1'
	$panel1.Size = '938, 284'
	$panel1.TabIndex = 6
	#
	# maskedtextboxpassword
	#
	$maskedtextboxpassword.Location = '364, 94'
	$maskedtextboxpassword.Margin = '13, 12, 13, 12'
	$maskedtextboxpassword.Name = 'maskedtextboxpassword'
	$maskedtextboxpassword.Size = '538, 32'
	$maskedtextboxpassword.TabIndex = 10
	$maskedtextboxpassword.UseSystemPasswordChar = $True
	$maskedtextboxpassword.add_TextChanged($maskedtextboxpassword_TextChanged)
	#
	# buttonClear
	#
	$buttonClear.Location = '813, 27'
	$buttonClear.Margin = '6, 6, 6, 6'
	$buttonClear.Name = 'buttonClear'
	$buttonClear.Size = '115, 46'
	$buttonClear.TabIndex = 9
	$buttonClear.Text = 'Clear'
	$buttonClear.UseCompatibleTextRendering = $True
	$buttonClear.UseVisualStyleBackColor = $True
	$buttonClear.add_Click($buttonClear_Click)
	#
	# labelpasswordconfirmmessage
	#
	$labelpasswordconfirmmessage.AutoSize = $True
	$labelpasswordconfirmmessage.Location = '310, 228'
	$labelpasswordconfirmmessage.Margin = '13, 0, 13, 0'
	$labelpasswordconfirmmessage.Name = 'labelpasswordconfirmmessage'
	$labelpasswordconfirmmessage.Size = '0, 29'
	$labelpasswordconfirmmessage.TabIndex = 25
	$labelpasswordconfirmmessage.UseCompatibleTextRendering = $True
	#
	# textboxConfirmPassword
	#
	$textboxConfirmPassword.Location = '364, 158'
	$textboxConfirmPassword.Margin = '13, 12, 13, 12'
	$textboxConfirmPassword.Name = 'textboxConfirmPassword'
	$textboxConfirmPassword.Size = '538, 32'
	$textboxConfirmPassword.TabIndex = 11
	$textboxConfirmPassword.add_TextChanged($textboxConfirmPassword_TextChanged)
	#
	# labelConfirmPassword
	#
	$labelConfirmPassword.AutoSize = $True
	$labelConfirmPassword.ForeColor = 'Firebrick'
	$labelConfirmPassword.Location = '11, 164'
	$labelConfirmPassword.Margin = '13, 0, 13, 0'
	$labelConfirmPassword.Name = 'labelConfirmPassword'
	$labelConfirmPassword.Size = '208, 31'
	$labelConfirmPassword.TabIndex = 23
	$labelConfirmPassword.Text = '*Confirm Password:'
	$labelConfirmPassword.UseCompatibleTextRendering = $True
	#
	# buttonGeneratePassword
	#
	$buttonGeneratePassword.Location = '11, 30'
	$buttonGeneratePassword.Margin = '6, 6, 6, 6'
	$buttonGeneratePassword.Name = 'buttonGeneratePassword'
	$buttonGeneratePassword.Size = '254, 46'
	$buttonGeneratePassword.TabIndex = 7
	$buttonGeneratePassword.Text = 'Generate Password'
	$buttonGeneratePassword.UseCompatibleTextRendering = $True
	$buttonGeneratePassword.UseVisualStyleBackColor = $True
	$buttonGeneratePassword.add_Click($buttonGeneratePassword_Click)
	#
	# textboxPasswordGen
	#
	$textboxPasswordGen.Location = '364, 34'
	$textboxPasswordGen.Margin = '13, 12, 13, 12'
	$textboxPasswordGen.Name = 'textboxPasswordGen'
	$textboxPasswordGen.ReadOnly = $True
	$textboxPasswordGen.Size = '430, 32'
	$textboxPasswordGen.TabIndex = 8
	#
	# labelPassword
	#
	$labelPassword.AutoSize = $True
	$labelPassword.ForeColor = 'Firebrick'
	$labelPassword.Location = '11, 102'
	$labelPassword.Margin = '13, 0, 13, 0'
	$labelPassword.Name = 'labelPassword'
	$labelPassword.Size = '122, 31'
	$labelPassword.TabIndex = 19
	$labelPassword.Text = '*Password:'
	$labelPassword.UseCompatibleTextRendering = $True
	#
	# labelWebPage
	#
	$labelWebPage.AutoSize = $True
	$labelWebPage.Location = '13, 796'
	$labelWebPage.Margin = '13, 0, 13, 0'
	$labelWebPage.Name = 'labelWebPage'
	$labelWebPage.Size = '117, 31'
	$labelWebPage.TabIndex = 17
	$labelWebPage.Text = 'Web page:'
	$labelWebPage.UseCompatibleTextRendering = $True
	#
	# labelEMail
	#
	$labelEMail.AutoSize = $True
	$labelEMail.Location = '13, 734'
	$labelEMail.Margin = '13, 0, 13, 0'
	$labelEMail.Name = 'labelEMail'
	$labelEMail.Size = '79, 31'
	$labelEMail.TabIndex = 16
	$labelEMail.Text = 'E-Mail:'
	$labelEMail.UseCompatibleTextRendering = $True
	#
	# labelTelephoneNumber
	#
	$labelTelephoneNumber.AutoSize = $True
	$labelTelephoneNumber.Location = '13, 672'
	$labelTelephoneNumber.Margin = '13, 0, 13, 0'
	$labelTelephoneNumber.Name = 'labelTelephoneNumber'
	$labelTelephoneNumber.Size = '208, 31'
	$labelTelephoneNumber.TabIndex = 15
	$labelTelephoneNumber.Text = 'Telephone Number:'
	$labelTelephoneNumber.UseCompatibleTextRendering = $True
	#
	# textboxWebPage
	#
	$textboxWebPage.Location = '327, 790'
	$textboxWebPage.Margin = '13, 12, 13, 12'
	$textboxWebPage.Name = 'textboxWebPage'
	$textboxWebPage.Size = '590, 32'
	$textboxWebPage.TabIndex = 14
	#
	# textboxEmail
	#
	$textboxEmail.Location = '327, 728'
	$textboxEmail.Margin = '13, 12, 13, 12'
	$textboxEmail.Name = 'textboxEmail'
	$textboxEmail.Size = '590, 32'
	$textboxEmail.TabIndex = 13
	#
	# textboxTelephone
	#
	$textboxTelephone.Location = '327, 666'
	$textboxTelephone.Margin = '13, 12, 13, 12'
	$textboxTelephone.Name = 'textboxTelephone'
	$textboxTelephone.Size = '590, 32'
	$textboxTelephone.TabIndex = 12
	#
	# labelOffice
	#
	$labelOffice.AutoSize = $True
	$labelOffice.Location = '15, 273'
	$labelOffice.Margin = '13, 0, 13, 0'
	$labelOffice.Name = 'labelOffice'
	$labelOffice.Size = '73, 31'
	$labelOffice.TabIndex = 11
	$labelOffice.Text = 'Office:'
	$labelOffice.UseCompatibleTextRendering = $True
	#
	# labelDescription
	#
	$labelDescription.AutoSize = $True
	$labelDescription.Location = '13, 210'
	$labelDescription.Margin = '13, 0, 13, 0'
	$labelDescription.Name = 'labelDescription'
	$labelDescription.Size = '128, 31'
	$labelDescription.TabIndex = 10
	$labelDescription.Text = 'Description:'
	$labelDescription.UseCompatibleTextRendering = $True
	#
	# textboxoffice
	#
	$textboxoffice.Location = '299, 270'
	$textboxoffice.Margin = '13, 12, 13, 12'
	$textboxoffice.Name = 'textboxoffice'
	$textboxoffice.Size = '618, 32'
	$textboxoffice.TabIndex = 5
	#
	# textboxDescription
	#
	$textboxDescription.Location = '299, 207'
	$textboxDescription.Margin = '13, 12, 13, 12'
	$textboxDescription.Name = 'textboxDescription'
	$textboxDescription.Size = '618, 32'
	$textboxDescription.TabIndex = 4
	#
	# labelFirstName
	#
	$labelFirstName.AutoSize = $True
	$labelFirstName.Location = '15, 24'
	$labelFirstName.Margin = '13, 0, 13, 0'
	$labelFirstName.Name = 'labelFirstName'
	$labelFirstName.Size = '125, 31'
	$labelFirstName.TabIndex = 1
	$labelFirstName.Text = 'First Name:'
	$labelFirstName.UseCompatibleTextRendering = $True
	$labelFirstName.add_Click($labelFirstName_Click)
	#
	# textboxDisplayName
	#
	$textboxDisplayName.Location = '299, 143'
	$textboxDisplayName.Margin = '13, 12, 13, 12'
	$textboxDisplayName.Name = 'textboxDisplayName'
	$textboxDisplayName.Size = '618, 32'
	$textboxDisplayName.TabIndex = 3
	$textboxDisplayName.add_TextChanged($textboxDisplayName_TextChanged)
	#
	# textboxFirstName
	#
	$textboxFirstName.Location = '299, 18'
	$textboxFirstName.Margin = '13, 12, 13, 12'
	$textboxFirstName.Name = 'textboxFirstName'
	$textboxFirstName.Size = '368, 32'
	$textboxFirstName.TabIndex = 0
	$textboxFirstName.add_TextChanged($textboxFirstName_TextChanged)
	#
	# labelDisplayName
	#
	$labelDisplayName.AutoSize = $True
	$labelDisplayName.ForeColor = 'Firebrick'
	$labelDisplayName.Location = '13, 146'
	$labelDisplayName.Margin = '13, 0, 13, 0'
	$labelDisplayName.Name = 'labelDisplayName'
	$labelDisplayName.Size = '164, 31'
	$labelDisplayName.TabIndex = 6
	$labelDisplayName.Text = '*Display Name:'
	$labelDisplayName.UseCompatibleTextRendering = $True
	#
	# textboxInitials
	#
	$textboxInitials.Location = '798, 18'
	$textboxInitials.Margin = '13, 12, 13, 12'
	$textboxInitials.MaxLength = 6
	$textboxInitials.Name = 'textboxInitials'
	$textboxInitials.Size = '119, 32'
	$textboxInitials.TabIndex = 1
	$textboxInitials.add_TextChanged($textboxInitials_TextChanged)
	#
	# labelLastName
	#
	$labelLastName.AutoSize = $True
	$labelLastName.Location = '13, 86'
	$labelLastName.Margin = '13, 0, 13, 0'
	$labelLastName.Name = 'labelLastName'
	$labelLastName.Size = '123, 31'
	$labelLastName.TabIndex = 5
	$labelLastName.Text = 'Last Name:'
	$labelLastName.UseCompatibleTextRendering = $True
	#
	# labelInitials
	#
	$labelInitials.AutoSize = $True
	$labelInitials.Location = '693, 21'
	$labelInitials.Margin = '13, 0, 13, 0'
	$labelInitials.Name = 'labelInitials'
	$labelInitials.Size = '79, 31'
	$labelInitials.TabIndex = 3
	$labelInitials.Text = 'Initials:'
	$labelInitials.UseCompatibleTextRendering = $True
	#
	# textboxLastName
	#
	$textboxLastName.Location = '299, 80'
	$textboxLastName.Margin = '13, 12, 13, 12'
	$textboxLastName.Name = 'textboxLastName'
	$textboxLastName.Size = '618, 32'
	$textboxLastName.TabIndex = 2
	$textboxLastName.add_TextChanged($textboxLastName_TextChanged)
	#
	# tabpageAccount
	#
	$tabpageAccount.Controls.Add($labelPlaceUserInFollowing)
	$tabpageAccount.Controls.Add($comboboxOUTree)
	$tabpageAccount.Controls.Add($panel2)
	$tabpageAccount.Controls.Add($textboxSamAccount)
	$tabpageAccount.Controls.Add($textboxUPNDomain)
	$tabpageAccount.Controls.Add($labelUserLogonNamepreWind)
	$tabpageAccount.Controls.Add($comboboxDomains)
	$tabpageAccount.Controls.Add($textboxUserLogonName)
	$tabpageAccount.Controls.Add($labelUserLogonNameUPN)
	$tabpageAccount.Location = '8, 40'
	$tabpageAccount.Margin = '6, 6, 6, 6'
	$tabpageAccount.Name = 'tabpageAccount'
	$tabpageAccount.Size = '963, 864'
	$tabpageAccount.TabIndex = 2
	$tabpageAccount.Text = 'Account'
	$tabpageAccount.UseVisualStyleBackColor = $True
	#
	# labelPlaceUserInFollowing
	#
	$labelPlaceUserInFollowing.AutoSize = $True
	$labelPlaceUserInFollowing.Location = '28, 249'
	$labelPlaceUserInFollowing.Margin = '6, 0, 6, 0'
	$labelPlaceUserInFollowing.Name = 'labelPlaceUserInFollowing'
	$labelPlaceUserInFollowing.Size = '450, 31'
	$labelPlaceUserInFollowing.TabIndex = 7
	$labelPlaceUserInFollowing.Text = 'Place User in Following Organizational Unit:'
	$labelPlaceUserInFollowing.UseCompatibleTextRendering = $True
	#
	# comboboxOUTree
	#
	$comboboxOUTree.FormattingEnabled = $True
	$comboboxOUTree.Location = '28, 286'
	$comboboxOUTree.Margin = '6, 6, 6, 6'
	$comboboxOUTree.Name = 'comboboxOUTree'
	$comboboxOUTree.Size = '900, 34'
	$comboboxOUTree.Sorted = $True
	$comboboxOUTree.TabIndex = 6
	#
	# panel2
	#
	$panel2.Controls.Add($checkboxAccountIsDisabled)
	$panel2.Controls.Add($checkboxPasswordNeverExpires)
	$panel2.Controls.Add($checkboxUserCannotChangePass)
	$panel2.Controls.Add($checkboxUserMustChangePasswo)
	$panel2.BackColor = 'MenuBar'
	$panel2.BorderStyle = 'Fixed3D'
	$panel2.Location = '18, 365'
	$panel2.Margin = '6, 6, 6, 6'
	$panel2.Name = 'panel2'
	$panel2.Size = '930, 271'
	$panel2.TabIndex = 5
	#
	# checkboxAccountIsDisabled
	#
	$checkboxAccountIsDisabled.Location = '22, 196'
	$checkboxAccountIsDisabled.Margin = '6, 6, 6, 6'
	$checkboxAccountIsDisabled.Name = 'checkboxAccountIsDisabled'
	$checkboxAccountIsDisabled.Size = '886, 48'
	$checkboxAccountIsDisabled.TabIndex = 9
	$checkboxAccountIsDisabled.Text = 'Account is disabled'
	$checkboxAccountIsDisabled.UseCompatibleTextRendering = $True
	$checkboxAccountIsDisabled.UseVisualStyleBackColor = $True
	#
	# checkboxPasswordNeverExpires
	#
	$checkboxPasswordNeverExpires.Location = '22, 136'
	$checkboxPasswordNeverExpires.Margin = '6, 6, 6, 6'
	$checkboxPasswordNeverExpires.Name = 'checkboxPasswordNeverExpires'
	$checkboxPasswordNeverExpires.Size = '886, 48'
	$checkboxPasswordNeverExpires.TabIndex = 8
	$checkboxPasswordNeverExpires.Text = 'Password never expires'
	$checkboxPasswordNeverExpires.UseCompatibleTextRendering = $True
	$checkboxPasswordNeverExpires.UseVisualStyleBackColor = $True
	#
	# checkboxUserCannotChangePass
	#
	$checkboxUserCannotChangePass.Location = '22, 76'
	$checkboxUserCannotChangePass.Margin = '6, 6, 6, 6'
	$checkboxUserCannotChangePass.Name = 'checkboxUserCannotChangePass'
	$checkboxUserCannotChangePass.Size = '886, 48'
	$checkboxUserCannotChangePass.TabIndex = 7
	$checkboxUserCannotChangePass.Text = 'User cannot change password'
	$checkboxUserCannotChangePass.UseCompatibleTextRendering = $True
	$checkboxUserCannotChangePass.UseVisualStyleBackColor = $True
	#
	# checkboxUserMustChangePasswo
	#
	$checkboxUserMustChangePasswo.Location = '22, 16'
	$checkboxUserMustChangePasswo.Margin = '6, 6, 6, 6'
	$checkboxUserMustChangePasswo.Name = 'checkboxUserMustChangePasswo'
	$checkboxUserMustChangePasswo.Size = '886, 48'
	$checkboxUserMustChangePasswo.TabIndex = 6
	$checkboxUserMustChangePasswo.Text = 'User must change password at next logon'
	$checkboxUserMustChangePasswo.UseCompatibleTextRendering = $True
	$checkboxUserMustChangePasswo.UseVisualStyleBackColor = $True
	#
	# textboxSamAccount
	#
	$textboxSamAccount.Location = '507, 174'
	$textboxSamAccount.Margin = '13, 12, 13, 12'
	$textboxSamAccount.MaxLength = 20
	$textboxSamAccount.Name = 'textboxSamAccount'
	$textboxSamAccount.Size = '416, 32'
	$textboxSamAccount.TabIndex = 4
	#
	# textboxUPNDomain
	#
	$textboxUPNDomain.BackColor = 'ControlLightLight'
	$textboxUPNDomain.Location = '28, 174'
	$textboxUPNDomain.Margin = '13, 12, 13, 12'
	$textboxUPNDomain.Name = 'textboxUPNDomain'
	$textboxUPNDomain.ReadOnly = $True
	$textboxUPNDomain.Size = '433, 32'
	$textboxUPNDomain.TabIndex = 3
	#
	# labelUserLogonNamepreWind
	#
	$labelUserLogonNamepreWind.AutoSize = $True
	$labelUserLogonNamepreWind.ForeColor = 'Black'
	$labelUserLogonNamepreWind.Location = '28, 134'
	$labelUserLogonNamepreWind.Margin = '13, 0, 13, 0'
	$labelUserLogonNamepreWind.Name = 'labelUserLogonNamepreWind'
	$labelUserLogonNamepreWind.Size = '396, 31'
	$labelUserLogonNamepreWind.TabIndex = 3
	$labelUserLogonNamepreWind.Text = 'User logon name (pre-Windows 2000):'
	$labelUserLogonNamepreWind.UseCompatibleTextRendering = $True
	#
	# comboboxDomains
	#
	$comboboxDomains.DropDownStyle = 'DropDownList'
	$comboboxDomains.FormattingEnabled = $True
	$comboboxDomains.Location = '507, 60'
	$comboboxDomains.Margin = '6, 6, 6, 6'
	$comboboxDomains.Name = 'comboboxDomains'
	$comboboxDomains.Size = '416, 34'
	$comboboxDomains.TabIndex = 2
	#
	# textboxUserLogonName
	#
	$textboxUserLogonName.Location = '28, 60'
	$textboxUserLogonName.Margin = '13, 12, 13, 12'
	$textboxUserLogonName.Name = 'textboxUserLogonName'
	$textboxUserLogonName.Size = '433, 32'
	$textboxUserLogonName.TabIndex = 1
	$textboxUserLogonName.add_TextChanged($textboxUserLogonName_TextChanged)
	#
	# labelUserLogonNameUPN
	#
	$labelUserLogonNameUPN.AutoSize = $True
	$labelUserLogonNameUPN.ForeColor = 'Firebrick'
	$labelUserLogonNameUPN.Location = '28, 18'
	$labelUserLogonNameUPN.Margin = '13, 0, 13, 0'
	$labelUserLogonNameUPN.Name = 'labelUserLogonNameUPN'
	$labelUserLogonNameUPN.Size = '264, 31'
	$labelUserLogonNameUPN.TabIndex = 0
	$labelUserLogonNameUPN.Text = '*User logon name: (UPN)'
	$labelUserLogonNameUPN.UseCompatibleTextRendering = $True
	#
	# tabpageAddress
	#
	$tabpageAddress.Controls.Add($label1)
	$tabpageAddress.Controls.Add($labelZipPostalCode)
	$tabpageAddress.Controls.Add($textboxzipcode)
	$tabpageAddress.Controls.Add($textboxstate)
	$tabpageAddress.Controls.Add($labelStateprovince)
	$tabpageAddress.Controls.Add($labelcity)
	$tabpageAddress.Controls.Add($textboxcity)
	$tabpageAddress.Controls.Add($textboxPOBox)
	$tabpageAddress.Controls.Add($labelPOBox)
	$tabpageAddress.Controls.Add($textboxStreet)
	$tabpageAddress.Controls.Add($labelStreet)
	$tabpageAddress.Location = '8, 40'
	$tabpageAddress.Margin = '6, 6, 6, 6'
	$tabpageAddress.Name = 'tabpageAddress'
	$tabpageAddress.Padding = '6, 6, 6, 6'
	$tabpageAddress.Size = '963, 864'
	$tabpageAddress.TabIndex = 1
	$tabpageAddress.Text = 'Address'
	$tabpageAddress.UseVisualStyleBackColor = $True
	#
	# label1
	#
	$label1.AutoSize = $True
	$label1.Location = '-136, 572'
	$label1.Margin = '13, 0, 13, 0'
	$label1.Name = 'label1'
	$label1.Size = '69, 31'
	$label1.TabIndex = 10
	$label1.Text = 'label1'
	$label1.UseCompatibleTextRendering = $True
	#
	# labelZipPostalCode
	#
	$labelZipPostalCode.AutoSize = $True
	$labelZipPostalCode.Location = '24, 500'
	$labelZipPostalCode.Margin = '13, 0, 13, 0'
	$labelZipPostalCode.Name = 'labelZipPostalCode'
	$labelZipPostalCode.Size = '175, 31'
	$labelZipPostalCode.TabIndex = 9
	$labelZipPostalCode.Text = 'Zip/Postal Code:'
	$labelZipPostalCode.UseCompatibleTextRendering = $True
	#
	# textboxzipcode
	#
	$textboxzipcode.Location = '323, 497'
	$textboxzipcode.Margin = '13, 12, 13, 12'
	$textboxzipcode.Name = 'textboxzipcode'
	$textboxzipcode.Size = '602, 32'
	$textboxzipcode.TabIndex = 8
	#
	# textboxstate
	#
	$textboxstate.Location = '323, 418'
	$textboxstate.Margin = '13, 12, 13, 12'
	$textboxstate.Name = 'textboxstate'
	$textboxstate.Size = '602, 32'
	$textboxstate.TabIndex = 7
	#
	# labelStateprovince
	#
	$labelStateprovince.AutoSize = $True
	$labelStateprovince.Location = '24, 424'
	$labelStateprovince.Margin = '13, 0, 13, 0'
	$labelStateprovince.Name = 'labelStateprovince'
	$labelStateprovince.Size = '159, 31'
	$labelStateprovince.TabIndex = 6
	$labelStateprovince.Text = 'State/province:'
	$labelStateprovince.UseCompatibleTextRendering = $True
	#
	# labelcity
	#
	$labelcity.AutoSize = $True
	$labelcity.Location = '24, 348'
	$labelcity.Margin = '13, 0, 13, 0'
	$labelcity.Name = 'labelcity'
	$labelcity.Size = '53, 31'
	$labelcity.TabIndex = 5
	$labelcity.Text = 'City:'
	$labelcity.UseCompatibleTextRendering = $True
	#
	# textboxcity
	#
	$textboxcity.Location = '323, 345'
	$textboxcity.Margin = '13, 12, 13, 12'
	$textboxcity.Name = 'textboxcity'
	$textboxcity.Size = '602, 32'
	$textboxcity.TabIndex = 4
	#
	# textboxPOBox
	#
	$textboxPOBox.Location = '323, 272'
	$textboxPOBox.Margin = '13, 12, 13, 12'
	$textboxPOBox.MaxLength = 40
	$textboxPOBox.Name = 'textboxPOBox'
	$textboxPOBox.Size = '602, 32'
	$textboxPOBox.TabIndex = 3
	#
	# labelPOBox
	#
	$labelPOBox.AutoSize = $True
	$labelPOBox.Location = '24, 272'
	$labelPOBox.Margin = '13, 0, 13, 0'
	$labelPOBox.Name = 'labelPOBox'
	$labelPOBox.Size = '105, 31'
	$labelPOBox.TabIndex = 2
	$labelPOBox.Text = 'P.O. Box:'
	$labelPOBox.UseCompatibleTextRendering = $True
	#
	# textboxStreet
	#
	$textboxStreet.Location = '323, 30'
	$textboxStreet.Margin = '13, 12, 13, 12'
	$textboxStreet.Multiline = $True
	$textboxStreet.Name = 'textboxStreet'
	$textboxStreet.ScrollBars = 'Vertical'
	$textboxStreet.Size = '602, 212'
	$textboxStreet.TabIndex = 1
	#
	# labelStreet
	#
	$labelStreet.AutoSize = $True
	$labelStreet.Location = '24, 30'
	$labelStreet.Margin = '13, 0, 13, 0'
	$labelStreet.Name = 'labelStreet'
	$labelStreet.Size = '75, 31'
	$labelStreet.TabIndex = 0
	$labelStreet.Text = 'Street:'
	$labelStreet.UseCompatibleTextRendering = $True
	#
	# tabpageGroups
	#
	$tabpageGroups.Controls.Add($labelPleaseCheckAllGroups)
	$tabpageGroups.Controls.Add($checkedlistboxGroups)
	$tabpageGroups.Location = '8, 40'
	$tabpageGroups.Margin = '6, 6, 6, 6'
	$tabpageGroups.Name = 'tabpageGroups'
	$tabpageGroups.Size = '963, 864'
	$tabpageGroups.TabIndex = 4
	$tabpageGroups.Text = 'Groups'
	$tabpageGroups.UseVisualStyleBackColor = $True
	#
	# labelPleaseCheckAllGroups
	#
	$labelPleaseCheckAllGroups.AutoSize = $True
	$labelPleaseCheckAllGroups.Location = '15, 38'
	$labelPleaseCheckAllGroups.Margin = '13, 0, 13, 0'
	$labelPleaseCheckAllGroups.Name = 'labelPleaseCheckAllGroups'
	$labelPleaseCheckAllGroups.Size = '632, 31'
	$labelPleaseCheckAllGroups.TabIndex = 1
	$labelPleaseCheckAllGroups.Text = 'Please check all groups you want your user to be a member of'
	$labelPleaseCheckAllGroups.UseCompatibleTextRendering = $True
	#
	# checkedlistboxGroups
	#
	$checkedlistboxGroups.CheckOnClick = $True
	$checkedlistboxGroups.FormattingEnabled = $True
	$checkedlistboxGroups.Location = '13, 77'
	$checkedlistboxGroups.Margin = '13, 12, 13, 12'
	$checkedlistboxGroups.Name = 'checkedlistboxGroups'
	$checkedlistboxGroups.Size = '937, 733'
	$checkedlistboxGroups.Sorted = $True
	$checkedlistboxGroups.TabIndex = 0
	$checkedlistboxGroups.UseCompatibleTextRendering = $True
	#
	# tabpageOrganization
	#
	$tabpageOrganization.Controls.Add($textboxCompany)
	$tabpageOrganization.Controls.Add($labelCompany)
	$tabpageOrganization.Controls.Add($textboxDepartment)
	$tabpageOrganization.Controls.Add($labelDepartment)
	$tabpageOrganization.Controls.Add($textboxjobtitle)
	$tabpageOrganization.Controls.Add($labelJobTitle)
	$tabpageOrganization.Location = '8, 40'
	$tabpageOrganization.Margin = '6, 6, 6, 6'
	$tabpageOrganization.Name = 'tabpageOrganization'
	$tabpageOrganization.Size = '963, 864'
	$tabpageOrganization.TabIndex = 5
	$tabpageOrganization.Text = 'Organization'
	$tabpageOrganization.UseVisualStyleBackColor = $True
	#
	# textboxCompany
	#
	$textboxCompany.Location = '303, 192'
	$textboxCompany.Margin = '13, 12, 13, 12'
	$textboxCompany.MaxLength = 64
	$textboxCompany.Name = 'textboxCompany'
	$textboxCompany.Size = '609, 32'
	$textboxCompany.TabIndex = 5
	#
	# labelCompany
	#
	$labelCompany.AutoSize = $True
	$labelCompany.Location = '30, 198'
	$labelCompany.Margin = '13, 0, 13, 0'
	$labelCompany.Name = 'labelCompany'
	$labelCompany.Size = '111, 31'
	$labelCompany.TabIndex = 4
	$labelCompany.Text = 'Company:'
	$labelCompany.UseCompatibleTextRendering = $True
	#
	# textboxDepartment
	#
	$textboxDepartment.Location = '303, 110'
	$textboxDepartment.Margin = '13, 12, 13, 12'
	$textboxDepartment.Name = 'textboxDepartment'
	$textboxDepartment.Size = '609, 32'
	$textboxDepartment.TabIndex = 3
	#
	# labelDepartment
	#
	$labelDepartment.AutoSize = $True
	$labelDepartment.Location = '30, 116'
	$labelDepartment.Margin = '13, 0, 13, 0'
	$labelDepartment.Name = 'labelDepartment'
	$labelDepartment.Size = '132, 31'
	$labelDepartment.TabIndex = 2
	$labelDepartment.Text = 'Department:'
	$labelDepartment.UseCompatibleTextRendering = $True
	#
	# textboxjobtitle
	#
	$textboxjobtitle.Location = '303, 34'
	$textboxjobtitle.Margin = '13, 12, 13, 12'
	$textboxjobtitle.Name = 'textboxjobtitle'
	$textboxjobtitle.Size = '609, 32'
	$textboxjobtitle.TabIndex = 1
	#
	# labelJobTitle
	#
	$labelJobTitle.AutoSize = $True
	$labelJobTitle.Location = '30, 40'
	$labelJobTitle.Margin = '13, 0, 13, 0'
	$labelJobTitle.Name = 'labelJobTitle'
	$labelJobTitle.Size = '100, 31'
	$labelJobTitle.TabIndex = 0
	$labelJobTitle.Text = 'Job Title:'
	$labelJobTitle.UseCompatibleTextRendering = $True
	#
	# tabpageProfile
	#
	$tabpageProfile.Controls.Add($groupbox2)
	$tabpageProfile.Controls.Add($groupboxuserprofile)
	$tabpageProfile.Location = '8, 40'
	$tabpageProfile.Margin = '6, 6, 6, 6'
	$tabpageProfile.Name = 'tabpageProfile'
	$tabpageProfile.Size = '963, 864'
	$tabpageProfile.TabIndex = 3
	$tabpageProfile.Text = 'Profile'
	$tabpageProfile.UseVisualStyleBackColor = $True
	#
	# groupbox2
	#
	$groupbox2.Controls.Add($labelDriveLetter)
	$groupbox2.Controls.Add($textboxhomedirectory)
	$groupbox2.Controls.Add($labelTo)
	$groupbox2.Controls.Add($comboboxDriveLetter)
	$groupbox2.Location = '17, 242'
	$groupbox2.Margin = '6, 6, 6, 6'
	$groupbox2.Name = 'groupbox2'
	$groupbox2.Padding = '6, 6, 6, 6'
	$groupbox2.Size = '910, 134'
	$groupbox2.TabIndex = 1
	$groupbox2.TabStop = $False
	$groupbox2.Text = 'Home Folder:'
	$groupbox2.UseCompatibleTextRendering = $True
	#
	# labelDriveLetter
	#
	$labelDriveLetter.AutoSize = $True
	$labelDriveLetter.Location = '15, 64'
	$labelDriveLetter.Margin = '13, 0, 13, 0'
	$labelDriveLetter.Name = 'labelDriveLetter'
	$labelDriveLetter.Size = '131, 31'
	$labelDriveLetter.TabIndex = 6
	$labelDriveLetter.Text = 'Drive Letter:'
	$labelDriveLetter.UseCompatibleTextRendering = $True
	#
	# textboxhomedirectory
	#
	$textboxhomedirectory.Location = '392, 64'
	$textboxhomedirectory.Margin = '13, 12, 13, 12'
	$textboxhomedirectory.Name = 'textboxhomedirectory'
	$textboxhomedirectory.Size = '482, 32'
	$textboxhomedirectory.TabIndex = 5
	#
	# labelTo
	#
	$labelTo.AutoSize = $True
	$labelTo.Location = '325, 67'
	$labelTo.Margin = '13, 0, 13, 0'
	$labelTo.Name = 'labelTo'
	$labelTo.Size = '41, 31'
	$labelTo.TabIndex = 3
	$labelTo.Text = 'To:'
	$labelTo.UseCompatibleTextRendering = $True
	#
	# comboboxDriveLetter
	#
	$comboboxDriveLetter.DropDownStyle = 'DropDownList'
	$comboboxDriveLetter.FormattingEnabled = $True
	[void]$comboboxDriveLetter.Items.Add('')
	[void]$comboboxDriveLetter.Items.Add('D:')
	[void]$comboboxDriveLetter.Items.Add('E:')
	[void]$comboboxDriveLetter.Items.Add('F:')
	[void]$comboboxDriveLetter.Items.Add('G:')
	[void]$comboboxDriveLetter.Items.Add('H:')
	[void]$comboboxDriveLetter.Items.Add('I:')
	[void]$comboboxDriveLetter.Items.Add('J:')
	[void]$comboboxDriveLetter.Items.Add('K:')
	[void]$comboboxDriveLetter.Items.Add('L:')
	[void]$comboboxDriveLetter.Items.Add('M:')
	[void]$comboboxDriveLetter.Items.Add('N:')
	[void]$comboboxDriveLetter.Items.Add('O:')
	[void]$comboboxDriveLetter.Items.Add('P:')
	[void]$comboboxDriveLetter.Items.Add('Q:')
	[void]$comboboxDriveLetter.Items.Add('R:')
	[void]$comboboxDriveLetter.Items.Add('S:')
	[void]$comboboxDriveLetter.Items.Add('T:')
	[void]$comboboxDriveLetter.Items.Add('U:')
	[void]$comboboxDriveLetter.Items.Add('V:')
	[void]$comboboxDriveLetter.Items.Add('W:')
	[void]$comboboxDriveLetter.Items.Add('X:')
	[void]$comboboxDriveLetter.Items.Add('Y:')
	[void]$comboboxDriveLetter.Items.Add('Z:')
	$comboboxDriveLetter.Location = '165, 61'
	$comboboxDriveLetter.Margin = '6, 6, 6, 6'
	$comboboxDriveLetter.Name = 'comboboxDriveLetter'
	$comboboxDriveLetter.Size = '112, 34'
	$comboboxDriveLetter.TabIndex = 2
	#
	# groupboxuserprofile
	#
	$groupboxuserprofile.Controls.Add($textboxlogonscript)
	$groupboxuserprofile.Controls.Add($textboxprofilepath)
	$groupboxuserprofile.Controls.Add($labelLogonScript)
	$groupboxuserprofile.Controls.Add($labelProfilePath)
	$groupboxuserprofile.Location = '17, 32'
	$groupboxuserprofile.Margin = '6, 6, 6, 6'
	$groupboxuserprofile.Name = 'groupboxuserprofile'
	$groupboxuserprofile.Padding = '6, 6, 6, 6'
	$groupboxuserprofile.Size = '910, 198'
	$groupboxuserprofile.TabIndex = 0
	$groupboxuserprofile.TabStop = $False
	$groupboxuserprofile.Text = 'User Profile:'
	$groupboxuserprofile.UseCompatibleTextRendering = $True
	#
	# textboxlogonscript
	#
	$textboxlogonscript.Location = '249, 120'
	$textboxlogonscript.Margin = '13, 12, 13, 12'
	$textboxlogonscript.Name = 'textboxlogonscript'
	$textboxlogonscript.Size = '625, 32'
	$textboxlogonscript.TabIndex = 3
	#
	# textboxprofilepath
	#
	$textboxprofilepath.Location = '249, 44'
	$textboxprofilepath.Margin = '13, 12, 13, 12'
	$textboxprofilepath.Name = 'textboxprofilepath'
	$textboxprofilepath.Size = '625, 32'
	$textboxprofilepath.TabIndex = 2
	#
	# labelLogonScript
	#
	$labelLogonScript.AutoSize = $True
	$labelLogonScript.Location = '15, 126'
	$labelLogonScript.Margin = '13, 0, 13, 0'
	$labelLogonScript.Name = 'labelLogonScript'
	$labelLogonScript.Size = '141, 31'
	$labelLogonScript.TabIndex = 1
	$labelLogonScript.Text = 'Logon Script:'
	$labelLogonScript.UseCompatibleTextRendering = $True
	#
	# labelProfilePath
	#
	$labelProfilePath.AutoSize = $True
	$labelProfilePath.Location = '15, 50'
	$labelProfilePath.Margin = '13, 0, 13, 0'
	$labelProfilePath.Name = 'labelProfilePath'
	$labelProfilePath.Size = '129, 31'
	$labelProfilePath.TabIndex = 0
	$labelProfilePath.Text = 'Profile path:'
	$labelProfilePath.UseCompatibleTextRendering = $True
	#
	# tabpageattributes
	#
	$tabpageattributes.Controls.Add($labelProxyAddresses)
	$tabpageattributes.Controls.Add($textboxproxyaddress)
	$tabpageattributes.Location = '8, 40'
	$tabpageattributes.Margin = '6, 6, 6, 6'
	$tabpageattributes.Name = 'tabpageattributes'
	$tabpageattributes.Size = '963, 864'
	$tabpageattributes.TabIndex = 6
	$tabpageattributes.Text = 'Attributes'
	$tabpageattributes.UseVisualStyleBackColor = $True
	#
	# labelProxyAddresses
	#
	$labelProxyAddresses.AutoSize = $True
	$labelProxyAddresses.Location = '30, 21'
	$labelProxyAddresses.Margin = '13, 0, 13, 0'
	$labelProxyAddresses.Name = 'labelProxyAddresses'
	$labelProxyAddresses.Size = '179, 31'
	$labelProxyAddresses.TabIndex = 34
	$labelProxyAddresses.Text = 'ProxyAddresses:'
	$labelProxyAddresses.UseCompatibleTextRendering = $True
	#
	# textboxproxyaddress
	#
	$textboxproxyaddress.Location = '391, 18'
	$textboxproxyaddress.Margin = '13, 12, 13, 12'
	$textboxproxyaddress.Multiline = $True
	$textboxproxyaddress.Name = 'textboxproxyaddress'
	$textboxproxyaddress.Size = '536, 234'
	$textboxproxyaddress.TabIndex = 33
	#
	# tabpageOffice365
	#
	$tabpageOffice365.Controls.Add($groupboxNoAdSync)
	$tabpageOffice365.Controls.Add($groupboxADSync)
	$tabpageOffice365.Location = '8, 40'
	$tabpageOffice365.Margin = '6, 6, 6, 6'
	$tabpageOffice365.Name = 'tabpageOffice365'
	$tabpageOffice365.Padding = '6, 6, 6, 6'
	$tabpageOffice365.Size = '998, 958'
	$tabpageOffice365.TabIndex = 1
	$tabpageOffice365.Text = 'Office 365 User'
	$tabpageOffice365.UseVisualStyleBackColor = $True
	#
	# groupboxNoAdSync
	#
	$groupboxNoAdSync.Controls.Add($tabcontrol2)
	$groupboxNoAdSync.Location = '13, 114'
	$groupboxNoAdSync.Margin = '6, 6, 6, 6'
	$groupboxNoAdSync.Name = 'groupboxNoAdSync'
	$groupboxNoAdSync.Padding = '6, 6, 6, 6'
	$groupboxNoAdSync.Size = '973, 806'
	$groupboxNoAdSync.TabIndex = 3
	$groupboxNoAdSync.TabStop = $False
	$groupboxNoAdSync.Text = 'No ADSync'
	$groupboxNoAdSync.UseCompatibleTextRendering = $True
	#
	# tabcontrol2
	#
	$tabcontrol2.Controls.Add($tabpageO365General)
	$tabcontrol2.Controls.Add($tabpageO365Account)
	$tabcontrol2.Controls.Add($tabpageO365Address)
	$tabcontrol2.Controls.Add($tabpageO365Groups)
	$tabcontrol2.Controls.Add($tabpagesecurityGroups)
	$tabcontrol2.Controls.Add($tabpageo365shared)
	$tabcontrol2.Controls.Add($tabpageO365Attributes)
	$tabcontrol2.Location = '13, 38'
	$tabcontrol2.Margin = '6, 6, 6, 6'
	$tabcontrol2.Name = 'tabcontrol2'
	$tabcontrol2.SelectedIndex = 0
	$tabcontrol2.Size = '948, 756'
	$tabcontrol2.TabIndex = 2
	#
	# tabpageO365General
	#
	$tabpageO365General.Controls.Add($buttonConnectToOffice365)
	$tabpageO365General.Controls.Add($labelO365FirstName)
	$tabpageO365General.Controls.Add($buttonCopyOnPremUser)
	$tabpageO365General.Controls.Add($comboboxO365Licenses)
	$tabpageO365General.Controls.Add($textboxO365FirstName)
	$tabpageO365General.Controls.Add($panel3)
	$tabpageO365General.Controls.Add($labelO365License)
	$tabpageO365General.Controls.Add($labelO365LastName)
	$tabpageO365General.Controls.Add($textboxO365LastName)
	$tabpageO365General.Controls.Add($textboxO365DisplayName)
	$tabpageO365General.Controls.Add($labelO365DisplayName)
	$tabpageO365General.Location = '8, 40'
	$tabpageO365General.Margin = '6, 6, 6, 6'
	$tabpageO365General.Name = 'tabpageO365General'
	$tabpageO365General.Padding = '6, 6, 6, 6'
	$tabpageO365General.Size = '932, 708'
	$tabpageO365General.TabIndex = 0
	$tabpageO365General.Text = 'General'
	$tabpageO365General.UseVisualStyleBackColor = $True
	#
	# buttonConnectToOffice365
	#
	$buttonConnectToOffice365.ForeColor = 'Firebrick'
	$buttonConnectToOffice365.Location = '28, 614'
	$buttonConnectToOffice365.Margin = '6, 6, 6, 6'
	$buttonConnectToOffice365.Name = 'buttonConnectToOffice365'
	$buttonConnectToOffice365.Size = '275, 50'
	$buttonConnectToOffice365.TabIndex = 10
	$buttonConnectToOffice365.Text = '*Connect to Office 365'
	$buttonConnectToOffice365.UseCompatibleTextRendering = $True
	$buttonConnectToOffice365.UseVisualStyleBackColor = $True
	$buttonConnectToOffice365.add_Click($buttonConnectToOffice365_Click)
	#
	# labelO365FirstName
	#
	$labelO365FirstName.AutoSize = $True
	$labelO365FirstName.Location = '13, 18'
	$labelO365FirstName.Margin = '13, 0, 13, 0'
	$labelO365FirstName.Name = 'labelO365FirstName'
	$labelO365FirstName.Size = '125, 31'
	$labelO365FirstName.TabIndex = 9
	$labelO365FirstName.Text = 'First Name:'
	$labelO365FirstName.UseCompatibleTextRendering = $True
	#
	# buttonCopyOnPremUser
	#
	$buttonCopyOnPremUser.Location = '530, 614'
	$buttonCopyOnPremUser.Margin = '6, 6, 6, 6'
	$buttonCopyOnPremUser.Name = 'buttonCopyOnPremUser'
	$buttonCopyOnPremUser.Size = '350, 50'
	$buttonCopyOnPremUser.TabIndex = 11
	$buttonCopyOnPremUser.Text = 'Copy Attributes From AD User'
	$buttonCopyOnPremUser.UseCompatibleTextRendering = $True
	$buttonCopyOnPremUser.UseVisualStyleBackColor = $True
	$buttonCopyOnPremUser.add_Click($buttonCopyOnPremUser_Click)
	#
	# comboboxO365Licenses
	#
	$comboboxO365Licenses.DropDownStyle = 'DropDownList'
	$comboboxO365Licenses.FormattingEnabled = $True
	$comboboxO365Licenses.Location = '256, 230'
	$comboboxO365Licenses.Margin = '6, 6, 6, 6'
	$comboboxO365Licenses.Name = 'comboboxO365Licenses'
	$comboboxO365Licenses.Size = '624, 34'
	$comboboxO365Licenses.TabIndex = 3
	$tooltip1.SetToolTip($comboboxO365Licenses, 'Connect to Office 365 to display licenses. Will only display licenses with at least 1 available to assign')
	$comboboxO365Licenses.add_SelectedIndexChanged($comboboxO365Licenses_SelectedIndexChanged)
	#
	# textboxO365FirstName
	#
	$textboxO365FirstName.Location = '256, 18'
	$textboxO365FirstName.Margin = '13, 12, 13, 12'
	$textboxO365FirstName.Name = 'textboxO365FirstName'
	$textboxO365FirstName.Size = '624, 32'
	$textboxO365FirstName.TabIndex = 0
	$textboxO365FirstName.add_TextChanged($textboxO365FirstName_TextChanged)
	#
	# panel3
	#
	$panel3.Controls.Add($maskedtextboxo365password)
	$panel3.Controls.Add($buttonO365Clear)
	$panel3.Controls.Add($labelo365password)
	$panel3.Controls.Add($textboxo365confirmpassword)
	$panel3.Controls.Add($labelO365userconfirmpassword)
	$panel3.Controls.Add($buttonO365Genpassword)
	$panel3.Controls.Add($textboxo365passwordgen)
	$panel3.Controls.Add($labelO365userpassword)
	$panel3.BackColor = 'MenuBar'
	$panel3.BorderStyle = 'Fixed3D'
	$panel3.Location = '13, 308'
	$panel3.Margin = '6, 6, 6, 6'
	$panel3.Name = 'panel3'
	$panel3.Size = '892, 284'
	$panel3.TabIndex = 4
	#
	# maskedtextboxo365password
	#
	$maskedtextboxo365password.Location = '336, 97'
	$maskedtextboxo365password.Margin = '13, 12, 13, 12'
	$maskedtextboxo365password.Name = 'maskedtextboxo365password'
	$maskedtextboxo365password.Size = '529, 32'
	$maskedtextboxo365password.TabIndex = 8
	$maskedtextboxo365password.add_TextChanged($maskedtextboxo365password_TextChanged)
	#
	# buttonO365Clear
	#
	$buttonO365Clear.Location = '750, 23'
	$buttonO365Clear.Margin = '6, 6, 6, 6'
	$buttonO365Clear.Name = 'buttonO365Clear'
	$buttonO365Clear.Size = '115, 46'
	$buttonO365Clear.TabIndex = 7
	$buttonO365Clear.Text = 'Clear'
	$buttonO365Clear.UseCompatibleTextRendering = $True
	$buttonO365Clear.UseVisualStyleBackColor = $True
	$buttonO365Clear.add_Click($buttonO365Clear_Click)
	#
	# labelo365password
	#
	$labelo365password.AutoSize = $True
	$labelo365password.Location = '282, 226'
	$labelo365password.Margin = '13, 0, 13, 0'
	$labelo365password.Name = 'labelo365password'
	$labelo365password.Size = '0, 29'
	$labelo365password.TabIndex = 25
	$labelo365password.UseCompatibleTextRendering = $True
	#
	# textboxo365confirmpassword
	#
	$textboxo365confirmpassword.Location = '336, 158'
	$textboxo365confirmpassword.Margin = '13, 12, 13, 12'
	$textboxo365confirmpassword.Name = 'textboxo365confirmpassword'
	$textboxo365confirmpassword.Size = '529, 32'
	$textboxo365confirmpassword.TabIndex = 9
	$textboxo365confirmpassword.add_TextChanged($textboxo365confirmpassword_TextChanged)
	#
	# labelO365userconfirmpassword
	#
	$labelO365userconfirmpassword.AutoSize = $True
	$labelO365userconfirmpassword.ForeColor = 'Firebrick'
	$labelO365userconfirmpassword.Location = '13, 164'
	$labelO365userconfirmpassword.Margin = '13, 0, 13, 0'
	$labelO365userconfirmpassword.Name = 'labelO365userconfirmpassword'
	$labelO365userconfirmpassword.Size = '208, 31'
	$labelO365userconfirmpassword.TabIndex = 23
	$labelO365userconfirmpassword.Text = '*Confirm Password:'
	$labelO365userconfirmpassword.UseCompatibleTextRendering = $True
	#
	# buttonO365Genpassword
	#
	$buttonO365Genpassword.Location = '13, 26'
	$buttonO365Genpassword.Margin = '6, 6, 6, 6'
	$buttonO365Genpassword.Name = 'buttonO365Genpassword'
	$buttonO365Genpassword.Size = '254, 46'
	$buttonO365Genpassword.TabIndex = 5
	$buttonO365Genpassword.Text = 'Generate Password'
	$buttonO365Genpassword.UseCompatibleTextRendering = $True
	$buttonO365Genpassword.UseVisualStyleBackColor = $True
	$buttonO365Genpassword.add_Click($buttonO365Genpassword_Click)
	#
	# textboxo365passwordgen
	#
	$textboxo365passwordgen.Location = '336, 30'
	$textboxo365passwordgen.Margin = '13, 12, 13, 12'
	$textboxo365passwordgen.Name = 'textboxo365passwordgen'
	$textboxo365passwordgen.ReadOnly = $True
	$textboxo365passwordgen.Size = '395, 32'
	$textboxo365passwordgen.TabIndex = 6
	#
	# labelO365userpassword
	#
	$labelO365userpassword.AutoSize = $True
	$labelO365userpassword.ForeColor = 'Firebrick'
	$labelO365userpassword.Location = '13, 100'
	$labelO365userpassword.Margin = '13, 0, 13, 0'
	$labelO365userpassword.Name = 'labelO365userpassword'
	$labelO365userpassword.Size = '122, 31'
	$labelO365userpassword.TabIndex = 19
	$labelO365userpassword.Text = '*Password:'
	$labelO365userpassword.UseCompatibleTextRendering = $True
	#
	# labelO365License
	#
	$labelO365License.AutoSize = $True
	$labelO365License.Location = '13, 233'
	$labelO365License.Margin = '13, 0, 13, 0'
	$labelO365License.Name = 'labelO365License'
	$labelO365License.Size = '92, 31'
	$labelO365License.TabIndex = 27
	$labelO365License.Text = 'License:'
	$tooltip1.SetToolTip($labelO365License, 'Only display licenses with at least 1 available to assign')
	$labelO365License.UseCompatibleTextRendering = $True
	#
	# labelO365LastName
	#
	$labelO365LastName.AutoSize = $True
	$labelO365LastName.Location = '13, 91'
	$labelO365LastName.Margin = '13, 0, 13, 0'
	$labelO365LastName.Name = 'labelO365LastName'
	$labelO365LastName.Size = '123, 31'
	$labelO365LastName.TabIndex = 13
	$labelO365LastName.Text = 'Last Name:'
	$labelO365LastName.UseCompatibleTextRendering = $True
	#
	# textboxO365LastName
	#
	$textboxO365LastName.Location = '256, 88'
	$textboxO365LastName.Margin = '13, 12, 13, 12'
	$textboxO365LastName.Name = 'textboxO365LastName'
	$textboxO365LastName.Size = '624, 32'
	$textboxO365LastName.TabIndex = 1
	$textboxO365LastName.add_TextChanged($textboxO365LastName_TextChanged)
	#
	# textboxO365DisplayName
	#
	$textboxO365DisplayName.Location = '256, 158'
	$textboxO365DisplayName.Margin = '13, 12, 13, 12'
	$textboxO365DisplayName.MaxLength = 256
	$textboxO365DisplayName.Name = 'textboxO365DisplayName'
	$textboxO365DisplayName.Size = '624, 32'
	$textboxO365DisplayName.TabIndex = 2
	$textboxO365DisplayName.add_TextChanged($textboxO365DisplayName_TextChanged)
	#
	# labelO365DisplayName
	#
	$labelO365DisplayName.AutoSize = $True
	$labelO365DisplayName.ForeColor = 'Firebrick'
	$labelO365DisplayName.Location = '13, 161'
	$labelO365DisplayName.Margin = '13, 0, 13, 0'
	$labelO365DisplayName.Name = 'labelO365DisplayName'
	$labelO365DisplayName.Size = '164, 31'
	$labelO365DisplayName.TabIndex = 14
	$labelO365DisplayName.Text = '*Display Name:'
	$labelO365DisplayName.UseCompatibleTextRendering = $True
	#
	# tabpageO365Account
	#
	$tabpageO365Account.Controls.Add($comboboxMFA)
	$tabpageO365Account.Controls.Add($labelMultiFactorAuthentic)
	$tabpageO365Account.Controls.Add($comboboxO365Domains)
	$tabpageO365Account.Controls.Add($labelAliasEMailAddresses)
	$tabpageO365Account.Controls.Add($textboxo365proxyaddresses)
	$tabpageO365Account.Controls.Add($textboxO365EmailAddress)
	$tabpageO365Account.Controls.Add($labelEMailOnlyIfYouWantIt)
	$tabpageO365Account.Controls.Add($comboboxO365countrycode)
	$tabpageO365Account.Controls.Add($labelCountryCode)
	$tabpageO365Account.Controls.Add($panel4)
	$tabpageO365Account.Controls.Add($textboxO365UPN)
	$tabpageO365Account.Controls.Add($labelO365UserPrincipalName)
	$tabpageO365Account.Location = '8, 40'
	$tabpageO365Account.Margin = '6, 6, 6, 6'
	$tabpageO365Account.Name = 'tabpageO365Account'
	$tabpageO365Account.Padding = '6, 6, 6, 6'
	$tabpageO365Account.Size = '932, 708'
	$tabpageO365Account.TabIndex = 1
	$tabpageO365Account.Text = 'Account'
	$tabpageO365Account.UseVisualStyleBackColor = $True
	#
	# comboboxMFA
	#
	$comboboxMFA.DropDownStyle = 'DropDownList'
	$comboboxMFA.FormattingEnabled = $True
	[void]$comboboxMFA.Items.Add('False')
	[void]$comboboxMFA.Items.Add('True')
	$comboboxMFA.Location = '340, 194'
	$comboboxMFA.Margin = '6, 6, 6, 6'
	$comboboxMFA.Name = 'comboboxMFA'
	$comboboxMFA.Size = '162, 34'
	$comboboxMFA.TabIndex = 34
	#
	# labelMultiFactorAuthentic
	#
	$labelMultiFactorAuthentic.AutoSize = $True
	$labelMultiFactorAuthentic.Location = '19, 197'
	$labelMultiFactorAuthentic.Margin = '6, 0, 6, 0'
	$labelMultiFactorAuthentic.Name = 'labelMultiFactorAuthentic'
	$labelMultiFactorAuthentic.Size = '284, 31'
	$labelMultiFactorAuthentic.TabIndex = 33
	$labelMultiFactorAuthentic.Text = 'Multi-Factor Authentication:'
	$labelMultiFactorAuthentic.UseCompatibleTextRendering = $True
	#
	# comboboxO365Domains
	#
	$comboboxO365Domains.DropDownStyle = 'DropDownList'
	$comboboxO365Domains.FormattingEnabled = $True
	$comboboxO365Domains.Location = '506, 65'
	$comboboxO365Domains.Margin = '6, 6, 6, 6'
	$comboboxO365Domains.Name = 'comboboxO365Domains'
	$comboboxO365Domains.Size = '394, 34'
	$comboboxO365Domains.Sorted = $True
	$comboboxO365Domains.TabIndex = 1
	#
	# labelAliasEMailAddresses
	#
	$labelAliasEMailAddresses.AutoSize = $True
	$labelAliasEMailAddresses.Location = '19, 327'
	$labelAliasEMailAddresses.Margin = '13, 0, 13, 0'
	$labelAliasEMailAddresses.Name = 'labelAliasEMailAddresses'
	$labelAliasEMailAddresses.Size = '247, 31'
	$labelAliasEMailAddresses.TabIndex = 32
	$labelAliasEMailAddresses.Text = 'Alias E-Mail Addresses:'
	$labelAliasEMailAddresses.UseCompatibleTextRendering = $True
	#
	# textboxo365proxyaddresses
	#
	$textboxo365proxyaddresses.Location = '340, 324'
	$textboxo365proxyaddresses.Margin = '13, 12, 13, 12'
	$textboxo365proxyaddresses.Multiline = $True
	$textboxo365proxyaddresses.Name = 'textboxo365proxyaddresses'
	$textboxo365proxyaddresses.Size = '560, 135'
	$textboxo365proxyaddresses.TabIndex = 4
	#
	# textboxO365EmailAddress
	#
	$textboxO365EmailAddress.Location = '340, 258'
	$textboxO365EmailAddress.Margin = '13, 12, 13, 12'
	$textboxO365EmailAddress.Name = 'textboxO365EmailAddress'
	$textboxO365EmailAddress.Size = '560, 32'
	$textboxO365EmailAddress.TabIndex = 3
	$tooltip1.SetToolTip($textboxO365EmailAddress, 'Only enter a value if you want it different from the UPN')
	#
	# labelEMailOnlyIfYouWantIt
	#
	$labelEMailOnlyIfYouWantIt.AutoSize = $True
	$labelEMailOnlyIfYouWantIt.Location = '19, 261'
	$labelEMailOnlyIfYouWantIt.Margin = '13, 0, 13, 0'
	$labelEMailOnlyIfYouWantIt.Name = 'labelEMailOnlyIfYouWantIt'
	$labelEMailOnlyIfYouWantIt.Size = '71, 31'
	$labelEMailOnlyIfYouWantIt.TabIndex = 29
	$labelEMailOnlyIfYouWantIt.Text = 'Email:'
	$tooltip1.SetToolTip($labelEMailOnlyIfYouWantIt, 'Only enter a E-mail value if you want the users primary e-mail to be different than their User Principal Name
')
	$labelEMailOnlyIfYouWantIt.UseCompatibleTextRendering = $True
	#
	# comboboxO365countrycode
	#
	$comboboxO365countrycode.BackColor = 'Window'
	$comboboxO365countrycode.DropDownStyle = 'DropDownList'
	$comboboxO365countrycode.FormattingEnabled = $True
	[void]$comboboxO365countrycode.Items.Add('AD')
	[void]$comboboxO365countrycode.Items.Add('AE')
	[void]$comboboxO365countrycode.Items.Add('AF')
	[void]$comboboxO365countrycode.Items.Add('AG')
	[void]$comboboxO365countrycode.Items.Add('AI')
	[void]$comboboxO365countrycode.Items.Add('AL')
	[void]$comboboxO365countrycode.Items.Add('AM')
	[void]$comboboxO365countrycode.Items.Add('AO')
	[void]$comboboxO365countrycode.Items.Add('AQ')
	[void]$comboboxO365countrycode.Items.Add('AR')
	[void]$comboboxO365countrycode.Items.Add('AS')
	[void]$comboboxO365countrycode.Items.Add('AT')
	[void]$comboboxO365countrycode.Items.Add('AU')
	[void]$comboboxO365countrycode.Items.Add('AW')
	[void]$comboboxO365countrycode.Items.Add('AX')
	[void]$comboboxO365countrycode.Items.Add('AZ')
	[void]$comboboxO365countrycode.Items.Add('BA')
	[void]$comboboxO365countrycode.Items.Add('BB')
	[void]$comboboxO365countrycode.Items.Add('BD')
	[void]$comboboxO365countrycode.Items.Add('BE')
	[void]$comboboxO365countrycode.Items.Add('BF')
	[void]$comboboxO365countrycode.Items.Add('BG')
	[void]$comboboxO365countrycode.Items.Add('BH')
	[void]$comboboxO365countrycode.Items.Add('BI')
	[void]$comboboxO365countrycode.Items.Add('BJ')
	[void]$comboboxO365countrycode.Items.Add('BL')
	[void]$comboboxO365countrycode.Items.Add('BM')
	[void]$comboboxO365countrycode.Items.Add('BN')
	[void]$comboboxO365countrycode.Items.Add('BO')
	[void]$comboboxO365countrycode.Items.Add('BQ')
	[void]$comboboxO365countrycode.Items.Add('BR')
	[void]$comboboxO365countrycode.Items.Add('BS')
	[void]$comboboxO365countrycode.Items.Add('BT')
	[void]$comboboxO365countrycode.Items.Add('BV')
	[void]$comboboxO365countrycode.Items.Add('BW')
	[void]$comboboxO365countrycode.Items.Add('BY')
	[void]$comboboxO365countrycode.Items.Add('BZ')
	[void]$comboboxO365countrycode.Items.Add('CA')
	[void]$comboboxO365countrycode.Items.Add('CC')
	[void]$comboboxO365countrycode.Items.Add('CD')
	[void]$comboboxO365countrycode.Items.Add('CF')
	[void]$comboboxO365countrycode.Items.Add('CG')
	[void]$comboboxO365countrycode.Items.Add('CH')
	[void]$comboboxO365countrycode.Items.Add('CI')
	[void]$comboboxO365countrycode.Items.Add('CK')
	[void]$comboboxO365countrycode.Items.Add('CL')
	[void]$comboboxO365countrycode.Items.Add('CM')
	[void]$comboboxO365countrycode.Items.Add('CN')
	[void]$comboboxO365countrycode.Items.Add('CO')
	[void]$comboboxO365countrycode.Items.Add('CR')
	[void]$comboboxO365countrycode.Items.Add('CU')
	[void]$comboboxO365countrycode.Items.Add('CV')
	[void]$comboboxO365countrycode.Items.Add('CW')
	[void]$comboboxO365countrycode.Items.Add('CX')
	[void]$comboboxO365countrycode.Items.Add('CY')
	[void]$comboboxO365countrycode.Items.Add('CZ')
	[void]$comboboxO365countrycode.Items.Add('DE')
	[void]$comboboxO365countrycode.Items.Add('DJ')
	[void]$comboboxO365countrycode.Items.Add('DK')
	[void]$comboboxO365countrycode.Items.Add('DM')
	[void]$comboboxO365countrycode.Items.Add('DO')
	[void]$comboboxO365countrycode.Items.Add('DZ')
	[void]$comboboxO365countrycode.Items.Add('EC')
	[void]$comboboxO365countrycode.Items.Add('EE')
	[void]$comboboxO365countrycode.Items.Add('EG')
	[void]$comboboxO365countrycode.Items.Add('EH')
	[void]$comboboxO365countrycode.Items.Add('ER')
	[void]$comboboxO365countrycode.Items.Add('ES')
	[void]$comboboxO365countrycode.Items.Add('ET')
	[void]$comboboxO365countrycode.Items.Add('FI')
	[void]$comboboxO365countrycode.Items.Add('FJ')
	[void]$comboboxO365countrycode.Items.Add('FK')
	[void]$comboboxO365countrycode.Items.Add('FM')
	[void]$comboboxO365countrycode.Items.Add('FO')
	[void]$comboboxO365countrycode.Items.Add('FR')
	[void]$comboboxO365countrycode.Items.Add('GA')
	[void]$comboboxO365countrycode.Items.Add('GB')
	[void]$comboboxO365countrycode.Items.Add('GD')
	[void]$comboboxO365countrycode.Items.Add('GE')
	[void]$comboboxO365countrycode.Items.Add('GF')
	[void]$comboboxO365countrycode.Items.Add('GG')
	[void]$comboboxO365countrycode.Items.Add('GH')
	[void]$comboboxO365countrycode.Items.Add('GI')
	[void]$comboboxO365countrycode.Items.Add('GL')
	[void]$comboboxO365countrycode.Items.Add('GM')
	[void]$comboboxO365countrycode.Items.Add('GN')
	[void]$comboboxO365countrycode.Items.Add('GP')
	[void]$comboboxO365countrycode.Items.Add('GQ')
	[void]$comboboxO365countrycode.Items.Add('GR')
	[void]$comboboxO365countrycode.Items.Add('GS')
	[void]$comboboxO365countrycode.Items.Add('GT')
	[void]$comboboxO365countrycode.Items.Add('GU')
	[void]$comboboxO365countrycode.Items.Add('GW')
	[void]$comboboxO365countrycode.Items.Add('GY')
	[void]$comboboxO365countrycode.Items.Add('HK')
	[void]$comboboxO365countrycode.Items.Add('HM')
	[void]$comboboxO365countrycode.Items.Add('HN')
	[void]$comboboxO365countrycode.Items.Add('HR')
	[void]$comboboxO365countrycode.Items.Add('HT')
	[void]$comboboxO365countrycode.Items.Add('HU')
	[void]$comboboxO365countrycode.Items.Add('ID')
	[void]$comboboxO365countrycode.Items.Add('IE')
	[void]$comboboxO365countrycode.Items.Add('IL')
	[void]$comboboxO365countrycode.Items.Add('IM')
	[void]$comboboxO365countrycode.Items.Add('IN')
	[void]$comboboxO365countrycode.Items.Add('IO')
	[void]$comboboxO365countrycode.Items.Add('IQ')
	[void]$comboboxO365countrycode.Items.Add('IR')
	[void]$comboboxO365countrycode.Items.Add('IS')
	[void]$comboboxO365countrycode.Items.Add('IT')
	[void]$comboboxO365countrycode.Items.Add('JE')
	[void]$comboboxO365countrycode.Items.Add('JM')
	[void]$comboboxO365countrycode.Items.Add('JO')
	[void]$comboboxO365countrycode.Items.Add('JP')
	[void]$comboboxO365countrycode.Items.Add('KE')
	[void]$comboboxO365countrycode.Items.Add('KG')
	[void]$comboboxO365countrycode.Items.Add('KH')
	[void]$comboboxO365countrycode.Items.Add('KI')
	[void]$comboboxO365countrycode.Items.Add('KM')
	[void]$comboboxO365countrycode.Items.Add('KN')
	[void]$comboboxO365countrycode.Items.Add('KP')
	[void]$comboboxO365countrycode.Items.Add('KR')
	[void]$comboboxO365countrycode.Items.Add('KW')
	[void]$comboboxO365countrycode.Items.Add('KY')
	[void]$comboboxO365countrycode.Items.Add('KZ')
	[void]$comboboxO365countrycode.Items.Add('LA')
	[void]$comboboxO365countrycode.Items.Add('LB')
	[void]$comboboxO365countrycode.Items.Add('LC')
	[void]$comboboxO365countrycode.Items.Add('LI')
	[void]$comboboxO365countrycode.Items.Add('LK')
	[void]$comboboxO365countrycode.Items.Add('LR')
	[void]$comboboxO365countrycode.Items.Add('LS')
	[void]$comboboxO365countrycode.Items.Add('LT')
	[void]$comboboxO365countrycode.Items.Add('LU')
	[void]$comboboxO365countrycode.Items.Add('LV')
	[void]$comboboxO365countrycode.Items.Add('LY')
	[void]$comboboxO365countrycode.Items.Add('MA')
	[void]$comboboxO365countrycode.Items.Add('MC')
	[void]$comboboxO365countrycode.Items.Add('MD')
	[void]$comboboxO365countrycode.Items.Add('ME')
	[void]$comboboxO365countrycode.Items.Add('MF')
	[void]$comboboxO365countrycode.Items.Add('MG')
	[void]$comboboxO365countrycode.Items.Add('MH')
	[void]$comboboxO365countrycode.Items.Add('MK')
	[void]$comboboxO365countrycode.Items.Add('ML')
	[void]$comboboxO365countrycode.Items.Add('MM')
	[void]$comboboxO365countrycode.Items.Add('MN')
	[void]$comboboxO365countrycode.Items.Add('MO')
	[void]$comboboxO365countrycode.Items.Add('MP')
	[void]$comboboxO365countrycode.Items.Add('MQ')
	[void]$comboboxO365countrycode.Items.Add('MR')
	[void]$comboboxO365countrycode.Items.Add('MS')
	[void]$comboboxO365countrycode.Items.Add('MT')
	[void]$comboboxO365countrycode.Items.Add('MU')
	[void]$comboboxO365countrycode.Items.Add('MV')
	[void]$comboboxO365countrycode.Items.Add('MW')
	[void]$comboboxO365countrycode.Items.Add('MX')
	[void]$comboboxO365countrycode.Items.Add('MY')
	[void]$comboboxO365countrycode.Items.Add('MZ')
	[void]$comboboxO365countrycode.Items.Add('NA')
	[void]$comboboxO365countrycode.Items.Add('NC')
	[void]$comboboxO365countrycode.Items.Add('NE')
	[void]$comboboxO365countrycode.Items.Add('NF')
	[void]$comboboxO365countrycode.Items.Add('NG')
	[void]$comboboxO365countrycode.Items.Add('NI')
	[void]$comboboxO365countrycode.Items.Add('NL')
	[void]$comboboxO365countrycode.Items.Add('NO')
	[void]$comboboxO365countrycode.Items.Add('NP')
	[void]$comboboxO365countrycode.Items.Add('NR')
	[void]$comboboxO365countrycode.Items.Add('NU')
	[void]$comboboxO365countrycode.Items.Add('NZ')
	[void]$comboboxO365countrycode.Items.Add('OM')
	[void]$comboboxO365countrycode.Items.Add('PA')
	[void]$comboboxO365countrycode.Items.Add('PE')
	[void]$comboboxO365countrycode.Items.Add('PF')
	[void]$comboboxO365countrycode.Items.Add('PG')
	[void]$comboboxO365countrycode.Items.Add('PH')
	[void]$comboboxO365countrycode.Items.Add('PK')
	[void]$comboboxO365countrycode.Items.Add('PL')
	[void]$comboboxO365countrycode.Items.Add('PM')
	[void]$comboboxO365countrycode.Items.Add('PN')
	[void]$comboboxO365countrycode.Items.Add('PR')
	[void]$comboboxO365countrycode.Items.Add('PS')
	[void]$comboboxO365countrycode.Items.Add('PT')
	[void]$comboboxO365countrycode.Items.Add('PW')
	[void]$comboboxO365countrycode.Items.Add('PY')
	[void]$comboboxO365countrycode.Items.Add('QA')
	[void]$comboboxO365countrycode.Items.Add('RE')
	[void]$comboboxO365countrycode.Items.Add('RO')
	[void]$comboboxO365countrycode.Items.Add('RS')
	[void]$comboboxO365countrycode.Items.Add('RU')
	[void]$comboboxO365countrycode.Items.Add('RW')
	[void]$comboboxO365countrycode.Items.Add('SA')
	[void]$comboboxO365countrycode.Items.Add('SB')
	[void]$comboboxO365countrycode.Items.Add('SC')
	[void]$comboboxO365countrycode.Items.Add('SD')
	[void]$comboboxO365countrycode.Items.Add('SE')
	[void]$comboboxO365countrycode.Items.Add('SG')
	[void]$comboboxO365countrycode.Items.Add('SH')
	[void]$comboboxO365countrycode.Items.Add('SI')
	[void]$comboboxO365countrycode.Items.Add('SJ')
	[void]$comboboxO365countrycode.Items.Add('SK')
	[void]$comboboxO365countrycode.Items.Add('SL')
	[void]$comboboxO365countrycode.Items.Add('SM')
	[void]$comboboxO365countrycode.Items.Add('SN')
	[void]$comboboxO365countrycode.Items.Add('SO')
	[void]$comboboxO365countrycode.Items.Add('SR')
	[void]$comboboxO365countrycode.Items.Add('SS')
	[void]$comboboxO365countrycode.Items.Add('ST')
	[void]$comboboxO365countrycode.Items.Add('SV')
	[void]$comboboxO365countrycode.Items.Add('SX')
	[void]$comboboxO365countrycode.Items.Add('SY')
	[void]$comboboxO365countrycode.Items.Add('SZ')
	[void]$comboboxO365countrycode.Items.Add('TC')
	[void]$comboboxO365countrycode.Items.Add('TD')
	[void]$comboboxO365countrycode.Items.Add('TF')
	[void]$comboboxO365countrycode.Items.Add('TG')
	[void]$comboboxO365countrycode.Items.Add('TH')
	[void]$comboboxO365countrycode.Items.Add('TJ')
	[void]$comboboxO365countrycode.Items.Add('TK')
	[void]$comboboxO365countrycode.Items.Add('TL')
	[void]$comboboxO365countrycode.Items.Add('TM')
	[void]$comboboxO365countrycode.Items.Add('TN')
	[void]$comboboxO365countrycode.Items.Add('TO')
	[void]$comboboxO365countrycode.Items.Add('TR')
	[void]$comboboxO365countrycode.Items.Add('TT')
	[void]$comboboxO365countrycode.Items.Add('TV')
	[void]$comboboxO365countrycode.Items.Add('TW')
	[void]$comboboxO365countrycode.Items.Add('TZ')
	[void]$comboboxO365countrycode.Items.Add('UA')
	[void]$comboboxO365countrycode.Items.Add('UG')
	[void]$comboboxO365countrycode.Items.Add('UM')
	[void]$comboboxO365countrycode.Items.Add('US')
	[void]$comboboxO365countrycode.Items.Add('UY')
	[void]$comboboxO365countrycode.Items.Add('UZ')
	[void]$comboboxO365countrycode.Items.Add('VA')
	[void]$comboboxO365countrycode.Items.Add('VC')
	[void]$comboboxO365countrycode.Items.Add('VE')
	[void]$comboboxO365countrycode.Items.Add('VG')
	[void]$comboboxO365countrycode.Items.Add('VI')
	[void]$comboboxO365countrycode.Items.Add('VN')
	[void]$comboboxO365countrycode.Items.Add('VU')
	[void]$comboboxO365countrycode.Items.Add('WF')
	[void]$comboboxO365countrycode.Items.Add('WS')
	[void]$comboboxO365countrycode.Items.Add('YE')
	[void]$comboboxO365countrycode.Items.Add('YT')
	[void]$comboboxO365countrycode.Items.Add('ZA')
	[void]$comboboxO365countrycode.Items.Add('ZM')
	[void]$comboboxO365countrycode.Items.Add('ZW')
	$comboboxO365countrycode.Location = '340, 132'
	$comboboxO365countrycode.Margin = '6, 6, 6, 6'
	$comboboxO365countrycode.Name = 'comboboxO365countrycode'
	$comboboxO365countrycode.Size = '162, 34'
	$comboboxO365countrycode.Sorted = $True
	$comboboxO365countrycode.TabIndex = 2
	$comboboxO365countrycode.add_SelectedIndexChanged($comboboxO365countrycode_SelectedIndexChanged)
	#
	# labelCountryCode
	#
	$labelCountryCode.AutoSize = $True
	$labelCountryCode.ForeColor = 'Firebrick'
	$labelCountryCode.Location = '19, 135'
	$labelCountryCode.Margin = '13, 0, 13, 0'
	$labelCountryCode.Name = 'labelCountryCode'
	$labelCountryCode.Size = '162, 31'
	$labelCountryCode.TabIndex = 27
	$labelCountryCode.Text = '*Country Code:'
	$labelCountryCode.UseCompatibleTextRendering = $True
	#
	# panel4
	#
	$panel4.Controls.Add($checkboxBlockCred)
	$panel4.Controls.Add($checkboxO365PasswordNeverExpires)
	$panel4.Controls.Add($checkboxo365usermustchangepassword)
	$panel4.BackColor = 'MenuBar'
	$panel4.BorderStyle = 'Fixed3D'
	$panel4.Location = '13, 477'
	$panel4.Margin = '6, 6, 6, 6'
	$panel4.Name = 'panel4'
	$panel4.Size = '907, 204'
	$panel4.TabIndex = 5
	#
	# checkboxBlockCred
	#
	$checkboxBlockCred.Location = '22, 136'
	$checkboxBlockCred.Margin = '6, 6, 6, 6'
	$checkboxBlockCred.Name = 'checkboxBlockCred'
	$checkboxBlockCred.Size = '875, 48'
	$checkboxBlockCred.TabIndex = 8
	$checkboxBlockCred.Text = 'Account is disabled'
	$checkboxBlockCred.UseCompatibleTextRendering = $True
	$checkboxBlockCred.UseVisualStyleBackColor = $True
	#
	# checkboxO365PasswordNeverExpires
	#
	$checkboxO365PasswordNeverExpires.Location = '22, 76'
	$checkboxO365PasswordNeverExpires.Margin = '6, 6, 6, 6'
	$checkboxO365PasswordNeverExpires.Name = 'checkboxO365PasswordNeverExpires'
	$checkboxO365PasswordNeverExpires.Size = '875, 48'
	$checkboxO365PasswordNeverExpires.TabIndex = 7
	$checkboxO365PasswordNeverExpires.Text = 'Password never expires'
	$checkboxO365PasswordNeverExpires.UseCompatibleTextRendering = $True
	$checkboxO365PasswordNeverExpires.UseVisualStyleBackColor = $True
	#
	# checkboxo365usermustchangepassword
	#
	$checkboxo365usermustchangepassword.Location = '22, 16'
	$checkboxo365usermustchangepassword.Margin = '6, 6, 6, 6'
	$checkboxo365usermustchangepassword.Name = 'checkboxo365usermustchangepassword'
	$checkboxo365usermustchangepassword.Size = '875, 48'
	$checkboxo365usermustchangepassword.TabIndex = 6
	$checkboxo365usermustchangepassword.Text = 'User must change password at next logon'
	$checkboxo365usermustchangepassword.UseCompatibleTextRendering = $True
	$checkboxo365usermustchangepassword.UseVisualStyleBackColor = $True
	#
	# textboxO365UPN
	#
	$textboxO365UPN.Location = '19, 67'
	$textboxO365UPN.Margin = '13, 12, 13, 12'
	$textboxO365UPN.MaxLength = 113
	$textboxO365UPN.Name = 'textboxO365UPN'
	$textboxO365UPN.Size = '436, 32'
	$textboxO365UPN.TabIndex = 0
	$textboxO365UPN.add_TextChanged($textboxO365UPN_TextChanged)
	#
	# labelO365UserPrincipalName
	#
	$labelO365UserPrincipalName.AutoSize = $True
	$labelO365UserPrincipalName.ForeColor = 'Firebrick'
	$labelO365UserPrincipalName.Location = '13, 24'
	$labelO365UserPrincipalName.Margin = '13, 0, 13, 0'
	$labelO365UserPrincipalName.Name = 'labelO365UserPrincipalName'
	$labelO365UserPrincipalName.Size = '219, 31'
	$labelO365UserPrincipalName.TabIndex = 24
	$labelO365UserPrincipalName.Text = '*UserPrincipalName:'
	$labelO365UserPrincipalName.UseCompatibleTextRendering = $True
	#
	# tabpageO365Address
	#
	$tabpageO365Address.Controls.Add($label10)
	$tabpageO365Address.Controls.Add($textboxo365zip)
	$tabpageO365Address.Controls.Add($textboxo365state)
	$tabpageO365Address.Controls.Add($label11)
	$tabpageO365Address.Controls.Add($label12)
	$tabpageO365Address.Controls.Add($textboxo365city)
	$tabpageO365Address.Controls.Add($textboxO365street)
	$tabpageO365Address.Controls.Add($label14)
	$tabpageO365Address.Location = '8, 40'
	$tabpageO365Address.Margin = '6, 6, 6, 6'
	$tabpageO365Address.Name = 'tabpageO365Address'
	$tabpageO365Address.Size = '932, 708'
	$tabpageO365Address.TabIndex = 2
	$tabpageO365Address.Text = 'Address'
	$tabpageO365Address.UseVisualStyleBackColor = $True
	#
	# label10
	#
	$label10.AutoSize = $True
	$label10.Location = '26, 485'
	$label10.Margin = '13, 0, 13, 0'
	$label10.Name = 'label10'
	$label10.Size = '175, 31'
	$label10.TabIndex = 22
	$label10.Text = 'Zip/Postal Code:'
	$label10.UseCompatibleTextRendering = $True
	#
	# textboxo365zip
	#
	$textboxo365zip.Location = '370, 482'
	$textboxo365zip.Margin = '13, 12, 13, 12'
	$textboxo365zip.Name = 'textboxo365zip'
	$textboxo365zip.Size = '528, 32'
	$textboxo365zip.TabIndex = 3
	#
	# textboxo365state
	#
	$textboxo365state.Location = '370, 400'
	$textboxo365state.Margin = '13, 12, 13, 12'
	$textboxo365state.Name = 'textboxo365state'
	$textboxo365state.Size = '528, 32'
	$textboxo365state.TabIndex = 2
	#
	# label11
	#
	$label11.AutoSize = $True
	$label11.Location = '26, 403'
	$label11.Margin = '13, 0, 13, 0'
	$label11.Name = 'label11'
	$label11.Size = '159, 31'
	$label11.TabIndex = 19
	$label11.Text = 'State/province:'
	$label11.UseCompatibleTextRendering = $True
	#
	# label12
	#
	$label12.AutoSize = $True
	$label12.Location = '26, 321'
	$label12.Margin = '13, 0, 13, 0'
	$label12.Name = 'label12'
	$label12.Size = '53, 31'
	$label12.TabIndex = 18
	$label12.Text = 'City:'
	$label12.UseCompatibleTextRendering = $True
	#
	# textboxo365city
	#
	$textboxo365city.Location = '370, 318'
	$textboxo365city.Margin = '13, 12, 13, 12'
	$textboxo365city.Name = 'textboxo365city'
	$textboxo365city.Size = '528, 32'
	$textboxo365city.TabIndex = 1
	#
	# textboxO365street
	#
	$textboxO365street.Location = '370, 52'
	$textboxO365street.Margin = '13, 12, 13, 12'
	$textboxO365street.Multiline = $True
	$textboxO365street.Name = 'textboxO365street'
	$textboxO365street.ScrollBars = 'Vertical'
	$textboxO365street.Size = '528, 212'
	$textboxO365street.TabIndex = 0
	#
	# label14
	#
	$label14.AutoSize = $True
	$label14.Location = '26, 52'
	$label14.Margin = '13, 0, 13, 0'
	$label14.Name = 'label14'
	$label14.Size = '75, 31'
	$label14.TabIndex = 13
	$label14.Text = 'Street:'
	$label14.UseCompatibleTextRendering = $True
	#
	# tabpageO365Groups
	#
	$tabpageO365Groups.Controls.Add($labelO365Groups)
	$tabpageO365Groups.Controls.Add($checkedlistboxDISTROo365groups)
	$tabpageO365Groups.Location = '8, 40'
	$tabpageO365Groups.Margin = '6, 6, 6, 6'
	$tabpageO365Groups.Name = 'tabpageO365Groups'
	$tabpageO365Groups.Size = '932, 708'
	$tabpageO365Groups.TabIndex = 3
	$tabpageO365Groups.Text = 'Mail Groups'
	$tooltip1.SetToolTip($tabpageO365Groups, 'To see all Groups connect to Office 365 in the General tab. Groups is not available for AD-Synced environments')
	$tabpageO365Groups.ToolTipText = 'To see all Groups connect to Office 365 in the General tab. Groups is not available for AD-Synced environments'
	$tabpageO365Groups.UseVisualStyleBackColor = $True
	#
	# labelO365Groups
	#
	$labelO365Groups.BorderStyle = 'None'
	$labelO365Groups.Location = '6, 6'
	$labelO365Groups.Margin = '6, 6, 6, 6'
	$labelO365Groups.Multiline = $True
	$labelO365Groups.Name = 'labelO365Groups'
	$labelO365Groups.Size = '913, 63'
	$labelO365Groups.TabIndex = 0
	#
	# checkedlistboxDISTROo365groups
	#
	$checkedlistboxDISTROo365groups.CheckOnClick = $True
	$checkedlistboxDISTROo365groups.FormattingEnabled = $True
	$checkedlistboxDISTROo365groups.Location = '6, 78'
	$checkedlistboxDISTROo365groups.Margin = '13, 12, 13, 12'
	$checkedlistboxDISTROo365groups.Name = 'checkedlistboxDISTROo365groups'
	$checkedlistboxDISTROo365groups.Size = '913, 598'
	$checkedlistboxDISTROo365groups.Sorted = $True
	$checkedlistboxDISTROo365groups.TabIndex = 1
	$tooltip1.SetToolTip($checkedlistboxDISTROo365groups, 'To see all Groups connect to Office 365 in the General tab. Groups is not available for AD-Synced environments')
	$checkedlistboxDISTROo365groups.UseCompatibleTextRendering = $True
	#
	# tabpagesecurityGroups
	#
	$tabpagesecurityGroups.Controls.Add($labelSecurityGroups)
	$tabpagesecurityGroups.Controls.Add($checkedlistboxO365SecurityGroups)
	$tabpagesecurityGroups.Location = '8, 40'
	$tabpagesecurityGroups.Margin = '6, 6, 6, 6'
	$tabpagesecurityGroups.Name = 'tabpagesecurityGroups'
	$tabpagesecurityGroups.Size = '932, 708'
	$tabpagesecurityGroups.TabIndex = 6
	$tabpagesecurityGroups.Text = 'Security Groups'
	$tabpagesecurityGroups.UseVisualStyleBackColor = $True
	#
	# labelSecurityGroups
	#
	$labelSecurityGroups.BorderStyle = 'None'
	$labelSecurityGroups.Location = '10, 6'
	$labelSecurityGroups.Margin = '6, 6, 6, 6'
	$labelSecurityGroups.Multiline = $True
	$labelSecurityGroups.Name = 'labelSecurityGroups'
	$labelSecurityGroups.Size = '913, 61'
	$labelSecurityGroups.TabIndex = 0
	#
	# checkedlistboxO365SecurityGroups
	#
	$checkedlistboxO365SecurityGroups.CheckOnClick = $True
	$checkedlistboxO365SecurityGroups.FormattingEnabled = $True
	$checkedlistboxO365SecurityGroups.Location = '10, 72'
	$checkedlistboxO365SecurityGroups.Margin = '13, 12, 13, 12'
	$checkedlistboxO365SecurityGroups.Name = 'checkedlistboxO365SecurityGroups'
	$checkedlistboxO365SecurityGroups.Size = '913, 598'
	$checkedlistboxO365SecurityGroups.Sorted = $True
	$checkedlistboxO365SecurityGroups.TabIndex = 1
	$checkedlistboxO365SecurityGroups.UseCompatibleTextRendering = $True
	#
	# tabpageo365shared
	#
	$tabpageo365shared.Controls.Add($groupbox3)
	$tabpageo365shared.Controls.Add($labelsharedmailboxes)
	$tabpageo365shared.Controls.Add($checkedlistboxsharedmailboxes)
	$tabpageo365shared.Location = '8, 40'
	$tabpageo365shared.Margin = '6, 6, 6, 6'
	$tabpageo365shared.Name = 'tabpageo365shared'
	$tabpageo365shared.Size = '932, 708'
	$tabpageo365shared.TabIndex = 4
	$tabpageo365shared.Text = 'Shared Mailboxes'
	$tabpageo365shared.UseVisualStyleBackColor = $True
	#
	# groupbox3
	#
	$groupbox3.Controls.Add($labelAutomapping)
	$groupbox3.Controls.Add($comboboxsharedmailboxautomap)
	$groupbox3.Controls.Add($comboboxsharedmaiboxpermission)
	$groupbox3.Controls.Add($labelPermission)
	$groupbox3.Location = '13, 75'
	$groupbox3.Margin = '6, 6, 6, 6'
	$groupbox3.Name = 'groupbox3'
	$groupbox3.Padding = '6, 6, 6, 6'
	$groupbox3.Size = '906, 93'
	$groupbox3.TabIndex = 3
	$groupbox3.TabStop = $False
	$groupbox3.Text = 'Settings'
	$groupbox3.UseCompatibleTextRendering = $True
	#
	# labelAutomapping
	#
	$labelAutomapping.AutoSize = $True
	$labelAutomapping.Location = '572, 40'
	$labelAutomapping.Margin = '6, 0, 6, 0'
	$labelAutomapping.Name = 'labelAutomapping'
	$labelAutomapping.Size = '148, 31'
	$labelAutomapping.TabIndex = 5
	$labelAutomapping.Text = 'Automapping:'
	$labelAutomapping.UseCompatibleTextRendering = $True
	#
	# comboboxsharedmailboxautomap
	#
	$comboboxsharedmailboxautomap.DropDownStyle = 'DropDownList'
	$comboboxsharedmailboxautomap.FormattingEnabled = $True
	[void]$comboboxsharedmailboxautomap.Items.Add('True')
	[void]$comboboxsharedmailboxautomap.Items.Add('False')
	$comboboxsharedmailboxautomap.Location = '732, 37'
	$comboboxsharedmailboxautomap.Margin = '6, 6, 6, 6'
	$comboboxsharedmailboxautomap.Name = 'comboboxsharedmailboxautomap'
	$comboboxsharedmailboxautomap.Size = '162, 34'
	$comboboxsharedmailboxautomap.TabIndex = 4
	$tooltip1.SetToolTip($comboboxsharedmailboxautomap, 'Automapping will automatically add the mailbox on the users Outlook if they have the correct permission')
	#
	# comboboxsharedmaiboxpermission
	#
	$comboboxsharedmaiboxpermission.DropDownStyle = 'DropDownList'
	$comboboxsharedmaiboxpermission.FormattingEnabled = $True
	[void]$comboboxsharedmaiboxpermission.Items.Add('Full Access')
	[void]$comboboxsharedmaiboxpermission.Items.Add('Send As')
	[void]$comboboxsharedmaiboxpermission.Items.Add('Send on Behalf')
	$comboboxsharedmaiboxpermission.Location = '150, 37'
	$comboboxsharedmaiboxpermission.Margin = '6, 6, 6, 6'
	$comboboxsharedmaiboxpermission.Name = 'comboboxsharedmaiboxpermission'
	$comboboxsharedmaiboxpermission.Size = '410, 34'
	$comboboxsharedmaiboxpermission.TabIndex = 3
	$tooltip1.SetToolTip($comboboxsharedmaiboxpermission, 'Permission you want your User to have on the Shared Mailboxes')
	$comboboxsharedmaiboxpermission.add_SelectedIndexChanged($comboboxsharedmaiboxpermission_SelectedIndexChanged)
	#
	# labelPermission
	#
	$labelPermission.AutoSize = $True
	$labelPermission.Location = '12, 43'
	$labelPermission.Margin = '6, 0, 6, 0'
	$labelPermission.Name = 'labelPermission'
	$labelPermission.Size = '126, 31'
	$labelPermission.TabIndex = 2
	$labelPermission.Text = 'Permission:'
	$labelPermission.UseCompatibleTextRendering = $True
	#
	# labelsharedmailboxes
	#
	$labelsharedmailboxes.BackColor = 'Window'
	$labelsharedmailboxes.BorderStyle = 'None'
	$labelsharedmailboxes.Location = '13, 6'
	$labelsharedmailboxes.Margin = '6, 6, 6, 6'
	$labelsharedmailboxes.Multiline = $True
	$labelsharedmailboxes.Name = 'labelsharedmailboxes'
	$labelsharedmailboxes.Size = '906, 57'
	$labelsharedmailboxes.TabIndex = 0
	#
	# checkedlistboxsharedmailboxes
	#
	$checkedlistboxsharedmailboxes.CheckOnClick = $True
	$checkedlistboxsharedmailboxes.FormattingEnabled = $True
	$checkedlistboxsharedmailboxes.Location = '13, 181'
	$checkedlistboxsharedmailboxes.Margin = '13, 12, 13, 12'
	$checkedlistboxsharedmailboxes.Name = 'checkedlistboxsharedmailboxes'
	$checkedlistboxsharedmailboxes.Size = '906, 490'
	$checkedlistboxsharedmailboxes.Sorted = $True
	$checkedlistboxsharedmailboxes.TabIndex = 1
	$checkedlistboxsharedmailboxes.UseCompatibleTextRendering = $True
	#
	# tabpageO365Attributes
	#
	$tabpageO365Attributes.Controls.Add($labelHideFromGlobalAddres)
	$tabpageO365Attributes.Controls.Add($comboboxO365HidefromGAL)
	$tabpageO365Attributes.Location = '8, 40'
	$tabpageO365Attributes.Margin = '6, 6, 6, 6'
	$tabpageO365Attributes.Name = 'tabpageO365Attributes'
	$tabpageO365Attributes.Size = '932, 708'
	$tabpageO365Attributes.TabIndex = 5
	$tabpageO365Attributes.Text = 'Attributes'
	$tabpageO365Attributes.UseVisualStyleBackColor = $True
	#
	# labelHideFromGlobalAddres
	#
	$labelHideFromGlobalAddres.AutoSize = $True
	$labelHideFromGlobalAddres.Location = '28, 32'
	$labelHideFromGlobalAddres.Margin = '13, 0, 13, 0'
	$labelHideFromGlobalAddres.Name = 'labelHideFromGlobalAddres'
	$labelHideFromGlobalAddres.Size = '308, 31'
	$labelHideFromGlobalAddres.TabIndex = 37
	$labelHideFromGlobalAddres.Text = 'Hide from Global Address List'
	$labelHideFromGlobalAddres.UseCompatibleTextRendering = $True
	#
	# comboboxO365HidefromGAL
	#
	$comboboxO365HidefromGAL.DropDownStyle = 'DropDownList'
	$comboboxO365HidefromGAL.FormattingEnabled = $True
	[void]$comboboxO365HidefromGAL.Items.Add('True')
	[void]$comboboxO365HidefromGAL.Items.Add('False')
	$comboboxO365HidefromGAL.Location = '640, 29'
	$comboboxO365HidefromGAL.Margin = '6, 6, 6, 6'
	$comboboxO365HidefromGAL.Name = 'comboboxO365HidefromGAL'
	$comboboxO365HidefromGAL.Size = '258, 34'
	$comboboxO365HidefromGAL.TabIndex = 0
	#
	# groupboxADSync
	#
	$groupboxADSync.Controls.Add($checkboxRunDirSyncAfterUserC)
	$groupboxADSync.Location = '13, 12'
	$groupboxADSync.Margin = '6, 6, 6, 6'
	$groupboxADSync.Name = 'groupboxADSync'
	$groupboxADSync.Padding = '6, 6, 6, 6'
	$groupboxADSync.Size = '973, 90'
	$groupboxADSync.TabIndex = 1
	$groupboxADSync.TabStop = $False
	$groupboxADSync.Text = 'ADSync'
	$groupboxADSync.UseCompatibleTextRendering = $True
	#
	# checkboxRunDirSyncAfterUserC
	#
	$checkboxRunDirSyncAfterUserC.Location = '22, 30'
	$checkboxRunDirSyncAfterUserC.Margin = '6, 6, 6, 6'
	$checkboxRunDirSyncAfterUserC.Name = 'checkboxRunDirSyncAfterUserC'
	$checkboxRunDirSyncAfterUserC.Size = '939, 48'
	$checkboxRunDirSyncAfterUserC.TabIndex = 0
	$checkboxRunDirSyncAfterUserC.Text = 'Run DirSync After User Creation'
	$tooltip1.SetToolTip($checkboxRunDirSyncAfterUserC, 'Automatically run a full ADSync. Disabled if module is not found on this system.')
	$checkboxRunDirSyncAfterUserC.UseCompatibleTextRendering = $True
	$checkboxRunDirSyncAfterUserC.UseVisualStyleBackColor = $True
	$checkboxRunDirSyncAfterUserC.add_CheckedChanged($checkboxRunDirSyncAfterUserC_CheckedChanged)
	#
	# menustrip1
	#
	$menustrip1.ImageScalingSize = '32, 32'
	[void]$menustrip1.Items.Add($fileToolStripMenuItem)
	[void]$menustrip1.Items.Add($editToolStripMenuItem)
	$menustrip1.Location = '0, 0'
	$menustrip1.Name = 'menustrip1'
	$menustrip1.Padding = '13, 4, 0, 4'
	$menustrip1.Size = '1067, 44'
	$menustrip1.TabIndex = 4
	$menustrip1.Text = 'menustrip1'
	#
	# fileToolStripMenuItem
	#
	[void]$fileToolStripMenuItem.DropDownItems.Add($disconnectFromOffice365ToolStripMenuItem)
	[void]$fileToolStripMenuItem.DropDownItems.Add($toolstripseparator1)
	[void]$fileToolStripMenuItem.DropDownItems.Add($saveLogAsToolStripMenuItem)
	[void]$fileToolStripMenuItem.DropDownItems.Add($resetFormToolStripMenuItem)
	[void]$fileToolStripMenuItem.DropDownItems.Add($exitToolStripMenuItem)
	$fileToolStripMenuItem.Name = 'fileToolStripMenuItem'
	$fileToolStripMenuItem.Size = '63, 36'
	$fileToolStripMenuItem.Text = 'File'
	#
	# exitToolStripMenuItem
	#
	#region Binary Data
	$exitToolStripMenuItem.Image = [System.Convert]::FromBase64String('
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAAHYcAAB2HAY/l8WUAAAGwSURBVFhH7ZdNLgRRFIXfFvwMJMKcFbCBjlRV
/xBBYgGsgi0wYCFWYGbYAxKMmQkJCQYEp7vPK7fLe3VvReuaOMkXvHu/W9Wd6qef+88ok2XZPnhq
NptdcAjW8Pc0y38fXPAVfBb4wE1cgGOwmSTJDNurB8MycCuG57D+Yz3CdZqm6/2hVQIxePEerAdr
Ee76Q6vEy7j7WS4NRQw3Qc0eTZTDLVCzRxPlcAvU7NFEOdwCtXA6nc4Umk7x0Tnj0vhuABedR8Nl
sVETfd0KteFgo1hA8UZtDEQ6Fqh9B4tL4F429WBZTdHToDYIFlbAs2xQOKGaJ9BTCjXnWq3WFhbe
ig0a1POEesqg1hejW2wZ1PP4dTzEO2BX9oag5hy21m0I76GmMqjn8euYN9FoNCZlbwhqg0BKcBMv
ocYI0Weg8jvgA2kZhQe1MZKip0FtOHggF1GsZx/wabfbc2ioZyf0qfV/QSyaKIdboGaPJsrhFqjZ
o4lyuAVq9nixzu+EtX8rHsm5AJ+sK7yL1c8FWjA8eDIC5+AIbPzqZKQFr2wPF3kEXfx+gFe5ip/j
OxtWj3NfPxCCd0TsDP4AAAAASUVORK5CYII=')
	#endregion
	$exitToolStripMenuItem.Name = 'exitToolStripMenuItem'
	$exitToolStripMenuItem.Size = '405, 38'
	$exitToolStripMenuItem.Text = 'Exit'
	$exitToolStripMenuItem.add_Click($exitToolStripMenuItem_Click)
	#
	# editToolStripMenuItem
	#
	[void]$editToolStripMenuItem.DropDownItems.Add($copyAllLogToClipboardToolStripMenuItem)
	[void]$editToolStripMenuItem.DropDownItems.Add($clearLogToolStripMenuItem)
	$editToolStripMenuItem.Name = 'editToolStripMenuItem'
	$editToolStripMenuItem.Size = '66, 36'
	$editToolStripMenuItem.Text = 'Edit'
	#
	# tooltip1
	#
	#
	# copyAllLogToClipboardToolStripMenuItem
	#
	$copyAllLogToClipboardToolStripMenuItem.Name = 'copyAllLogToClipboardToolStripMenuItem'
	$copyAllLogToClipboardToolStripMenuItem.Size = '352, 38'
	$copyAllLogToClipboardToolStripMenuItem.Text = 'Copy Log to Clipboard'
	$copyAllLogToClipboardToolStripMenuItem.add_Click($copyAllLogToClipboardToolStripMenuItem_Click)
	#
	# clearLogToolStripMenuItem
	#
	$clearLogToolStripMenuItem.Name = 'clearLogToolStripMenuItem'
	$clearLogToolStripMenuItem.Size = '352, 38'
	$clearLogToolStripMenuItem.Text = 'Clear Log'
	$clearLogToolStripMenuItem.add_Click($clearLogToolStripMenuItem_Click)
	#
	# resetFormToolStripMenuItem
	#
	#region Binary Data
	$resetFormToolStripMenuItem.Image = [System.Convert]::FromBase64String('
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAAHYcAAB2HAY/l8WUAAAH1SURBVFhH7ZW/SxxREMdPVBT8gYioURB7BSGI
FipXCUeQILK77817e56xuEIbBVHBVEEbLdKlCvgHBCJ6EEgl6WIniDbKqX+GlX7nHA+E1bvd2+v2
A8Ptd97uzrzZmXephISEqFhrP2idHfc8+9H3/V5x1wfPmCmP/EWt9YAme4DfoiY619oWoP9AX8Ku
tTa7dUkGwU4R6AF2iyDrjuN0y1IZJNCnyG6jIndI9ou4a4fLjMCPz2auMplMiywF4rq5flTmHxL9
Jq7aUMYseES/8dIf2OFOLpdrlaWU5/ljsFGRZfgeTiLWSgShlNlAoDWRr+BPwp+srg36XgKMItrC
p9gTGT+VEuDdowo3IuOnUgIMJuiCG1Nk9fCoKWVnRAbCCcCOOIkXQ9MuyXIJ+Ao8SSKrh4im0f2/
RAaCRhvh2X9lxuRluQTecYx3TYisHhy1nXjwk8jIIKE59EKbyHAQ+fORHwa8CT5HRIYHY/SdyK6I
DA0f27B9keFx3exQDWPUgB4pOs7ioOhooA96+FRzXbdRXBXJ5/PNPHpBf1qRQBm/YiRPcMZ3ietN
OChm/y+e2RRXPMic/0yn002oRru4y3xeXu7gKuGeQwRfFXf8aO1PYof3Lpn/uJ6FZVCdM/ZFOnCi
opQa5l2XRg3X4k5ISAhJKvUEmti340FgDLEAAAAASUVORK5CYII=')
	#endregion
	$resetFormToolStripMenuItem.Name = 'resetFormToolStripMenuItem'
	$resetFormToolStripMenuItem.Size = '405, 38'
	$resetFormToolStripMenuItem.Text = 'Reset Form'
	$resetFormToolStripMenuItem.add_Click($resetFormToolStripMenuItem_Click)
	#
	# disconnectFromOffice365ToolStripMenuItem
	#
	#region Binary Data
	$disconnectFromOffice365ToolStripMenuItem.Image = [System.Convert]::FromBase64String('
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAAHYcAAB2HAY/l8WUAAAGpSURBVFhHvZfBasJAEIZ9ivYtctBA8gotvRWv
4lPYa9+rD9FLvXkXzEnIRRDsNzIRm+5mZydpf/gJ6Mz3j4kbdmf/ofl8XuHdYrFo8Qa/i/XrvxXB
NT4SeAl4uiHKsnwFeOgFpDzNAICW/MpzD27xRhF+AfGGi1vF+ARgTPiF3p2i8iXPfGT4EVeKyxfN
TQhsNf21onwCsA+BrVaMX0Ce8ekemmPFjBN34QWYawhFjJd3CG3PU1EUDwR+4g/96CrHEAdttauq
qkcatwKQIfTjm6xDUHeWJaxtcek6b7D821e4C/+SO6FlP5QaQsK5LrU8LinS4j5kGwvvFBtiinCB
rLVsUP0hJglXnwSu5YPiET5Ru8dNzjMfCu/8a4jY6sgS4JzNxG2I1Oow6w5utQyx5ppcHSbdgT1O
ro6kAtAcrxTjVwBqNrd/rxifANQhsNX0N4rKF81yaIjt25Om1/ZujwmAnFiC8JQlnGv6DTckAHJc
CgYMeZJwERA5qwVDYp4sXARIDorBoJAJt73brQIaHIAg2beP2zpbReD1uIzfcEvwDvsPDWbNZt8n
JMT+bi6NVQAAAABJRU5ErkJggg==')
	#endregion
	$disconnectFromOffice365ToolStripMenuItem.Name = 'disconnectFromOffice365ToolStripMenuItem'
	$disconnectFromOffice365ToolStripMenuItem.Size = '405, 38'
	$disconnectFromOffice365ToolStripMenuItem.Text = 'Disconnect from Office 365'
	$disconnectFromOffice365ToolStripMenuItem.add_Click($disconnectFromOffice365ToolStripMenuItem_Click)
	#
	# toolstripseparator1
	#
	$toolstripseparator1.Name = 'toolstripseparator1'
	$toolstripseparator1.Size = '402, 6'
	#
	# saveLogAsToolStripMenuItem
	#
	#region Binary Data
	$saveLogAsToolStripMenuItem.Image = [System.Convert]::FromBase64String('
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAAHYcAAB2HAY/l8WUAAAEESURBVFhH7ZbdDcIwDIS7AIhZkGCGqL/LMABD
IlgDJgBHOiTjxqZJ/YBQPukecHw+q2oVmkql8pN0XXcchuFGekahvBjyPPq+P+FnPjzcWkDrYfUz
SnmwAbPhHK2H10n5S4gBaxeIyltCDkB5htbD60zLl5BmlGdoPbzOtfjFlMYQwhZHX5mmaSf9b9EC
d7TZpMxeQoRNyuglRNikjF5ChE3K6CVE2KSMXkKEjTSN47jBURbx65GzcGRTZFIomqWZZN0SLL4L
lFA0SzPJuiVY/uQJ5NwFnNS9gCMbafIUImxSRi8hwoYaP/4Teqlt2wsibOjePpDhKgesUQynuXtE
VEDTvAAAoq5Rj3KhHwAAAABJRU5ErkJggg==')
	#endregion
	$saveLogAsToolStripMenuItem.ImageAlign = 'MiddleLeft'
	$saveLogAsToolStripMenuItem.Name = 'saveLogAsToolStripMenuItem'
	$saveLogAsToolStripMenuItem.Size = '405, 38'
	$saveLogAsToolStripMenuItem.Text = 'Save Log File As'
	$saveLogAsToolStripMenuItem.add_Click($saveLogAsToolStripMenuItem_Click)
	$menustrip1.ResumeLayout()
	$groupboxADSync.ResumeLayout()
	$tabpageO365Attributes.ResumeLayout()
	$groupbox3.ResumeLayout()
	$tabpageo365shared.ResumeLayout()
	$tabpagesecurityGroups.ResumeLayout()
	$tabpageO365Groups.ResumeLayout()
	$tabpageO365Address.ResumeLayout()
	$panel4.ResumeLayout()
	$tabpageO365Account.ResumeLayout()
	$panel3.ResumeLayout()
	$tabpageO365General.ResumeLayout()
	$tabcontrol2.ResumeLayout()
	$groupboxNoAdSync.ResumeLayout()
	$tabpageOffice365.ResumeLayout()
	$tabpageattributes.ResumeLayout()
	$groupboxuserprofile.ResumeLayout()
	$groupbox2.ResumeLayout()
	$tabpageProfile.ResumeLayout()
	$tabpageOrganization.ResumeLayout()
	$tabpageGroups.ResumeLayout()
	$tabpageAddress.ResumeLayout()
	$panel2.ResumeLayout()
	$tabpageAccount.ResumeLayout()
	$panel1.ResumeLayout()
	$tabpageGeneral.ResumeLayout()
	$tabcontrolUserProperties.ResumeLayout()
	$tabpage1.ResumeLayout()
	$groupboxOffice365User.ResumeLayout()
	$groupboxADUser.ResumeLayout()
	$groupbox2FA.ResumeLayout()
	$groupbox1.ResumeLayout()
	$tabpageSettings.ResumeLayout()
	$tabcontrol1.ResumeLayout()
	$MainForm.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $MainForm.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$MainForm.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$MainForm.add_FormClosed($Form_Cleanup_FormClosed)
	#Store the control values when form is closing
	$MainForm.add_Closing($Form_StoreValues_Closing)
	#Show the Form
	return $MainForm.ShowDialog()

}
#endregion Source: MainForm.psf

#region Source: Globals.ps1
	#--------------------------------------------
	# Declare Global Variables and Functions here
	#--------------------------------------------
	
	
	#Sample function that provides the location of the script
	function Get-ScriptDirectory
	{
	<#
		.SYNOPSIS
			Get-ScriptDirectory returns the proper location of the script.
	
		.OUTPUTS
			System.String
		
		.NOTES
			Returns the correct path within a packaged executable.
	#>
		[OutputType([string])]
		param ()
		if ($null -ne $hostinvocation)
		{
			Split-Path $hostinvocation.MyCommand.path
		}
		else
		{
			Split-Path $script:MyInvocation.MyCommand.Path
		}
	}
	
	
	
	
	$Sku = @{
		"O365_BUSINESS_ESSENTIALS"		     = "Office 365 Business Essentials"
		"O365_BUSINESS_PREMIUM"			     = "Office 365 Business Premium"
		"DESKLESSPACK"					     = "Office 365 (Plan K1)"
		"DESKLESSWOFFPACK"				     = "Office 365 (Plan K2)"
		"LITEPACK"						     = "Office 365 (Plan P1)"
		"EXCHANGESTANDARD"				     = "Office 365 Exchange Online Only"
		"STANDARDPACK"					     = "Enterprise Plan E1"
		"STANDARDWOFFPACK"				     = "Office 365 (Plan E2)"
		"ENTERPRISEPACK"					 = "Enterprise Plan E3"
		"ENTERPRISEPACKLRG"				     = "Enterprise Plan E3"
		"ENTERPRISEWITHSCAL"				 = "Enterprise Plan E4"
		"STANDARDPACK_STUDENT"			     = "Office 365 (Plan A1) for Students"
		"STANDARDWOFFPACKPACK_STUDENT"	     = "Office 365 (Plan A2) for Students"
		"ENTERPRISEPACK_STUDENT"			 = "Office 365 (Plan A3) for Students"
		"ENTERPRISEWITHSCAL_STUDENT"		 = "Office 365 (Plan A4) for Students"
		"STANDARDPACK_FACULTY"			     = "Office 365 (Plan A1) for Faculty"
		"STANDARDWOFFPACKPACK_FACULTY"	     = "Office 365 (Plan A2) for Faculty"
		"ENTERPRISEPACK_FACULTY"			 = "Office 365 (Plan A3) for Faculty"
		"ENTERPRISEWITHSCAL_FACULTY"		 = "Office 365 (Plan A4) for Faculty"
		"ENTERPRISEPACK_B_PILOT"			 = "Office 365 (Enterprise Preview)"
		"STANDARD_B_PILOT"				     = "Office 365 (Small Business Preview)"
		"VISIOCLIENT"					     = "Visio Pro Online"
		"POWER_BI_ADDON"					 = "Office 365 Power BI Addon"
		"POWER_BI_INDIVIDUAL_USE"		     = "Power BI Individual User"
		"POWER_BI_STANDALONE"			     = "Power BI Stand Alone"
		"POWER_BI_STANDARD"				     = "Power-BI Standard"
		"PROJECTESSENTIALS"				     = "Project Lite"
		"PROJECTCLIENT"					     = "Project Professional"
		"PROJECTONLINE_PLAN_1"			     = "Project Online"
		"PROJECTONLINE_PLAN_2"			     = "Project Online and PRO"
		"ProjectPremium"					 = "Project Online Premium"
		"ECAL_SERVICES"					     = "ECAL"
		"EMS"							     = "Enterprise Mobility Suite"
		"RIGHTSMANAGEMENT_ADHOC"			 = "Windows Azure Rights Management"
		"MCOMEETADV"						 = "PSTN conferencing"
		"SHAREPOINTSTORAGE"				     = "SharePoint storage"
		"PLANNERSTANDALONE"				     = "Planner Standalone"
		"CRMIUR"							 = "CMRIUR"
		"BI_AZURE_P1"					     = "Power BI Reporting and Analytics"
		"INTUNE_A"						     = "Windows Intune Plan A"
		"PROJECTWORKMANAGEMENT"			     = "Office 365 Planner Preview"
		"ATP_ENTERPRISE"					 = "Exchange Online Advanced Threat Protection"
		"EQUIVIO_ANALYTICS"				     = "Office 365 Advanced eDiscovery"
		"AAD_BASIC"						     = "Azure Active Directory Basic"
		"RMS_S_ENTERPRISE"				     = "Azure Active Directory Rights Management"
		"AAD_PREMIUM"					     = "Azure Active Directory Premium"
		"MFA_PREMIUM"					     = "Azure Multi-Factor Authentication"
		"STANDARDPACK_GOV"				     = "Microsoft Office 365 (Plan G1) for Government"
		"STANDARDWOFFPACK_GOV"			     = "Microsoft Office 365 (Plan G2) for Government"
		"ENTERPRISEPACK_GOV"				 = "Microsoft Office 365 (Plan G3) for Government"
		"ENTERPRISEWITHSCAL_GOV"			 = "Microsoft Office 365 (Plan G4) for Government"
		"DESKLESSPACK_GOV"				     = "Microsoft Office 365 (Plan K1) for Government"
		"ESKLESSWOFFPACK_GOV"			     = "Microsoft Office 365 (Plan K2) for Government"
		"EXCHANGESTANDARD_GOV"			     = "Microsoft Office 365 Exchange Online (Plan 1) only for Government"
		"EXCHANGEENTERPRISE_GOV"			 = "Microsoft Office 365 Exchange Online (Plan 2) only for Government"
		"SHAREPOINTDESKLESS_GOV"			 = "SharePoint Online Kiosk"
		"EXCHANGE_S_DESKLESS_GOV"		     = "Exchange Kiosk"
		"RMS_S_ENTERPRISE_GOV"			     = "Windows Azure Active Directory Rights Management"
		"OFFICESUBSCRIPTION_GOV"			 = "Office ProPlus"
		"MCOSTANDARD_GOV"				     = "Lync Plan 2G"
		"SHAREPOINTWAC_GOV"				     = "Office Online for Government"
		"SHAREPOINTENTERPRISE_GOV"		     = "SharePoint Plan 2G"
		"EXCHANGE_S_ENTERPRISE_GOV"		     = "Exchange Plan 2G"
		"EXCHANGE_S_ARCHIVE_ADDON_GOV"	     = "Exchange Online Archiving"
		"EXCHANGE_S_DESKLESS"			     = "Exchange Online Kiosk"
		"SHAREPOINTDESKLESS"				 = "SharePoint Online Kiosk"
		"SHAREPOINTWAC"					     = "Office Online"
		"YAMMER_ENTERPRISE"				     = "Yammer for the Starship Enterprise"
		"EXCHANGE_L_STANDARD"			     = "Exchange Online (Plan 1)"
		"MCOLITE"						     = "Lync Online (Plan 1)"
		"SHAREPOINTLITE"					 = "SharePoint Online (Plan 1)"
		"OFFICE_PRO_PLUS_SUBSCRIPTION_SMBIZ" = "Office ProPlus"
		"EXCHANGE_S_STANDARD_MIDMARKET"	     = "Exchange Online (Plan 1)"
		"MCOSTANDARD_MIDMARKET"			     = "Lync Online (Plan 1)"
		"SHAREPOINTENTERPRISE_MIDMARKET"	 = "SharePoint Online (Plan 1)"
		"OFFICESUBSCRIPTION"				 = "Office ProPlus"
		"YAMMER_MIDSIZE"					 = "Yammer"
		"DYN365_ENTERPRISE_PLAN1"		     = "Dynamics 365 Customer Engagement Plan Enterprise Edition"
		"ENTERPRISEPREMIUM_NOPSTNCONF"	     = "Enterprise E5 (without Audio Conferencing)"
		"ENTERPRISEPREMIUM"				     = "Enterprise E5 (with Audio Conferencing)"
		"MCOSTANDARD"					     = "Skype for Business Online Standalone Plan 2"
		"PROJECT_MADEIRA_PREVIEW_IW_SKU"	 = "Dynamics 365 for Financials for IWs"
		"STANDARDWOFFPACK_IW_STUDENT"	     = "Office 365 Education for Students"
		"STANDARDWOFFPACK_IW_FACULTY"	     = "Office 365 Education for Faculty"
		"EOP_ENTERPRISE_FACULTY"			 = "Exchange Online Protection for Faculty"
		"EXCHANGESTANDARD_STUDENT"		     = "Exchange Online (Plan 1) for Students"
		"OFFICESUBSCRIPTION_STUDENT"		 = "Office ProPlus Student Benefit"
		"STANDARDWOFFPACK_FACULTY"		     = "Office 365 Education E1 for Faculty"
		"STANDARDWOFFPACK_STUDENT"		     = "Microsoft Office 365 (Plan A2) for Students"
		"DYN365_FINANCIALS_BUSINESS_SKU"	 = "Dynamics 365 for Financials Business Edition"
		"DYN365_FINANCIALS_TEAM_MEMBERS_SKU" = "Dynamics 365 for Team Members Business Edition"
		"FLOW_FREE"						     = "Microsoft Flow Free"
		"POWER_BI_PRO"					     = "Power BI Pro"
		"O365_BUSINESS"					     = "Office 365 Business"
		"DYN365_ENTERPRISE_SALES"		     = "Dynamics Office 365 Enterprise Sales"
		"RIGHTSMANAGEMENT"				     = "Rights Management"
		"PROJECTPROFESSIONAL"			     = "Project Professional"
		"VISIOONLINE_PLAN1"				     = "Visio Online Plan 1"
		"EXCHANGEENTERPRISE"				 = "Exchange Online Plan 2"
		"DYN365_ENTERPRISE_P1_IW"		     = "Dynamics 365 P1 Trial for Information Workers"
		"DYN365_ENTERPRISE_TEAM_MEMBERS"	 = "Dynamics 365 For Team Members Enterprise Edition"
		"CRMSTANDARD"					     = "Microsoft Dynamics CRM Online Professional"
		"EXCHANGEARCHIVE_ADDON"			     = "Exchange Online Archiving For Exchange Online"
		"EXCHANGEDESKLESS"				     = "Exchange Online Kiosk"
		"SPZA_IW"						     = "App Connect"
		"WINDOWS_STORE"					     = "Windows Store for Business"
		"MCOEV"							     = "Microsoft Phone System"
		"VIDEO_INTEROP"					     = "Polycom Skype Meeting Video Interop for Skype for Business"
		"SPE_E5"							 = "Microsoft 365 E5"
		"SPE_E3"							 = "Microsoft 365 E3"
		"ATA"							     = "Advanced Threat Analytics"
		"MCOPSTN2"						     = "Domestic and International Calling Plan"
		"FLOW_P1"						     = "Microsoft Flow Plan 1"
		"FLOW_P2"						     = "Microsoft Flow Plan 2"
	}
	
	Import-Module ActiveDirectory -ErrorAction SilentlyContinue
	Import-Module ADSync -ErrorAction SilentlyContinue
	$ADSyncModule = Get-Module | Where-Object { $_.Name -eq "ADSync" } -ErrorAction SilentlyContinue
	
	#region Get-DateSortable
	function Get-datesortable
	{
		$global:datesortable = Get-Date -Format "HH':'mm':'ss"
		return $global:datesortable
	}#endregion Get-DateSortable
	
	#region Add-Logs
	function Add-Logs
	{
		[CmdletBinding()]
		param ($text)
		Get-datesortable
		$console.Text += "[$global:datesortable] - $text
"
		Set-Alias alogs Add-Logs -Description "Add content to the TextBoxLogs"
		Set-Alias Add-Log Add-Logs -Description "Add content to the TextBoxLogs"
	}#endregion Add Logs
	
	#Sample variable that provides the location of the script
	[string]$ScriptDirectory = Get-ScriptDirectory
	
	
	
#endregion Source: Globals.ps1

#region Source: ChildForm.psf
function Show-ChildForm_psf
{
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
XAMAAB+LCAAAAAAABABlk0ePo1oQhfdI/IfWbK80JEfJ3RLBgDHBJGO8I1xyzvDrX0+/zUhTq6M6
qs05X10MGNQT7FbOG7yPb9GndfX5i/pN/PpCkY+Pi9alcVp5BZ8WUPVK+MUmaRHydVf+bvrogv3j
/1z98b+SouYJVcf9OaZpVuNY+v9haE7NCWLCN9pORmAAGjjyMb2D5kocTd80OTO7jo3QHjzbBHqe
nH2lNyc/dp8Rimx4ZZm35blc1bTmU6d6b+L+RC3wJBUgtlfvcH/JcyyVM7kQulCq91JJPJnKgyGI
LO08hhKvUFNOsfCBIv716nejgRPMZGd4lNpDYs6EwXqWbYlF+Wwh96bbVh1jZW+ZgcWXFgPFhFBc
mdkbdpEnjgssDfIA7FFk1UbuHlRtE7x3Qjo0g3EXxNFJd9LTYc4sqdX8ZLajmdHlbh+/bk68Clx6
Ou1qjIuSyV/CQysKMb4QZogiFjvvTGmaj3OqJKT2YMSjzob4OkHNNJoAai6h7TlKU8VGL/Jd2dub
X1hy4P4J/v4dPDsKIdxAN1MBiji41b4049R3YXR6L9b5RqTAxNrH8Jrmabe0uXPYLLvrnq+1O/fd
w3u/5epYddwD5GoBPaNTeVV2aXIEKEJuYNwLj7HMtCQs+7mV3sK6s7mgVVZiWD0Ri6Gg2xlzSAne
72aVWeOlSAbdWOllnLjApGQpEIQGnnMU4aboNl71KIrgnXejl1XWQLglzyBg0kaXWkiTriVq+/rM
CwVgyEXy/Lyurs/vmmV5lAsvm4A5R+ekf6EIdoAwaypF59ZHR6qOkDG+VCVAGceAhap5qoMQdxJg
F1DBlHILXWebOGzKFNHSevWN+9iQNSfyGEpXFHnMNO5QgfZDMf35ecF+4P7BnO57WPpFCvsP7Htz
wf7+pq//APYIHNhcAwAA#>
#endregion
	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$formChildForm = New-Object 'System.Windows.Forms.Form'
	$buttonOK = New-Object 'System.Windows.Forms.Button'
	$buttonCancel = New-Object 'System.Windows.Forms.Button'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	
	$formChildForm_Load={
		#TODO: Initialize Form Controls here
		
	}
	
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$formChildForm.WindowState = $InitialFormWindowState
	}
	
	$Form_StoreValues_Closing=
	{
		#Store the control values
	}

	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$formChildForm.remove_Load($formChildForm_Load)
			$formChildForm.remove_Load($Form_StateCorrection_Load)
			$formChildForm.remove_Closing($Form_StoreValues_Closing)
			$formChildForm.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$formChildForm.SuspendLayout()
	#
	# formChildForm
	#
	$formChildForm.Controls.Add($buttonOK)
	$formChildForm.Controls.Add($buttonCancel)
	$formChildForm.AutoScaleDimensions = '13, 26'
	$formChildForm.AutoScaleMode = 'Font'
	$formChildForm.ClientSize = '616, 525'
	$formChildForm.Margin = '8, 8, 8, 8'
	$formChildForm.Name = 'formChildForm'
	$formChildForm.StartPosition = 'CenterParent'
	$formChildForm.Text = 'Child Form'
	$formChildForm.add_Load($formChildForm_Load)
	#
	# buttonOK
	#
	$buttonOK.Anchor = 'Bottom, Right'
	$buttonOK.DialogResult = 'OK'
	$buttonOK.Location = '252, 454'
	$buttonOK.Margin = '6, 6, 6, 6'
	$buttonOK.Name = 'buttonOK'
	$buttonOK.Size = '162, 46'
	$buttonOK.TabIndex = 1
	$buttonOK.Text = '&OK'
	$buttonOK.UseCompatibleTextRendering = $True
	$buttonOK.UseVisualStyleBackColor = $True
	#
	# buttonCancel
	#
	$buttonCancel.Anchor = 'Bottom, Right'
	$buttonCancel.CausesValidation = $False
	$buttonCancel.DialogResult = 'Cancel'
	$buttonCancel.Location = '427, 454'
	$buttonCancel.Margin = '6, 6, 6, 6'
	$buttonCancel.Name = 'buttonCancel'
	$buttonCancel.Size = '162, 46'
	$buttonCancel.TabIndex = 0
	$buttonCancel.Text = '&Cancel'
	$buttonCancel.UseCompatibleTextRendering = $True
	$buttonCancel.UseVisualStyleBackColor = $True
	$formChildForm.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $formChildForm.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$formChildForm.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$formChildForm.add_FormClosed($Form_Cleanup_FormClosed)
	#Store the control values when form is closing
	$formChildForm.add_Closing($Form_StoreValues_Closing)
	#Show the Form
	return $formChildForm.ShowDialog()

}
#endregion Source: ChildForm.psf

#region Source: MessageBox.psf
function Show-MessageBox_psf
{
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
ywMAAB+LCAAAAAAABABlk0mvqloQhecm/oeTOzW5m07RxHsSWtlIJ0g7Q6TfdBtR8Ndf33mTl7wa
rVTWqhqsfEc7TbpnihcxfsRfHzGWXfvnF/2b/PW9Xn19HU1c5mUbI7lEqRE36beejmOcp3w3/+7H
7Aj+Z/iJyR1uvmdRZ0jVWRCXc5xgigL37/CcQHr3x0TV3CWLgZux4p4QEhzqqse7Tz6OnbPEi5eD
Jsd4SV/voAvYeHvbGXd6vcpko7umA3K762xft+12eo9NJjNSQChxe32Bnq4qOCrz/KZ1RQlsisin
DJ9tYQa7YWSHSCtZsW2DtjXXK7hURq8WBD7g6E1bAlIf7su1ubi4Fi02dLhnOxEyt81lLqWcOPXS
nc2CA0GHAZWYl11eOuHm0labeCuuV3fmrQitPJ2hZ9fNSCMGCYjA0yVClXMrC9mKmqboKjv0eJIb
Us6qXQeVLjeHb5JCXu71Xm8kZU/E03p1TuXXMsMLlamXQgEPM6I2VpBMIS2IJjlLcMlqEdrRSB7g
idstlkZOcGkwIJ3hZFxjRWn8siDyZ+NL69VCEVXqsi7qPg8DRgGg9fI2yoVkSJbcaiD5T1/+p6/a
SpVYpLmNQWlusZQLiroIaXk5Vyi/DDn/uQbpROS31qOW8EBIe6DLZ3XaJrX29PbLhlVwNj94n57a
5WXjJzD8JedxUvuwbXOV0zaYigePMs47Re/Wq8mzJ51LbbLul6JVhmee9LvqcdseZs3phscuf1uH
hwFS4OpS8oQmb3a3wXBOtC/vATN0L/95k0mAzi1er3ybo1SrG8NR8M2TNXuT1KX03tOBaLCZuzgO
mMmQyqf97LoMGgFcRkqJAoVBZFApqjfwNrbHMSrSaL0a3mBkvFDfkRZxD56kFSd7DElHTq4xDJgM
3CfSyfiy1kLD7A+1QpQLoEq07aaTK0SsJt8k6JhPTtX79UrFNx+HsFB6ZAoJYAFlM60ZACZtrsWm
93l2zz/gFFfRBX5Q+XMEPyj9QMWNY9rcUJmOX+CzOYL/wvv9Fw6EVrnLAwAA#>
#endregion
	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$form1 = New-Object 'System.Windows.Forms.Form'
	$messageboxlabel = New-Object 'System.Windows.Forms.TextBox'
	$buttonOK = New-Object 'System.Windows.Forms.Button'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	$form1_Load={
		$messageboxlabel.Text = $InfoMessage
		$form1.Text = $InfoTitle
		
	}
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$form1.WindowState = $InitialFormWindowState
	}
	
	$Form_StoreValues_Closing=
	{
		#Store the control values
		$script:MessageBox_messageboxlabel = $messageboxlabel.Text
	}

	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$form1.remove_Load($form1_Load)
			$form1.remove_Load($Form_StateCorrection_Load)
			$form1.remove_Closing($Form_StoreValues_Closing)
			$form1.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$form1.SuspendLayout()
	#
	# form1
	#
	$form1.Controls.Add($messageboxlabel)
	$form1.Controls.Add($buttonOK)
	$form1.AcceptButton = $buttonOK
	$form1.AutoScaleDimensions = '13, 26'
	$form1.AutoScaleMode = 'Font'
	$form1.ClientSize = '873, 254'
	$form1.FormBorderStyle = 'FixedDialog'
	$form1.Margin = '13, 12, 13, 12'
	$form1.MaximizeBox = $False
	$form1.MinimizeBox = $False
	$form1.Name = 'form1'
	$form1.StartPosition = 'CenterScreen'
	$form1.Text = 'Form'
	$form1.add_Load($form1_Load)
	#
	# messageboxlabel
	#
	$messageboxlabel.BackColor = 'Menu'
	$messageboxlabel.BorderStyle = 'None'
	$messageboxlabel.Location = '28, 26'
	$messageboxlabel.Margin = '13, 12, 13, 12'
	$messageboxlabel.Multiline = $True
	$messageboxlabel.Name = 'messageboxlabel'
	$messageboxlabel.Size = '819, 135'
	$messageboxlabel.TabIndex = 1
	#
	# buttonOK
	#
	$buttonOK.Anchor = 'Bottom, Right'
	$buttonOK.DialogResult = 'OK'
	$buttonOK.Location = '685, 184'
	$buttonOK.Margin = '6, 6, 6, 6'
	$buttonOK.Name = 'buttonOK'
	$buttonOK.Size = '162, 46'
	$buttonOK.TabIndex = 0
	$buttonOK.Text = '&OK'
	$buttonOK.UseCompatibleTextRendering = $True
	$buttonOK.UseVisualStyleBackColor = $True
	$form1.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $form1.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$form1.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$form1.add_FormClosed($Form_Cleanup_FormClosed)
	#Store the control values when form is closing
	$form1.add_Closing($Form_StoreValues_Closing)
	#Show the Form
	return $form1.ShowDialog()

}
#endregion Source: MessageBox.psf

#Start the application
Main ($CommandLine)
